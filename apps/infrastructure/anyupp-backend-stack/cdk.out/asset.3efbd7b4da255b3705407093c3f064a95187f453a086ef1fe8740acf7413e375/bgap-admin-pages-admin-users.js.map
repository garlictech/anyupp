{"version":3,"sources":["./libs/admin/pages/admin-users/src/lib/components/admin-user-role-form/admin-user-role-form.component.ts","./libs/admin/pages/admin-users/src/lib/components/admin-user-role-form/admin-user-role-form.component.html","./libs/admin/pages/admin-users/src/lib/components/admin-user-form/admin-user-form.component.ts","./libs/admin/pages/admin-users/src/lib/components/admin-user-form/admin-user-form.component.html","./libs/admin/pages/admin-users/src/lib/components/admin-user-list/admin-user-list.component.ts","./libs/admin/pages/admin-users/src/lib/components/admin-user-list/admin-user-list.component.html","./libs/admin/pages/admin-users/src/lib/admin-pages-admin-users.module.ts","./libs/admin/pages/admin-users/src/index.ts","./libs/admin/pages/admin-users/src/lib/components/admin-user-list-item/admin-user-list-item.component.ts","./libs/admin/pages/admin-users/src/lib/components/admin-user-list-item/admin-user-list-item.component.html"],"names":[],"mappings":"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","file":"bgap-admin-pages-admin-users.js","sourcesContent":["import { Apollo } from 'apollo-angular';\nimport { get as _get } from 'lodash-es';\n\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AbstractFormDialogComponent } from '@bgap/admin/shared/forms';\nimport { EToasterType } from '@bgap/admin/shared/utils';\nimport { cleanObject } from '@bgap/shared/utils';\nimport { UpdateAdminUserRole } from '@bgap/api/graphql/schema';\nimport { IAdminUser } from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-admin-user-role-form',\n  templateUrl: './admin-user-role-form.component.html',\n  styleUrls: ['./admin-user-role-form.component.scss'],\n})\nexport class AdminUserRoleFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public adminUser!: IAdminUser;\n  private _apollo: Apollo;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._apollo = this._injector.get(Apollo);\n  }\n\n  get userImage(): string | undefined {\n    return this.adminUser?.profileImage || '';\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      roles: this._formBuilder.group({\n        role: ['', [Validators.required]],\n        entities: [[]],\n      }),\n    });\n\n    this.dialogForm.patchValue(this.adminUser);\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      this._apollo\n        .mutate({\n          mutation: UpdateAdminUserRole,\n          variables: {\n            data: cleanObject(this.dialogForm?.value.roles),\n            id: this.adminUser._id,\n          },\n        })\n        .subscribe(\n          () => {\n            this._toasterService.show(\n              EToasterType.SUCCESS,\n              '',\n              'common.updateSuccessful'\n            );\n            this.close();\n          },\n          error => {\n            console.error('there was an error sending the query', error);\n          }\n        );\n    }\n  }\n\n  public imageUploadCallback = (imagePath: string): void => {\n    this.dialogForm?.controls.profileImage.setValue(imagePath);\n\n    // Update existing user's image\n    if (_get(this.adminUser, '_id')) {\n      this._dataService\n        .updateAdminUserProfileImagePath(this.adminUser._id || '', imagePath)\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageUploadSuccess'\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageUploadSuccess'\n      );\n    }\n  };\n\n  public imageRemoveCallback = (): void => {\n    this.dialogForm?.controls.profileImage.setValue('');\n    delete this.adminUser.profileImage;\n\n    // Update existing user's image\n    if (_get(this.adminUser, '_id')) {\n      this._dataService\n        .updateAdminUserProfileImagePath(this.adminUser._id || '', null)\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageRemoveSuccess'\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageRemoveSuccess'\n      );\n    }\n  };\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'adminUsers.editAdminUserRole' | translate }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm!\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <div class=\"subtitle\">{{ adminUser.name }}</div>\n\n      <bgap-form-admin-role\n        [roleFormGroup]=\"dialogForm.controls.roles! | asFormGroup\"\n      ></bgap-form-admin-role>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid!\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","\nimport { GraphQLService } from '@bgap/admin/shared/data-access/data';\nimport { get as _get } from 'lodash-es';\n\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { AbstractFormDialogComponent, FormsService } from '@bgap/admin/shared/forms';\nimport { contactFormGroup, EToasterType } from '@bgap/admin/shared/utils';\nimport { cleanObject } from '@bgap/shared/utils';\nimport { EImageType, IAdminUser } from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-admin-user-form',\n  templateUrl: './admin-user-form.component.html',\n  styleUrls: ['./admin-user-form.component.scss'],\n})\nexport class AdminUserFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public adminUser!: IAdminUser;\n  public eImageType = EImageType;\n  private _formService: FormsService;\n  private _graphQLService: GraphQLService;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._formService = this._injector.get(FormsService);\n    this._graphQLService = this._injector.get(GraphQLService);\n  }\n\n  get userImage(): string {\n    return this.adminUser?.profileImage || '';\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      name: ['', [Validators.required]],\n      ...contactFormGroup(this._formBuilder),\n      profileImage: [''], // Just for file upload!!\n    });\n\n    if (this.adminUser) {\n      this.dialogForm.patchValue(this.adminUser);\n    } else {\n      // Add custom asyncValidator to check existing email\n      (<FormControl>this.dialogForm.controls.email).setAsyncValidators([\n        this._formService.adminExistingEmailValidator(this.dialogForm.controls.email || ''),\n      ]);\n    }\n  }\n\n  public async submit(): Promise<void> {\n    if (this.dialogForm?.valid) {\n      if (this.adminUser?._id) {\n          this._graphQLService.updateAdminUser(this.adminUser._id, cleanObject(this.dialogForm?.value))\n          .subscribe(\n            () => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.updateSuccessful'\n              );\n              this.close();\n            },\n            error => {\n              console.error('there was an error sending the query', error);\n            }\n          );\n      } else {\n      this._graphQLService.createAdminUser(cleanObject(this.dialogForm?.value))\n          .subscribe(\n            () => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.insertSuccessful'\n              );\n              this.close();\n            },\n            error => {\n              console.error('there was an error sending the query', error);\n            }\n          );\n      }\n    }\n  }\n\n  public imageUploadCallback = (imagePath: string): void => {\n    this.dialogForm?.controls.profileImage.setValue(imagePath);\n\n    // Update existing user's image\n    if (_get(this.adminUser, '_id')) {\n      this._dataService\n        .updateAdminUserProfileImagePath(this.adminUser._id || '', imagePath)\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageUploadSuccess'\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageUploadSuccess'\n      );\n    }\n  };\n\n  public imageRemoveCallback = (): void => {\n    this.dialogForm?.controls.profileImage.setValue('');\n\n    if (this.adminUser) {\n      delete this.adminUser.profileImage;\n    }\n\n    // Update existing user's image\n    if (_get(this.adminUser, '_id')) {\n      this._dataService\n        .updateAdminUserProfileImagePath(this.adminUser._id || '', null)\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageRemoveSuccess'\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageRemoveSuccess'\n      );\n    }\n  };\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{\n        (adminUser && adminUser._id\n          ? 'adminUsers.editAdminUser'\n          : 'adminUsers.newAdminUser'\n        ) | translate\n      }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm!\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <div class=\"row\">\n        <div class=\"col-md-8\"></div>\n        <div class=\"col-md-4\">\n          <bgap-form-clickable-image-input\n            [imagePath]=\"userImage\"\n            [imageType]=\"eImageType.JPEG\"\n            [uploadCallbackFn]=\"imageUploadCallback\"\n            [removeCallbackFn]=\"imageRemoveCallback\"\n            [maxSize]=\"480\"\n            uploadFolderPath=\"/users/\"\n            width=\"80px\"\n            height=\"80px\"\n            borderRadius=\"50%\"\n          ></bgap-form-clickable-image-input>\n        </div>\n      </div>\n\n      <bgap-form-text-input\n        caption=\"common.name\"\n        type=\"text\"\n        [control]=\"dialogForm.get('name')! | asFormControl\"\n      ></bgap-form-text-input>\n\n      <bgap-form-contact-group\n        [contactFormGroup]=\"dialogForm | asFormGroup\"\n      ></bgap-form-contact-group>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { adminUsersSelectors } from '@bgap/admin/shared/data-access/admin-users';\nimport { Observable } from 'rxjs';\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { IAdminUser } from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { AdminUserFormComponent } from '../admin-user-form/admin-user-form.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-admin-user-list',\n  templateUrl: './admin-user-list.component.html',\n  styleUrls: ['./admin-user-list.component.scss'],\n})\nexport class AdminUserListComponent implements OnDestroy {\n  public adminUsers$: Observable<IAdminUser[]>;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService\n  ) {\n    this.adminUsers$ = this._store.pipe(\n      select(adminUsersSelectors.getAllAdminUsers),\n      untilDestroyed(this)\n    );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  addUser(): void {\n    this._nbDialogService.open(AdminUserFormComponent, {\n      hasBackdrop: true,\n      closeOnBackdropClick: false,\n      hasScroll: true,\n      dialogClass: 'form-dialog',\n    });\n  }\n}\n","<nb-card class=\"h-100 mb-0\">\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'adminUsers.listTitle' | translate }}\n    </div>\n    <button\n      nbButton\n      type=\"button\"\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"addUser()\"\n    >\n      <nb-icon icon=\"plus-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-list-item *ngFor=\"let adminUser of adminUsers$ | async\">\n      <bgap-admin-user-list-item\n        class=\"w-100\"\n        [adminUser]=\"adminUser\"\n      ></bgap-admin-user-list-item>\n    </nb-list-item>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedComponentsModule } from '@bgap/admin/shared/components';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbLayoutModule,\n  NbListModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AdminUserFormComponent } from './components/admin-user-form/admin-user-form.component';\nimport { AdminUserListItemComponent } from './components/admin-user-list-item/admin-user-list-item.component';\nimport { AdminUserListComponent } from './components/admin-user-list/admin-user-list.component';\nimport { AdminUserRoleFormComponent } from './components/admin-user-role-form/admin-user-role-form.component';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AdminSharedComponentsModule,\n    AdminSharedFormsModule,\n    AdminSharedPipesModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([\n      {\n        component: AdminUserListComponent,\n        path: '',\n      },\n    ]),\n    ...NB_MODULES,\n  ],\n  declarations: [\n    AdminUserListComponent,\n    AdminUserListItemComponent,\n    AdminUserFormComponent,\n    AdminUserRoleFormComponent,\n  ],\n})\nexport class AdminPagesAdminUsersModule {}\n","import { AdminPagesAdminUsersModule } from './lib/admin-pages-admin-users.module';\n\nexport { AdminPagesAdminUsersModule };\n","import { cloneDeep as _cloneDeep } from 'lodash-es';\nimport { IAdminUser } from '@bgap/shared/types';\nimport { ConfirmDialogComponent } from '@bgap/admin/shared/components';\n\nimport { EToasterType, ToasterService } from '@bgap/admin/shared/utils';\n\nimport { Component, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\nimport { AuthService } from '@bgap/admin/shared/data-access/auth';\n\nimport { AdminUserFormComponent } from '../admin-user-form/admin-user-form.component';\nimport { AdminUserRoleFormComponent } from '../admin-user-role-form/admin-user-role-form.component';\n\n@Component({\n  selector: 'bgap-admin-user-list-item',\n  templateUrl: './admin-user-list-item.component.html',\n  styleUrls: ['./admin-user-list-item.component.scss'],\n})\nexport class AdminUserListItemComponent {\n  @Input() adminUser!: IAdminUser;\n\n  constructor(\n    private _nbDialogService: NbDialogService,\n    private _authService: AuthService,\n    private _toasterService: ToasterService\n  ) {}\n\n  editAdminUser(): void {\n    const dialog = this._nbDialogService.open(AdminUserFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.adminUser = _cloneDeep(this.adminUser);\n  }\n\n  editAdminUserRoles(): void {\n    const dialog = this._nbDialogService.open(AdminUserRoleFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.adminUser = _cloneDeep(this.adminUser);\n  }\n\n  public resetEmail(): void {\n    const dialog = this._nbDialogService.open(ConfirmDialogComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.options = {\n      message: 'auth.sendResetEmail',\n      buttons: [\n        {\n          label: 'common.ok',\n          callback: (): void => {\n            this._authService.sendPasswordResetEmail(this.adminUser.email || '').then(\n              (): void => {\n                this._toasterService.show(\n                  EToasterType.SUCCESS,\n                  '',\n                  'auth.reminderSent'\n                );\n              },\n              (): void => {\n                this._toasterService.show(\n                  EToasterType.DANGER,\n                  '',\n                  'auth.reminderError'\n                );\n              }\n            );\n          },\n          status: 'success',\n        },\n        {\n          label: 'common.cancel',\n          callback: () => {\n            /**/\n          },\n          status: 'basic',\n        },\n      ],\n    };\n  }\n}\n","<nb-user\n  class=\"float-left role-border {{ adminUser.roles!.role!.toLowerCase() }}\"\n  [name]=\"adminUser.name!\"\n  [title]=\"adminUser.email!\"\n  [picture]=\"adminUser.profileImage!\"\n></nb-user>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right\"\n  [title]=\"'common.edit' | translate\"\n  (click)=\"editAdminUser()\"\n>\n  <nb-icon icon=\"edit-outline\"></nb-icon>\n</button>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mr-2\"\n  [title]=\"'roles.editRoles' | translate\"\n  (click)=\"editAdminUserRoles()\"\n>\n  <nb-icon icon=\"shield-outline\"></nb-icon>\n</button>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mr-2\"\n  [title]=\"'auth.sendResetEmail' | translate\"\n  (click)=\"resetEmail()\"\n>\n  <nb-icon icon=\"email-outline\"></nb-icon>\n</button>\n\n<div class=\"clearfix\"></div>\n\n<div class=\"pl-5\">\n  <div class=\"subtitle-2\">\n    {{ 'roles.' + adminUser?.roles?.role! | translate }}\n  </div>\n  <div class=\"caption\" [innerHTML]=\"adminUser?.roles! | roleEntityNames\"></div>\n</div>\n"],"sourceRoot":"webpack:///"}