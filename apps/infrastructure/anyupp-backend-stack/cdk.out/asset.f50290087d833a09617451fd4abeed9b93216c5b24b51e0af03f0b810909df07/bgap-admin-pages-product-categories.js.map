{"version":3,"sources":["./libs/admin/pages/product-categories/src/index.ts","./libs/admin/pages/product-categories/src/lib/components/product-category-list-item/product-category-list-item.component.ts","./libs/admin/pages/product-categories/src/lib/components/product-category-list-item/product-category-list-item.component.html","./libs/admin/pages/product-categories/src/lib/components/product-category-list/product-category-list.component.ts","./libs/admin/pages/product-categories/src/lib/components/product-category-list/product-category-list.component.html","./libs/admin/pages/product-categories/src/lib/components/product-category-form/product-category-form.component.ts","./libs/admin/pages/product-categories/src/lib/components/product-category-form/product-category-form.component.html","./libs/admin/pages/product-categories/src/lib/admin-pages-product-categories.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAgG;AAEnD;;;;;;;;;;;;;ACF7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAoD;AAEmB;AAEtB;AAEuD;;;;;AAOjG,MAAM,gCAAgC;IAM3C,YAAoB,gBAAiC;QAAjC,qBAAgB,GAAhB,gBAAgB,CAAiB;QAF3C,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;IAEU,CAAC;IAElD,mBAAmB;QACxB,MAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,mHAA4B,EAAE;YACtE,WAAW,EAAE,aAAa;SAC3B,CAAC,CAAC;QAEH,MAAM,CAAC,YAAY,CAAC,QAAQ,CAAC,eAAe,GAAG,2DAAU,CACvD,IAAI,CAAC,eAAe,CACrB,CAAC;IACJ,CAAC;IAEM,MAAM;QACX,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,MAAM,EAAE,CAAC,CAAC;YACV,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG;SAC5C,CAAC,CAAC;IACL,CAAC;IAEM,QAAQ;QACb,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;YACvB,MAAM,EAAE,CAAC;YACT,iBAAiB,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG;SAC5C,CAAC,CAAC;IACL,CAAC;;gHA9BU,gCAAgC;gHAAhC,gCAAgC;QCb7C,wEAKW;;;QAEX,4EAQE;QAFA,wJAAS,yBAAqB,IAAC;;QAE/B,wEAAuC;QACzC,4DAAS;QAET,4EASE;QAFA,wJAAS,cAAU,IAAC;;QAEpB,wEAAuC;QACzC,4DAAS;QACT,4EASE;QAFA,wJAAS,YAAQ,IAAC;;QAElB,yEAAqC;QACvC,4DAAS;;QArCP,2JAAwC;QAUxC,0DAAmC;QAAnC,kJAAmC;QAOnC,0DAAiB;QAAjB,8EAAiB;QAWjB,0DAAkB;QAAlB,+EAAkB;;6FDjBP,gCAAgC;cAL5C,uDAAS;eAAC;gBACT,QAAQ,EAAE,iCAAiC;gBAC3C,WAAW,EAAE,6CAA6C;gBAC1D,SAAS,EAAE,CAAC,6CAA6C,CAAC;aAC3D;8GAEU,eAAe;kBAAvB,mDAAK;YACG,OAAO;kBAAf,mDAAK;YACG,MAAM;kBAAd,mDAAK;YACI,cAAc;kBAAvB,oDAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB4B;AAEwB;AACoB;AACf;AAC6B;AACtC;AAKR;AACoB;AACzB;AAE4D;;;;;;;;;;ICEpG,+EAOE;IAAA,qGAMC;IAHC,qYAAyC;IAG1C,4DAAkC;IACrC,4DAAe;;;;;IALX,0DAAmC;IAAnC,+FAAmC;;IDJ9B,4BAA4B,SAA5B,4BAA4B;IAKvC;IACE,8DAA8D;IACtD,MAAkB,EAClB,gBAAiC,EACjC,YAAyB;QAFzB,WAAM,GAAN,MAAM,CAAY;QAClB,qBAAgB,GAAhB,gBAAgB,CAAiB;QACjC,iBAAY,GAAZ,YAAY,CAAa;QAR5B,sBAAiB,GAAuB,EAAE,CAAC;QAC1C,8BAAyB,GAAa,EAAE,CAAC;IAQ9C,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,MAAM;aACR,IAAI,CACH,0DAAM,CAAC,4GAA0B,CAAC,uBAAuB,CAAC,EAC1D,0DAAG,CAAC,CAAC,QAAQ,EAAsB,EAAE,CACnC,QAAQ,CAAC,IAAI,CAAC,8EAAmB,CAAC,UAAU,CAAC,CAAC,CAC/C,EACD,4EAAc,CAAC,IAAI,CAAC,CACrB;aACA,SAAS,CAAC,CAAC,iBAAqC,EAAQ,EAAE;YACzD,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC;YAC3C,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CACzD,CAAC,CAAC,EAAU,EAAE,CAAC,CAAC,CAAC,GAAG,CACrB,CAAC;QACJ,CAAC,CAAC,CAAC;QAEL,IAAI,CAAC,MAAM;aACR,IAAI,CACH,0DAAM,CAAC,8FAAmB,CAAC,kBAAkB,CAAC,EAC9C,4EAAc,CAAC,IAAI,CAAC,CACrB;aACA,SAAS,CAAC,CAAC,eAA0C,EAAQ,EAAE;YAC9D,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,0BAA0B;IAC5B,CAAC;IAEM,kBAAkB;QACvB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,oHAA4B,EAAE;YACvD,WAAW,EAAE,IAAI;YACjB,oBAAoB,EAAE,KAAK;YAC3B,SAAS,EAAE,IAAI;YACf,WAAW,EAAE,aAAa;SAC3B,CAAC,CAAC;IACL,CAAC;IAEM,cAAc,CAAC,MAAwC;QAC5D,MAAM,GAAG,GAAG,IAAI,CAAC,yBAAyB,CAAC,OAAO,CAChD,MAAM,CAAC,iBAAiB,CACzB,CAAC;QAEF,IACE,CAAC,GAAG,IAAI,CAAC;YACP,MAAM,CAAC,MAAM,KAAK,CAAC;YACnB,GAAG,GAAG,IAAI,CAAC,yBAAyB,CAAC,MAAM,GAAG,CAAC,CAAC;YAClD,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,CAAC,EACjC;YACA,IAAI,CAAC,yBAAyB,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;YAC9C,IAAI,CAAC,yBAAyB,CAAC,MAAM,CACnC,GAAG,GAAG,MAAM,CAAC,MAAM,EACnB,CAAC,EACD,MAAM,CAAC,iBAAiB,CACzB,CAAC;YAEF,IAAI,CAAC,yBAAyB,CAAC,OAAO,CACpC,CAAC,iBAAyB,EAAE,GAAW,EAAQ,EAAE;gBAC/C,IAAI,CAAC,YAAY,CAAC,6BAA6B,CAC7C,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAC3B,iBAAiB,EACjB,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CACrB,CAAC;YACJ,CAAC,CACF,CAAC;SACH;IACH,CAAC;CACF;wGAhFY,4BAA4B;4GAA5B,4BAA4B;QCtBzC,6EACE;QAAA,iFACE;QAAA,yEACE;QAAA,uDACF;;QAAA,4DAAM;QACN,4EAQE;QAFA,oJAAS,wBAAoB,IAAC;QAE9B,wEAAuC;QACzC,4DAAS;QACX,4DAAiB;QACjB,+EACE;QAAA,0IAce;QACjB,4DAAe;QACjB,4DAAU;;QA9BJ,0DACF;QADE,0KACF;QAeiC,0DACpB;QADoB,0FACpB;;ADEJ,4BAA4B;IALxC,0EAAY,EAAE;mFAYK,iDAAK;QACK,8DAAe;QACnB,+EAAW;GATxB,4BAA4B,CAgFxC;AAhFwC;6FAA5B,4BAA4B;cAJxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,wCAAwC;aACtD;;;;;;;;;;;;;;AErBD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACf;AAEsB;AACqB;AACV;AACK;AACV;AACtB;;;;;;;;AAMrC,MAAM,4BACX,SAAQ,oFAA2B;IASnC,YAAsB,SAAmB;QACvC,KAAK,CAAC,SAAS,CAAC,CAAC;QADG,cAAS,GAAT,SAAS,CAAU;QANlC,eAAU,GAAG,6DAAU,CAAC;QA4FxB,wBAAmB,GAAG,CAAC,SAAiB,EAAQ,EAAE;;YACvD,UAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,SAAS,EAAE;YAEpD,+BAA+B;YAC/B,IAAI,qDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE;gBACrC,IAAI,CAAC,YAAY;qBACd,8BAA8B,CAC7B,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAC3B,IAAI,CAAC,eAAe,CAAC,GAAG,EACxB,SAAS,CACV;qBACA,IAAI,CAAC,GAAS,EAAE;oBACf,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,2BAA2B,CAC5B,CAAC;gBACJ,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,2BAA2B,CAC5B,CAAC;aACH;QACH,CAAC,CAAC;QAEK,wBAAmB,GAAG,GAAS,EAAE;;YACtC,UAAI,CAAC,UAAU,0CAAE,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE;YAE7C,IAAI,IAAI,CAAC,eAAe,EAAE;gBACxB,qDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,EAAE,IAAI,CAAC,CAAC;aAC3C;YAED,+BAA+B;YAC/B,IAAI,qDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE;gBACrC,IAAI,CAAC,YAAY;qBACd,8BAA8B,CAC7B,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAC3B,IAAI,CAAC,eAAe,CAAC,GAAG,EACxB,IAAI,CACL;qBACA,IAAI,CAAC,GAAS,EAAE;oBACf,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,2BAA2B,CAC5B,CAAC;gBACJ,CAAC,CAAC,CAAC;aACN;iBAAM;gBACL,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,2BAA2B,CAC5B,CAAC;aACH;QACH,CAAC,CAAC;QA3IA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,iDAAK,CAAC,CAAC;QACxC,IAAI,CAAC,MAAM;aACR,IAAI,CAAC,0DAAM,CAAC,8FAAmB,CAAC,kBAAkB,CAAC,EAAE,2DAAI,CAAC,CAAC,CAAC,CAAC;aAC7D,SAAS,CAAC,CAAC,eAA0C,EAAQ,EAAE;YAC9D,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAC1C,CAAC,CAAC,CAAC;IACP,CAAC;IAED,IAAI,SAAS;QACX,OAAO,qDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,OAAO,CAAC,CAAC;IAC7C,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,IAAI,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAC3B;gBACE,EAAE,EAAE,CAAC,EAAE,CAAC;gBACR,EAAE,EAAE,CAAC,EAAE,CAAC;gBACR,EAAE,EAAE,CAAC,EAAE,CAAC;aACT,EACD,EAAE,UAAU,EAAE,2EAAkB,EAAE,CACnC;YACD,WAAW,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAClC;gBACE,EAAE,EAAE,CAAC,EAAE,CAAC;gBACR,EAAE,EAAE,CAAC,EAAE,CAAC;gBACR,EAAE,EAAE,CAAC,EAAE,CAAC;aACT,EACD,EAAE,UAAU,EAAE,2EAAkB,EAAE,CACnC;YACD,KAAK,EAAE,CAAC,EAAE,CAAC;SACZ,CAAC,CAAC;QAEH,IAAI,IAAI,CAAC,eAAe,EAAE;YACxB,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD;IACH,CAAC;IAEM,MAAM;;QACX,UAAI,IAAI,CAAC,UAAU,0CAAE,KAAK,EAAE;YAC1B,IAAI,qDAAI,CAAC,IAAI,CAAC,eAAe,EAAE,KAAK,CAAC,EAAE;gBACrC,IAAI,CAAC,YAAY;qBACd,qBAAqB,CACpB,IAAI,CAAC,gBAAgB,IAAI,EAAE,EAC3B,IAAI,CAAC,eAAe,CAAC,GAAG,QACxB,IAAI,CAAC,UAAU,0CAAE,KAAK,CACvB;qBACA,IAAI,CACH,GAAS,EAAE;oBACT,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,yBAAyB,CAC1B,CAAC;oBACF,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC,EACD,GAAG,CAAC,EAAE;oBACJ,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;gBAC3C,CAAC,CACF,CAAC;aACL;iBAAM;gBACL,IAAI,CAAC,YAAY;qBACd,qBAAqB,CACpB,IAAI,CAAC,gBAAgB,IAAI,EAAE,QAC3B,IAAI,CAAC,UAAU,0CAAE,KAAK,CACvB;qBACA,IAAI,CACH,GAAS,EAAE;oBACT,IAAI,CAAC,eAAe,CAAC,IAAI,CACvB,qEAAY,CAAC,OAAO,EACpB,EAAE,EACF,yBAAyB,CAC1B,CAAC;oBACF,IAAI,CAAC,KAAK,EAAE,CAAC;gBACf,CAAC,EACD,GAAG,CAAC,EAAE;oBACJ,OAAO,CAAC,KAAK,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;gBAC3C,CAAC,CACF,CAAC;aACL;SACF;IACH,CAAC;;wGA9FU,4BAA4B;4GAA5B,4BAA4B;QCdzC,0EACE;QAAA,iFACE;QAAA,yEACE;QAAA,uDAMF;;QAAA,4DAAM;QACN,4EAQE;QAFA,oJAAS,WAAO,IAAC;QAEjB,wEAAwC;QAC1C,4DAAS;QACX,4DAAiB;QACjB,+EACE;QAAA,0EACE;QAD6B,wJAAY,YAAQ,IAAC;QAClD,qFAIwB;;QACxB,sFAIwB;;QACxB,sFAIwB;;QACxB,sFAIwB;;QACxB,sFAIwB;;QACxB,sFAIwB;;QAExB,kGAWmC;QAEnC,2EACE;QAAA,8EAQE;QAAA,wDACF;;QAAA,4DAAS;QACX,4DAAM;QACR,4DAAO;QACT,4DAAe;QACjB,4DAAU;;QA9EJ,0DAMF;QANE,+QAMF;QAaM,0DAAwB;QAAxB,qFAAwB;QAI1B,0DAA8D;QAA9D,4KAA8D;QAK9D,0DAA8D;QAA9D,4KAA8D;QAK9D,0DAA8D;QAA9D,4KAA8D;QAK9D,0DAAqE;QAArE,mLAAqE;QAKrE,0DAAqE;QAArE,mLAAqE;QAKrE,0DAAqE;QAArE,mLAAqE;QAIrE,0DAAuB;QAAvB,oFAAuB;QAmBrB,0DAA+B;QAA/B,4FAA+B;QAE/B,0DACF;QADE,8JACF;;6FD/DK,4BAA4B;cAJxC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,wCAAwC;aACtD;;;;;;;;;;;;;;AEbD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA+C;AACN;AACyB;AACnB;AACmB;AACA;AACZ;AAU9B;AAC8B;AAE4D;AACc;AACd;;;AAElH,MAAM,UAAU,GAAG;IACjB,6DAAc;IACd,2DAAY;IACZ,2DAAY;IACZ,2DAAY;IACZ,2DAAY;IACZ,4DAAa;IACb,mEAAgB;IAChB,6DAAc;IACd,6DAAc;CACf,CAAC;AAwBK,MAAM,iCAAiC;;gHAAjC,iCAAiC;4LAAjC,iCAAiC,kBAhBnC;YACP,4DAAY;YACZ,mEAAe;YACf,+EAAsB;YACtB,0DAAW;YACX,kEAAmB;YACnB,+EAAsB;YACtB,4DAAY,CAAC,QAAQ,CAAC;gBACpB;oBACE,SAAS,EAAE,+HAA4B;oBACvC,IAAI,EAAE,EAAE;iBACT;aACF,CAAC;YACF,GAAG,UAAU;SACd;mIAEU,iCAAiC,mBApB1C,+HAA4B;QAC5B,8HAA4B;QAC5B,6IAAgC,aAGhC,4DAAY;QACZ,mEAAe;QACf,+EAAsB;QACtB,0DAAW;QACX,kEAAmB;QACnB,+EAAsB,gEAvBxB,6DAAc;QACd,2DAAY;QACZ,2DAAY;QACZ,2DAAY;QACZ,2DAAY;QACZ,4DAAa;QACb,mEAAgB;QAChB,6DAAc;QACd,6DAAc;6FAyBH,iCAAiC;cAtB7C,sDAAQ;eAAC;gBACR,YAAY,EAAE;oBACZ,+HAA4B;oBAC5B,8HAA4B;oBAC5B,6IAAgC;iBACjC;gBACD,OAAO,EAAE;oBACP,4DAAY;oBACZ,mEAAe;oBACf,+EAAsB;oBACtB,0DAAW;oBACX,kEAAmB;oBACnB,+EAAsB;oBACtB,4DAAY,CAAC,QAAQ,CAAC;wBACpB;4BACE,SAAS,EAAE,+HAA4B;4BACvC,IAAI,EAAE,EAAE;yBACT;qBACF,CAAC;oBACF,GAAG,UAAU;iBACd;aACF","file":"bgap-admin-pages-product-categories.js","sourcesContent":["import { AdminPagesProductCategoriesModule } from './lib/admin-pages-product-categories.module';\n\nexport { AdminPagesProductCategoriesModule };\n","import { cloneDeep as _cloneDeep } from 'lodash-es';\n\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { IProductCategory } from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\n\nimport { ProductCategoryFormComponent } from '../product-category-form/product-category-form.component';\n\n@Component({\n  selector: 'bgap-product-category-list-item',\n  templateUrl: './product-category-list-item.component.html',\n  styleUrls: ['./product-category-list-item.component.scss'],\n})\nexport class ProductCategoryListItemComponent {\n  @Input() productCategory!: IProductCategory;\n  @Input() isFirst?: boolean;\n  @Input() isLast?: boolean;\n  @Output() positionChange = new EventEmitter();\n\n  constructor(private _nbDialogService: NbDialogService) {}\n\n  public editProductCategory(): void {\n    const dialog = this._nbDialogService.open(ProductCategoryFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.productCategory = _cloneDeep(\n      this.productCategory,\n    );\n  }\n\n  public moveUp(): void {\n    this.positionChange.emit({\n      change: -1,\n      productCategoryId: this.productCategory._id,\n    });\n  }\n\n  public moveDown(): void {\n    this.positionChange.emit({\n      change: 1,\n      productCategoryId: this.productCategory._id,\n    });\n  }\n}\n","<nb-user\n  class=\"float-left\"\n  [name]=\"productCategory.name | localize\"\n  [title]=\"productCategory.description | localize\"\n  [picture]=\"productCategory.image\"\n></nb-user>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right\"\n  [title]=\"'common.edit' | translate\"\n  (click)=\"editProductCategory()\"\n>\n  <nb-icon icon=\"edit-outline\"></nb-icon>\n</button>\n\n<button\n  [hidden]=\"isLast\"\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mr-2\"\n  [title]=\"'products.moveDown' | translate\"\n  (click)=\"moveDown()\"\n>\n  <nb-icon icon=\"chevron-down\"></nb-icon>\n</button>\n<button\n  [hidden]=\"isFirst\"\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mr-2\"\n  [title]=\"'products.moveUp' | translate\"\n  (click)=\"moveUp()\"\n>\n  <nb-icon icon=\"chevron-up\"></nb-icon>\n</button>\n","import { map } from 'rxjs/operators';\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { DataService } from '@bgap/admin/shared/data-access/data';\nimport { productCategoriesSelectors } from '@bgap/admin/shared/data-access/product-categories';\nimport { customNumberCompare } from '@bgap/shared/utils';\nimport {\n  IProductCategory,\n  IProductCategoryOrderChangeEvent,\n} from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { ProductCategoryFormComponent } from '../product-category-form/product-category-form.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-product-category-list',\n  templateUrl: './product-category-list.component.html',\n})\nexport class ProductCategoryListComponent implements OnInit, OnDestroy {\n  public productCategories: IProductCategory[] = [];\n  private _sortedProductCategoryIds: string[] = [];\n  private _selectedChainId?: string | undefined | null;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService,\n    private _dataService: DataService,\n  ) {}\n\n  ngOnInit(): void {\n    this._store\n      .pipe(\n        select(productCategoriesSelectors.getAllProductCategories),\n        map((products): IProductCategory[] =>\n          products.sort(customNumberCompare('position')),\n        ),\n        untilDestroyed(this),\n      )\n      .subscribe((productCategories: IProductCategory[]): void => {\n        this.productCategories = productCategories;\n        this._sortedProductCategoryIds = this.productCategories.map(\n          (p): string => p._id,\n        );\n      });\n\n    this._store\n      .pipe(\n        select(loggedUserSelectors.getSelectedChainId),\n        untilDestroyed(this),\n      )\n      .subscribe((selectedChainId: string | undefined | null): void => {\n        this._selectedChainId = selectedChainId;\n      });\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addProductCategory(): void {\n    this._nbDialogService.open(ProductCategoryFormComponent, {\n      hasBackdrop: true,\n      closeOnBackdropClick: false,\n      hasScroll: true,\n      dialogClass: 'form-dialog',\n    });\n  }\n\n  public positionChange($event: IProductCategoryOrderChangeEvent): void {\n    const idx = this._sortedProductCategoryIds.indexOf(\n      $event.productCategoryId,\n    );\n\n    if (\n      (idx >= 0 &&\n        $event.change === 1 &&\n        idx < this._sortedProductCategoryIds.length - 1) ||\n      ($event.change === -1 && idx > 0)\n    ) {\n      this._sortedProductCategoryIds.splice(idx, 1);\n      this._sortedProductCategoryIds.splice(\n        idx + $event.change,\n        0,\n        $event.productCategoryId,\n      );\n\n      this._sortedProductCategoryIds.forEach(\n        (productCategoryId: string, pos: number): void => {\n          this._dataService.updateProductCategoryPosition(\n            this._selectedChainId || '',\n            productCategoryId,\n            (pos + 1).toString(),\n          );\n        },\n      );\n    }\n  }\n}\n","<nb-card class=\"h-100 mb-0\">\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'productCategories.listTitle' | translate }}\n    </div>\n    <button\n      nbButton\n      type=\"button\"\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"addProductCategory()\"\n    >\n      <nb-icon icon=\"plus-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-list-item\n      *ngFor=\"\n        let productCategory of productCategories;\n        first as isFirst;\n        last as isLast\n      \"\n    >\n      <bgap-product-category-list-item\n        class=\"w-100\"\n        [productCategory]=\"productCategory\"\n        (positionChange)=\"positionChange($event)\"\n        [isFirst]=\"isFirst\"\n        [isLast]=\"isLast\"\n      ></bgap-product-category-list-item>\n    </nb-list-item>\n  </nb-card-body>\n</nb-card>\n","import { get as _get, set as _set } from 'lodash-es';\nimport { take } from 'rxjs/operators';\n\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { AbstractFormDialogComponent } from '@bgap/admin/shared/forms';\nimport { EToasterType, multiLangValidator } from '@bgap/admin/shared/utils';\nimport { EImageType, IProductCategory } from '@bgap/shared/types';\nimport { select, Store } from '@ngrx/store';\n\n@Component({\n  selector: 'bgap-product-category-form',\n  templateUrl: './product-category-form.component.html',\n})\nexport class ProductCategoryFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public productCategory!: IProductCategory;\n  public eImageType = EImageType;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _store: Store<any>;\n  private _selectedChainId?: string | undefined | null;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._store = this._injector.get(Store);\n    this._store\n      .pipe(select(loggedUserSelectors.getSelectedChainId), take(1))\n      .subscribe((selectedChainId: string | undefined | null): void => {\n        this._selectedChainId = selectedChainId;\n      });\n  }\n\n  get imagePath(): string {\n    return _get(this.productCategory, 'image');\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      name: this._formBuilder.group(\n        {\n          hu: [''],\n          en: [''],\n          de: [''],\n        },\n        { validators: multiLangValidator },\n      ),\n      description: this._formBuilder.group(\n        {\n          hu: [''],\n          en: [''],\n          de: [''],\n        },\n        { validators: multiLangValidator },\n      ),\n      image: [''],\n    });\n\n    if (this.productCategory) {\n      this.dialogForm.patchValue(this.productCategory);\n    }\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      if (_get(this.productCategory, '_id')) {\n        this._dataService\n          .updateProductCategory(\n            this._selectedChainId || '',\n            this.productCategory._id,\n            this.dialogForm?.value,\n          )\n          .then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.updateSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('CHAIN UPDATE ERROR', err);\n            },\n          );\n      } else {\n        this._dataService\n          .insertProductCategory(\n            this._selectedChainId || '',\n            this.dialogForm?.value,\n          )\n          .then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.insertSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('CHAIN INSERT ERROR', err);\n            },\n          );\n      }\n    }\n  }\n\n  public imageUploadCallback = (imagePath: string): void => {\n    this.dialogForm?.controls.image.setValue(imagePath);\n\n    // Update existing user's image\n    if (_get(this.productCategory, '_id')) {\n      this._dataService\n        .updateProductCategoryImagePath(\n          this._selectedChainId || '',\n          this.productCategory._id,\n          imagePath,\n        )\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageUploadSuccess',\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageUploadSuccess',\n      );\n    }\n  };\n\n  public imageRemoveCallback = (): void => {\n    this.dialogForm?.controls.image.setValue('');\n\n    if (this.productCategory) {\n      _set(this.productCategory, 'image', null);\n    }\n\n    // Update existing user's image\n    if (_get(this.productCategory, '_id')) {\n      this._dataService\n        .updateProductCategoryImagePath(\n          this._selectedChainId || '',\n          this.productCategory._id,\n          null,\n        )\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageRemoveSuccess',\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageRemoveSuccess',\n      );\n    }\n  };\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{\n        (productCategory && productCategory._id\n          ? 'productCategories.editProductCategory'\n          : 'productCategories.newProductCategory'\n        ) | translate\n      }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <bgap-form-text-input\n        caption=\"common.nameHU\"\n        type=\"text\"\n        [control]=\"dialogForm.get('name')!.get('hu')! | asFormControl\"\n      ></bgap-form-text-input>\n      <bgap-form-text-input\n        caption=\"common.nameEN\"\n        type=\"text\"\n        [control]=\"dialogForm.get('name')!.get('en')! | asFormControl\"\n      ></bgap-form-text-input>\n      <bgap-form-text-input\n        caption=\"common.nameDE\"\n        type=\"text\"\n        [control]=\"dialogForm.get('name')!.get('de')! | asFormControl\"\n      ></bgap-form-text-input>\n      <bgap-form-text-input\n        caption=\"common.descriptionHU\"\n        type=\"text\"\n        [control]=\"dialogForm.get('description')!.get('hu')! | asFormControl\"\n      ></bgap-form-text-input>\n      <bgap-form-text-input\n        caption=\"common.descriptionEN\"\n        type=\"text\"\n        [control]=\"dialogForm.get('description')!.get('en')! | asFormControl\"\n      ></bgap-form-text-input>\n      <bgap-form-text-input\n        caption=\"common.descriptionDE\"\n        type=\"text\"\n        [control]=\"dialogForm.get('description')!.get('de')! | asFormControl\"\n      ></bgap-form-text-input>\n\n      <bgap-form-clickable-image-input\n        [imagePath]=\"imagePath\"\n        [imageType]=\"eImageType.JPEG\"\n        [uploadCallbackFn]=\"imageUploadCallback\"\n        [removeCallbackFn]=\"imageRemoveCallback\"\n        [maxSize]=\"480\"\n        caption=\"common.image\"\n        uploadFolderPath=\"/product-categories/\"\n        width=\"200px\"\n        height=\"200px\"\n        borderRadius=\"0.25rem\"\n      ></bgap-form-clickable-image-input>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbListModule,\n  NbSelectModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProductCategoryFormComponent } from './components/product-category-form/product-category-form.component';\nimport { ProductCategoryListItemComponent } from './components/product-category-list-item/product-category-list-item.component';\nimport { ProductCategoryListComponent } from './components/product-category-list/product-category-list.component';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n  NbSelectModule,\n];\n\n@NgModule({\n  declarations: [\n    ProductCategoryListComponent,\n    ProductCategoryFormComponent,\n    ProductCategoryListItemComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AdminSharedFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSharedPipesModule,\n    RouterModule.forChild([\n      {\n        component: ProductCategoryListComponent,\n        path: '',\n      },\n    ]),\n    ...NB_MODULES,\n  ],\n})\nexport class AdminPagesProductCategoriesModule {}\n"],"sourceRoot":"webpack:///"}