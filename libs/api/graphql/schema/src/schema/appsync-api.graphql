type Address @aws_iam @aws_api_key @aws_cognito_user_pools {
  address: String
  city: String
  country: String
  title: String
  postalCode: String
  location: Location
}

type Location @aws_iam @aws_api_key @aws_cognito_user_pools {
  lat: Float
  lng: Float
}

input AddressInput {
  address: String
  city: String
  country: String
  title: String
  postalCode: String
  location: LocationInput
}

input LocationInput {
  lat: Float
  lng: Float
}

type AdminUser @aws_iam @aws_api_key @aws_cognito_user_pools {
  id: ID!
  name: String
  profileImage: String
  roles: AdminUserRole!
  settings: AdminUserSettings
  address: Address
  email: String
  phone: String
}

type AdminUserRole @aws_iam @aws_api_key @aws_cognito_user_pools {
  role: String!
  entities: [AdminRoleEntity]
}

type AdminRoleEntity @aws_iam @aws_api_key @aws_cognito_user_pools {
  chainId: String
  groupId: String
  unitId: String
}

type AdminUserSettings @aws_iam @aws_api_key @aws_cognito_user_pools {
  selectedChainId: String
  selectedGroupId: String
  selectedUnitId: String
  selectedProductCategoryId: String
  selectedLanguage: String
  selectedHistoryDate: Int
}

input CreateAdminUserInput {
  name: String!
  address: AddressInput
  email: String!
  phone: String
  profileImage: String
}

input AdminUserRoleInput {
  role: String!
  entities: [AdminRoleEntityInput]
}

input AdminRoleEntityInput {
  chainId: String
  groupId: String
  unitId: String
}

type Query {
  # Admin
  getAdminUser(id: ID!): AdminUser @aws_iam @aws_api_key @aws_cognito_user_pools
}

type Mutation {
  # Admin
  createAdminUser(newAdminData: CreateAdminUserInput!): Boolean!
    @aws_iam
    @aws_api_key
    @aws_cognito_user_pools
  updateAdminUser(id: ID!, newAdminData: AdminUserInput!): Boolean!
  deleteAdminUser(newAdminData: AdminUserInput!): Boolean!
    @aws_iam
    @aws_api_key
    @aws_cognito_user_pools
  updateAdminUserRole(id: ID!, newAdminRoleData: AdminUserRoleInput!): Boolean!
    @aws_iam
    @aws_api_key
    @aws_cognito_user_pools
}

type Subscription {
  adminUserChanged(id: ID!): AdminUser
    @aws_iam
    @aws_api_key
    @aws_cognito_user_pools
}
