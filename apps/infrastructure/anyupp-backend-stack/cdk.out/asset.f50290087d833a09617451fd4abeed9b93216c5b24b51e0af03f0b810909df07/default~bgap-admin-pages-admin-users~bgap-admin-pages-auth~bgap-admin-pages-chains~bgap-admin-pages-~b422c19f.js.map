{"version":3,"sources":["./node_modules/uuid/dist/esm-browser/v35.js","./node_modules/uuid/dist/esm-browser/nil.js","./node_modules/uuid/dist/esm-browser/rng.js","./node_modules/uuid/dist/esm-browser/index.js","./libs/admin/shared/forms/src/lib/components/form-product-availabilities/form-product-availabilities.component.ts","./libs/admin/shared/forms/src/lib/components/form-product-availabilities/form-product-availabilities.component.html","./node_modules/uuid/dist/esm-browser/v4.js","./libs/admin/shared/data-access/storage/src/lib/services/storage/storage.service.ts","./libs/admin/shared/forms/src/lib/admin-shared-forms.module.ts","./libs/admin/shared/forms/src/lib/components/abstract-form-dialog/abstract-form-dialog.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-staff-role/form-staff-role.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-staff-role/form-staff-role.component.html","./libs/admin/shared/forms/src/lib/components/form-unit-lanes/form-unit-lanes.component.ts","./libs/admin/shared/forms/src/lib/components/form-unit-lanes/form-unit-lanes.component.html","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-unit-admin-role/form-unit-admin-role.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-unit-admin-role/form-unit-admin-role.component.html","./node_modules/uuid/dist/esm-browser/validate.js","./node_modules/uuid/dist/esm-browser/parse.js","./libs/admin/shared/forms/src/lib/components/form-color-picker/form-color-picker.component.ts","./libs/admin/shared/forms/src/lib/components/form-color-picker/form-color-picker.component.html","./node_modules/uuid/dist/esm-browser/v5.js","./libs/admin/shared/forms/src/lib/components/form-clickable-image-input/form-clickable-image-input.component.ts","./libs/admin/shared/forms/src/lib/components/form-clickable-image-input/form-clickable-image-input.component.html","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-chain-admin-role/form-chain-admin-role.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-chain-admin-role/form-chain-admin-role.component.html","./node_modules/uuid/dist/esm-browser/regex.js","./node_modules/uuid/dist/esm-browser/v3.js","./libs/admin/shared/forms/src/lib/components/form-text-input/form-text-input.component.ts","./libs/admin/shared/forms/src/lib/components/form-text-input/form-text-input.component.html","./node_modules/uuid/dist/esm-browser/stringify.js","./libs/admin/shared/forms/src/lib/services/forms/forms.service.ts","./libs/admin/shared/forms/src/lib/components/form-product-variants/form-product-variants.component.ts","./libs/admin/shared/forms/src/lib/components/form-product-variants/form-product-variants.component.html","./libs/admin/shared/data-access/storage/src/index.ts","./node_modules/uuid/dist/esm-browser/version.js","./libs/admin/shared/forms/src/lib/components/form-select/form-select.component.ts","./libs/admin/shared/forms/src/lib/components/form-select/form-select.component.html","./libs/admin/shared/forms/src/index.ts","./libs/admin/shared/forms/src/lib/components/form-weekly-schedule/form-weekly-schedule.component.ts","./libs/admin/shared/forms/src/lib/components/form-weekly-schedule/form-weekly-schedule.component.html","./libs/admin/shared/forms/src/lib/components/form-contact-group/form-contact-group.component.ts","./libs/admin/shared/forms/src/lib/components/form-contact-group/form-contact-group.component.html","./libs/admin/shared/forms/src/lib/components/form-static-text/form-static-text.component.ts","./libs/admin/shared/forms/src/lib/components/form-static-text/form-static-text.component.html","./libs/admin/shared/forms/src/lib/components/form-checkbox/form-checkbox.component.ts","./libs/admin/shared/forms/src/lib/components/form-checkbox/form-checkbox.component.html","./node_modules/uuid/dist/esm-browser/sha1.js","./node_modules/uuid/dist/esm-browser/md5.js","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-group-admin-role/form-group-admin-role.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-group-admin-role/form-group-admin-role.component.html","./node_modules/uuid/dist/esm-browser/v1.js","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-admin-role.component.ts","./libs/admin/shared/forms/src/lib/components/form-admin-role/form-admin-role.component.html"],"names":[],"mappings":"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BAAmB,gBAAgB;AACnC;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,SAAS;AAC5B;;AAEA,mBAAmB,QAAQ;AAC3B;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,UAAU;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,mEAAI,E;;;;;;;;;;;;AC/FnB;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;;AAElD;;AAEA,mBAAmB,gBAAgB;AACnC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,cAAc;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,aAAa;AAC9B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEe,kEAAG,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtNsB;AACH;AACY;AAEmB;AACZ;AACgB;AACA;AAQH;AACzB;;;;;;;;;;ICb5C,yEACE;IAAA,0EACE;IAAA,uDAEA;IAAA,6EASE;IAFA,iWAA0B;IAE1B,yEAAwC;IAC1C,4DAAS;IACX,4DAAM;IACR,4DAAM;;;IAdF,0DAEA;IAFA,yHAEA;;;IAyBI,gFAAoE;IAAA,uDAElE;IAAA,4DAAY;;;IAFiC,gFAAoB;IAAC,0DAElE;IAFkE,gFAElE;;;IAcJ,gFAAoE;IAAA,uDAElE;IAAA,4DAAY;;;IAFiC,gFAAoB;IAAC,0DAElE;IAFkE,gFAElE;;;;IAMN,6EASE;IAFA,qUAAoB;IAEpB,yEAAuC;IAAC,uDAC1C;;IAAA,4DAAS;;IADiC,0DAC1C;IAD0C,2JAC1C;;ID3CW,2BAA2B,SAA3B,2BAA2B;IAOtC,8DAA8D;IAC9D,YAAoB,MAAkB,EAAU,YAAyB;QAArD,WAAM,GAAN,MAAM,CAAY;QAAU,iBAAY,GAAZ,YAAY,CAAa;QACvE,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YAC5C,OAAO,EAAE,CAAC,EAAE,CAAC;YACb,OAAO,EAAE,CAAC,EAAE,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,0DAAa,CAAC;YACZ,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,qFAAe,CAAC,YAAY,CAAC,CAAC;YACtD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,0DAAM,CAAC,qFAAe,CAAC,YAAY,CAAC,CAAC;YAC1C,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,YAAY,CAAC,IAAI,CACzD,gEAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CACvC;SACF,CAAC;aACC,IAAI,CAAC,4EAAc,CAAC,IAAI,CAAC,CAAC;aAC1B,SAAS,CACR,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,CAIzB,EAAQ,EAAE;YACT,sBAAsB;YACtB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa,EAAQ,EAAE;gBACrC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;oBACrB,GAAG,EAAE,KAAK,CAAC,GAAG;oBACd,KAAK,EAAE,KAAK,CAAC,IAAI;iBAClB,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,gCAAgC;YAChC,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YACzB,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAwB,EAAQ,EAAE;gBAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC;oBACvB,SAAS,EAAE,qDAAI,CACb,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAW,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,EACrD,MAAM,CACP;oBACD,SAAS,EAAE,qDAAI,CACb,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAW,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,EACrD,MAAM,CACP;iBACF,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CACF,CAAC;QAEJ,0DAAa,CAAC;YACZ,IAAI,CAAC,cAAc,CAAC,YAAY;YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,YAAY,CAAC,IAAI,CACzD,gEAAS,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CACvC;SACF,CAAC;aACC,IAAI,CAAC,4EAAc,CAAC,IAAI,CAAC,CAAC;aAC1B,SAAS,CACR,CAAC,CAAC,aAAa,EAAE,QAAQ,CAGxB,EAAQ,EAAE;YACT,IAAI,CAAC,MAAM;iBACR,IAAI,CACH,0DAAM,CAAC,qFAAe,CAAC,kBAAkB,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAClE;iBACA,IAAI,CAAC,2DAAI,CAAC,CAAC,CAAC,CAAC;iBACb,SAAS,CAAC,CAAC,MAAM,EAAQ,EAAE;gBAC1B,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBAEvB,MAAM,CAAC,OAAO,CAAC,CAAC,KAAa,EAAQ,EAAE;oBACrC,IACE,CAAC,QAAQ;yBACN,GAAG,CAAC,CAAC,CAAC,EAAU,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,EAAE,CAAC;yBACnC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,EACtB;wBACA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;4BACrB,GAAG,EAAE,KAAK,CAAC,GAAG;4BACd,KAAK,EAAE,KAAK,CAAC,IAAI;yBAClB,CAAC,CAAC;qBACJ;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC,CACF,CAAC;IACN,CAAC;IAED,WAAW;QACT,0BAA0B;IAC5B,CAAC;IAEM,QAAQ;QACb,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7C,GAAG,CAAC,IAAI,CAAC;YACP,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO;YAC1C,OAAO,EAAE,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO;SAC3C,CAAC,CAAC;QACS,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;QAExD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;YAC7B,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;SACZ,CAAC,CAAC;IACL,CAAC;IAEM,WAAW,CAAC,GAAW;QAC5B,MAAM,GAAG,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC7C,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;QAEP,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC;IAC1D,CAAC;CACF;sGAxHY,2BAA2B;2GAA3B,2BAA2B;QCvBxC,yEACE;QAAA,2EAAuB;QAAA,uDAAwC;;QAAA,4DAAQ;QACzE,4DAAM;QACN,uHAgBM;QAEN,yEACE;QAAA,yEACE;QAAA,sEACE;QAAA,2EAAuB;QAAA,uDAAqC;;QAAA,4DAAQ;QACtE,4DAAM;QACN,uEACE;QAAA,gFAIE;;QAAA,gFAAoB;QAAA,6DAAC;QAAA,4DAAY;QACjC,qIAEc;QAChB,4DAAY;QACd,4DAAM;QACR,4DAAM;QACN,0EACE;QAAA,uEACE;QAAA,4EAAuB;QAAA,wDAAqC;;QAAA,4DAAQ;QACtE,4DAAM;QAEN,gFAIE;;QAAA,gFAAoB;QAAA,6DAAC;QAAA,4DAAY;QACjC,qIAEc;QAChB,4DAAY;QACd,4DAAM;QACR,4DAAM;QAEN,uEACE;QAAA,+HAUS;QACX,4DAAM;;QAlEmB,0DAAwC;QAAxC,wJAAwC;QAE9B,0DAAmB;QAAnB,uFAAmB;QAqBzB,0DAAqC;QAArC,uJAAqC;QAK1D,0DAA8D;QAA9D,6KAA8D;QAGhC,0DAAe;QAAf,qFAAe;QAQxB,0DAAqC;QAArC,uJAAqC;QAK5D,0DAA8D;QAA9D,6KAA8D;QAGhC,0DAAe;QAAf,qFAAe;QAS9C,0DAAkC;QAAlC,kGAAkC;;ADlC1B,2BAA2B;IALvC,0EAAY,EAAE;mFAae,iDAAK,EAA6B,0DAAW;GAR9D,2BAA2B,CAwHvC;AAxHuC;6FAA3B,2BAA2B;cAJvC,uDAAS;eAAC;gBACT,QAAQ,EAAE,4BAA4B;gBACtC,WAAW,EAAE,wCAAwC;aACtD;uKAEU,OAAO;kBAAf,mDAAK;;;;;;;;;;;;;;AExBR;AAAA;AAAA;AAA2B;AACY;AACvC;AACA;AACA;;AAEA;;AAEA,cAAc;;;AAGd;AACA,mBAAmB;;AAEnB;AACA;AACA;AACA;AACA;AACA,+EAA+E;AAC/E;AACA;;AAEA;AACA,sDAAsD,+CAAG;;AAEzD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA,uEAAuE;AACvE;;AAEA,2EAA2E;;AAE3E,6DAA6D;;AAE7D;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;;AAEA;AACA;AACA,uBAAuB;;AAEvB,0BAA0B;;AAE1B;AACA;AACA;AACA;AACA,qBAAqB;;AAErB;AACA;AACA,sBAAsB;;AAEtB,mCAAmC;;AAEnC,6BAA6B;;AAE7B,iCAAiC;;AAEjC,2BAA2B;;AAE3B,iBAAiB,OAAO;AACxB;AACA;;AAEA,gBAAgB,6DAAS;AACzB;;AAEe,iEAAE,E;;;;;;;;;;;;AC9FjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgD;AAGS;AACd;AACY;;;;;;;;;;;;ICUrD,2FAG8B;;;IAF5B,yFAAyB;;;IAI3B,2FAG8B;;;IAF5B,yFAAyB;;;IAI3B,0FAG6B;;;IAF3B,yFAAyB;;;IAI3B,qFAGwB;;;IAFtB,yFAAyB;;ADpBtB,MAAM,sBAAsB;IAKjC,YAAoB,iBAAmC;QAAnC,sBAAiB,GAAjB,iBAAiB,CAAkB;QAHhD,eAAU,GAAG,6DAAU,CAAC;QAI7B,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,6DAAU,CAAC,CAAC,GAAG,CAC5C,CAAC,GAAG,EAAa,EAAE,CAAC,CAAC;YACnB,GAAG,EAAE,6DAAU,CAA0B,GAAG,CAAC,CAAC,QAAQ,EAAE;YACxD,KAAK,EAAE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CACnC,SAAS,6DAAU,CAA0B,GAAG,CAAC,EAAE,CACpD;SACF,CAAC,CACH,CAAC;IACJ,CAAC;IAED,QAAQ;QACM,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC,YAAY,CAAC,SAAS,CAChE,GAAS,EAAE;YACG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACjE,CAAC,CACF,CAAC;IACJ,CAAC;;4FAtBU,sBAAsB;sGAAtB,sBAAsB;QCXnC,8EACE;QAAA,4EAAsB;QAAA,uDAA+B;;QAAA,4DAAS;QAE9D,yEACE;QAAA,yEACE;QAAA,iFAMmB;;QACrB,4DAAM;QACR,4DAAM;QAEN,gKAG8B;QAE9B,gKAG8B;QAE9B,gKAG6B;QAE7B,sJAGwB;QAC1B,4DAAW;;QAlCY,wFAA2B;QAC1B,0DAA+B;QAA/B,+IAA+B;QAK/C,0DAAsD;QAAtD,oKAAsD;QAWzD,0DAAyD;QAAzD,6HAAyD;QAKzD,0DAAyD;QAAzD,6HAAyD;QAKzD,0DAAwD;QAAxD,4HAAwD;QAKxD,0DAAmD;QAAnD,uHAAmD;;6FDrB3C,sBAAsB;cAJlC,uDAAS;eAAC;gBACT,QAAQ,EAAE,sBAAsB;gBAChC,WAAW,EAAE,kCAAkC;aAChD;oHAEU,aAAa;kBAArB,mDAAK","file":"default~bgap-admin-pages-admin-users~bgap-admin-pages-auth~bgap-admin-pages-chains~bgap-admin-pages-~b422c19f.js","sourcesContent":["import stringify from './stringify.js';\nimport parse from './parse.js';\n\nfunction stringToBytes(str) {\n  str = unescape(encodeURIComponent(str)); // UTF8 escape\n\n  var bytes = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    bytes.push(str.charCodeAt(i));\n  }\n\n  return bytes;\n}\n\nexport var DNS = '6ba7b810-9dad-11d1-80b4-00c04fd430c8';\nexport var URL = '6ba7b811-9dad-11d1-80b4-00c04fd430c8';\nexport default function (name, version, hashfunc) {\n  function generateUUID(value, namespace, buf, offset) {\n    if (typeof value === 'string') {\n      value = stringToBytes(value);\n    }\n\n    if (typeof namespace === 'string') {\n      namespace = parse(namespace);\n    }\n\n    if (namespace.length !== 16) {\n      throw TypeError('Namespace must be array-like (16 iterable integer values, 0-255)');\n    } // Compute hash of namespace and value, Per 4.3\n    // Future: Use spread syntax when supported on all platforms, e.g. `bytes =\n    // hashfunc([...namespace, ... value])`\n\n\n    var bytes = new Uint8Array(16 + value.length);\n    bytes.set(namespace);\n    bytes.set(value, namespace.length);\n    bytes = hashfunc(bytes);\n    bytes[6] = bytes[6] & 0x0f | version;\n    bytes[8] = bytes[8] & 0x3f | 0x80;\n\n    if (buf) {\n      offset = offset || 0;\n\n      for (var i = 0; i < 16; ++i) {\n        buf[offset + i] = bytes[i];\n      }\n\n      return buf;\n    }\n\n    return stringify(bytes);\n  } // Function#name is not settable on some platforms (#270)\n\n\n  try {\n    generateUUID.name = name; // eslint-disable-next-line no-empty\n  } catch (err) {} // For CommonJS default export support\n\n\n  generateUUID.DNS = DNS;\n  generateUUID.URL = URL;\n  return generateUUID;\n}","export default '00000000-0000-0000-0000-000000000000';","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export { default as v1 } from './v1.js';\nexport { default as v3 } from './v3.js';\nexport { default as v4 } from './v4.js';\nexport { default as v5 } from './v5.js';\nexport { default as NIL } from './nil.js';\nexport { default as version } from './version.js';\nexport { default as validate } from './validate.js';\nexport { default as stringify } from './stringify.js';\nexport { default as parse } from './parse.js';","import { Component, Input } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { FormsService } from '../../services/forms/forms.service';\nimport { WEEKLY_VARIANT_AVAILABILITY } from '@bgap/admin/shared/utils';\nimport { EVariantAvailabilityType, IKeyValue } from '@bgap/shared/types';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'bgap-form-product-availabilities',\n  templateUrl: './form-product-availabilities.component.html',\n})\nexport class FormProductAvailabilitiesComponent {\n  @Input() availabilityFormArray!: FormArray;\n  @Input() currency?: string;\n  public EVariantAvailabilityType = EVariantAvailabilityType;\n  public iterativeAvailabilities: IKeyValue[];\n\n  constructor(\n    private _formsService: FormsService,\n    private _translateService: TranslateService,\n  ) {\n    this.iterativeAvailabilities = Object.keys(WEEKLY_VARIANT_AVAILABILITY).map(\n      (key): IKeyValue => ({\n        key,\n        value: this._translateService.instant(\n          WEEKLY_VARIANT_AVAILABILITY[\n            <keyof typeof WEEKLY_VARIANT_AVAILABILITY>key\n          ],\n        ),\n      }),\n    );\n  }\n\n  public availabilityTypes = [\n    {\n      key: EVariantAvailabilityType.ALWAYS,\n      value: this._translateService.instant('products.always'),\n    },\n    {\n      key: EVariantAvailabilityType.WEEKLY,\n      value: this._translateService.instant('products.weekly'),\n    },\n    {\n      key: EVariantAvailabilityType.SEASONAL,\n      value: this._translateService.instant('products.seasonal'),\n    },\n  ];\n\n  public addAvailability(): void {\n    (<FormArray>this.availabilityFormArray)?.push(\n      this._formsService.createProductAvailabilityFormGroup(),\n    );\n  }\n\n  public removeAvailability(idx: number): void {\n    (<FormArray>this.availabilityFormArray)?.removeAt(idx);\n  }\n\n  public onTypeChange(value: EVariantAvailabilityType, idx: number): void {\n    // Clear days\n    (<FormArray>this.availabilityFormArray)?.controls[idx].patchValue({\n      dayFrom: '',\n      dayTo: '',\n    });\n\n    if (value === EVariantAvailabilityType.ALWAYS) {\n      (<FormArray>this.availabilityFormArray)?.controls[idx].patchValue({\n        timeFrom: '',\n        timeTo: '',\n      });\n    }\n  }\n}\n","<div class=\"container\">\n  <ng-container\n    *ngFor=\"\n      let availability of availabilityFormArray | iterableAbstractControls;\n      index as i;\n      first as isFirst;\n      last as isLast\n    \"\n  >\n    <hr />\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <bgap-form-select\n          [control]=\"availability.get('type')! | asFormControl\"\n          caption=\"common.type\"\n          [options]=\"availabilityTypes\"\n          (selectionChange)=\"onTypeChange($event, i)\"\n          [localize]=\"false\"\n        >\n        </bgap-form-select>\n      </div>\n\n      <div class=\"col-md-4\">\n        <bgap-form-text-input\n          [staticCaption]=\"\n            ('products.price' | translate) + ' (' + currency! + ')'\n          \"\n          type=\"number\"\n          [control]=\"availability.get('price')! | asFormControl\"\n        ></bgap-form-text-input>\n      </div>\n\n      <div class=\"col-md-4 pt-3 text-right\">\n        <button\n          nbButton\n          status=\"danger\"\n          size=\"small\"\n          shape=\"round\"\n          (click)=\"removeAvailability(i)\"\n        >\n          <nb-icon icon=\"trash-2-outline\"></nb-icon>\n        </button>\n      </div>\n    </div>\n    <div\n      class=\"row\"\n      *ngIf=\"availability.value.type !== EVariantAvailabilityType.ALWAYS\"\n    >\n      <ng-container\n        *ngIf=\"availability.value.type === EVariantAvailabilityType.WEEKLY\"\n      >\n        <div class=\"col-md-4\">\n          <bgap-form-select\n            [control]=\"availability.get('dayFrom')! | asFormControl\"\n            caption=\"products.dayFrom\"\n            [options]=\"iterativeAvailabilities\"\n            [localize]=\"false\"\n          >\n          </bgap-form-select>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-select\n            [control]=\"availability.get('dayTo')! | asFormControl\"\n            caption=\"products.dayTo\"\n            [options]=\"iterativeAvailabilities\"\n            [localize]=\"false\"\n          >\n          </bgap-form-select>\n        </div>\n      </ng-container>\n\n      <ng-container\n        *ngIf=\"availability.value.type === EVariantAvailabilityType.SEASONAL\"\n      >\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.dayFrom\"\n            type=\"date\"\n            [control]=\"availability.get('dayFrom')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.dayTo\"\n            type=\"date\"\n            [control]=\"availability.get('dayTo')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </ng-container>\n\n      <div class=\"col-md-2\">\n        <bgap-form-text-input\n          caption=\"products.timeFrom\"\n          type=\"text\"\n          [control]=\"availability.get('timeFrom')! | asFormControl\"\n        ></bgap-form-text-input>\n      </div>\n      <div class=\"col-md-2\">\n        <bgap-form-text-input\n          caption=\"products.timeTo\"\n          type=\"text\"\n          [control]=\"availability.get('timeTo')! | asFormControl\"\n        ></bgap-form-text-input>\n      </div>\n    </div>\n\n    <ng-container *ngIf=\"availability.errors\">\n      <div class=\"form-error-msg\" *ngIf=\"availability.errors.dayInterval\">\n        {{ 'errors.availabilityWeeklyDateInterval' | translate }}\n      </div>\n      <div class=\"form-error-msg\" *ngIf=\"availability.errors.timeInterval\">\n        {{ 'errors.availabilityWeeklyTimeInterval' | translate }}\n      </div>\n    </ng-container>\n  </ng-container>\n</div>\n\n<button\n  nbButton\n  type=\"button\"\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mt-3\"\n  (click)=\"addAvailability()\"\n>\n  <nb-icon icon=\"plus-outline\"></nb-icon>\n  {{ 'products.addAvailability' | translate }}\n</button>\n","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v1 as uuidV1 } from 'uuid';\n\nimport { Injectable } from '@angular/core';\nimport { AngularFireStorage } from '@angular/fire/storage';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class StorageService {\n  constructor(private _angularFireStorage: AngularFireStorage) {}\n\n  public uploadFile(folderPath: string, file: File): Promise<string> {\n    const uuid = uuidV1();\n    const ext = file.name.split('.').pop();\n    const ref = this._angularFireStorage.ref(`${folderPath}${uuid}.${ext}`);\n\n    return ref\n      .put(file)\n      .then((): Promise<string> => ref.getDownloadURL().toPromise());\n  }\n\n  public removeFile(filePath: string): Promise<void> {\n    return this._angularFireStorage.storage.refFromURL(filePath).delete();\n  }\n}\n","import { ColorPickerModule } from 'ngx-color-picker';\n\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GoogleMapsModule } from '@angular/google-maps';\nimport { AdminSharedComponentsModule } from '@bgap/admin/shared/components';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbDialogModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbListModule,\n  NbSelectModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AbstractFormDialogComponent } from './components/abstract-form-dialog/abstract-form-dialog.component';\nimport { FormAdminRoleComponent } from './components/form-admin-role/form-admin-role.component';\nimport { FormChainAdminRoleComponent } from './components/form-admin-role/form-chain-admin-role/form-chain-admin-role.component';\nimport { FormGroupAdminRoleComponent } from './components/form-admin-role/form-group-admin-role/form-group-admin-role.component';\nimport { FormStaffRoleComponent } from './components/form-admin-role/form-staff-role/form-staff-role.component';\nimport { FormUnitAdminRoleComponent } from './components/form-admin-role/form-unit-admin-role/form-unit-admin-role.component';\nimport { FormCheckboxComponent } from './components/form-checkbox/form-checkbox.component';\nimport { FormClickableImageInputComponent } from './components/form-clickable-image-input/form-clickable-image-input.component';\nimport { FormColorPickerComponent } from './components/form-color-picker/form-color-picker.component';\nimport { FormContactGroupComponent } from './components/form-contact-group/form-contact-group.component';\nimport { FormProductAvailabilitiesComponent } from './components/form-product-availabilities/form-product-availabilities.component';\nimport { FormProductVariantsComponent } from './components/form-product-variants/form-product-variants.component';\nimport { FormSelectComponent } from './components/form-select/form-select.component';\nimport { FormStaticTextComponent } from './components/form-static-text/form-static-text.component';\nimport { FormTextInputComponent } from './components/form-text-input/form-text-input.component';\nimport { FormUnitLanesComponent } from './components/form-unit-lanes/form-unit-lanes.component';\nimport { FormWeeklyScheduleComponent } from './components/form-weekly-schedule/form-weekly-schedule.component';\n\nconst NB_MODULES = [\n  NbIconModule,\n  NbEvaIconsModule,\n  NbInputModule,\n  NbButtonModule,\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n  NbDialogModule,\n  NbSelectModule,\n  NbCheckboxModule,\n];\n\nconst COMPONENTS = [\n  AbstractFormDialogComponent,\n  FormChainAdminRoleComponent,\n  FormAdminRoleComponent,\n  FormTextInputComponent,\n  FormContactGroupComponent,\n  FormClickableImageInputComponent,\n  FormSelectComponent,\n  FormUnitLanesComponent,\n  FormCheckboxComponent,\n  FormWeeklyScheduleComponent,\n  FormProductVariantsComponent,\n  FormProductAvailabilitiesComponent,\n  FormChainAdminRoleComponent,\n  FormGroupAdminRoleComponent,\n  FormUnitAdminRoleComponent,\n  FormStaffRoleComponent,\n  FormColorPickerComponent,\n  FormStaticTextComponent,\n];\n\n@NgModule({\n  declarations: [...COMPONENTS],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    GoogleMapsModule,\n    ColorPickerModule,\n    AdminSharedComponentsModule,\n    AdminSharedPipesModule,\n    ...NB_MODULES,\n  ],\n  exports: [...COMPONENTS],\n})\nexport class AdminSharedFormsModule {}\n","import { Component, Injector } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { DataService } from '@bgap/admin/shared/data-access/data';\nimport { ToasterService } from '@bgap/admin/shared/utils';\nimport { NbDialogRef } from '@nebular/theme';\n\n@Component({\n  selector: 'bgap-abstract-form-dialog',\n  template: '',\n})\nexport class AbstractFormDialogComponent {\n  public dialogForm!: FormGroup;\n  protected _dataService: DataService;\n  protected _formBuilder: FormBuilder;\n  protected _toasterService: ToasterService;\n  private _nbDialogRef: NbDialogRef<unknown>;\n\n  constructor(protected _injector: Injector) {\n    this._nbDialogRef = this._injector.get(NbDialogRef);\n    this._dataService = this._injector.get(DataService);\n    this._formBuilder = this._injector.get(FormBuilder);\n    this._toasterService = this._injector.get(ToasterService);\n  }\n\n  public close(): void {\n    this._nbDialogRef.close();\n  }\n}\n","import { get as _get } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { chainsSelectors } from '@bgap/admin/shared/data-access/chains';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport { unitsSelectors } from '@bgap/admin/shared/data-access/units';\nimport {\n  IAdminRoleEntity,\n  IAssignedEntityNames,\n  IChain,\n  IGroup,\n  IKeyValue,\n  IUnit,\n} from '@bgap/shared/types';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-form-staff-role',\n  templateUrl: './form-staff-role.component.html',\n})\nexport class FormStaffRoleComponent implements OnInit, OnDestroy {\n  @Input() control!: FormGroup;\n  public groupOptions: IKeyValue[];\n  public chainOptions: IKeyValue[];\n  public unitOptions: IKeyValue[];\n  public entitySelector: FormGroup;\n  public assignedUnits: IAssignedEntityNames[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formBuilder: FormBuilder) {\n    this.groupOptions = [];\n    this.chainOptions = [];\n    this.unitOptions = [];\n    this.assignedUnits = [];\n    this.entitySelector = this._formBuilder.group({\n      chainId: [''],\n      groupId: [''],\n      unitId: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this._store.pipe(select(chainsSelectors.getAllChains)),\n      this._store.pipe(select(groupsSelectors.getAllGroups)),\n      this._store.pipe(select(unitsSelectors.getAllUnits)),\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([chains, groups, units, entities]: [\n          IChain[],\n          IGroup[],\n          IUnit[],\n          IAdminRoleEntity[],\n        ]): void => {\n          // Fill the chain list\n          this.chainOptions = [];\n          chains.forEach((chain: IChain): void => {\n            this.chainOptions.push({\n              key: chain._id,\n              value: chain.name,\n            });\n          });\n\n          // Fill the assigned entity list\n          this.assignedUnits = [];\n          entities.forEach((entity: IAdminRoleEntity): void => {\n            this.assignedUnits.push({\n              chainName: _get(\n                chains.find((c): boolean => c._id === entity.chainId),\n                'name',\n              ),\n              groupName: _get(\n                groups.find((g): boolean => g._id === entity.groupId),\n                'name',\n              ),\n              unitName: _get(\n                units.find((u): boolean => u._id === entity.unitId),\n                'name',\n              ),\n            });\n          });\n        },\n      );\n\n    combineLatest([\n      this.entitySelector.valueChanges,\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([selectorValue, entities]: [\n          IAdminRoleEntity,\n          IAdminRoleEntity[],\n        ]): void => {\n          this._store\n            .pipe(\n              select(groupsSelectors.getGroupsByChainId(selectorValue.chainId)),\n            )\n            .pipe(take(1))\n            .subscribe((groups): void => {\n              this.groupOptions = [];\n\n              groups.forEach((group: IGroup): void => {\n                if (\n                  !entities\n                    .map((e): string => e.groupId || '')\n                    .includes(group._id)\n                ) {\n                  this.groupOptions.push({\n                    key: group._id,\n                    value: group.name,\n                  });\n                }\n              });\n            });\n\n          this._store\n            .pipe(\n              select(\n                unitsSelectors.getUnitsByGroupId(selectorValue.groupId || ''),\n              ),\n            )\n            .pipe(take(1))\n            .subscribe((units): void => {\n              this.unitOptions = [];\n\n              units.forEach((unit: IUnit): void => {\n                if (\n                  !entities\n                    .map((e): string => e.unitId || '')\n                    .includes(unit._id)\n                ) {\n                  this.unitOptions.push({\n                    key: unit._id,\n                    value: unit.name || '',\n                  });\n                }\n              });\n            });\n        },\n      );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addUnit(): void {\n    const arr = [...this.control.value.entities];\n    arr.push({\n      chainId: this.entitySelector.value.chainId,\n      groupId: this.entitySelector.value.groupId,\n      unitId: this.entitySelector.value.unitId,\n    });\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n\n    this.entitySelector.patchValue({\n      chainId: '',\n      groupId: '',\n      unitId: '',\n    });\n  }\n\n  public removeUnit(idx: number): void {\n    const arr = [...this.control.value.entities];\n    arr.splice(idx, 1);\n\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n  }\n}\n","<div class=\"mt-3\">\n  <label class=\"caption\">{{ 'roles.assignedGroups' | translate }}</label>\n</div>\n<div class=\"row\" *ngFor=\"let unit of assignedUnits; let idx = index\">\n  <div class=\"col-12 subtitle-2\">\n    {{ unit.chainName }} / {{ unit.groupName }} / {{ unit.unitName }}\n\n    <button\n      nbButton\n      type=\"button\"\n      status=\"danger\"\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"ml-2\"\n      (click)=\"removeUnit(idx)\"\n    >\n      <nb-icon icon=\"minus-outline\"></nb-icon>\n    </button>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectChain' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('chainId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of chainOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectGroup' | translate }}</label>\n    </div>\n\n    <nb-select\n      size=\"small\"\n      [formControl]=\"entitySelector.get('groupId')! | asFormControl\"\n    >\n      <nb-option value=\"\">-</nb-option>\n      <nb-option *ngFor=\"let option of groupOptions\" [value]=\"option.key\">{{\n        option.value\n      }}</nb-option>\n    </nb-select>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectUnit' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('unitId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of unitOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n</div>\n\n<div>\n  <button\n    *ngIf=\"entitySelector.value.unitId\"\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"mt-3\"\n    (click)=\"addUnit()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon> {{ 'roles.assign' | translate }}\n  </button>\n</div>\n","import { Component, Input, OnInit } from '@angular/core';\nimport { FormArray } from '@angular/forms';\nimport { productsSelectors } from '@bgap/admin/shared/data-access/products';\nimport { FormsService } from '../../services/forms/forms.service';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-form-unit-lanes',\n  templateUrl: './form-unit-lanes.component.html',\n  styleUrls: ['./form-unit-lanes.component.scss'],\n})\nexport class FormUnitLanesComponent implements OnInit {\n  @Input() lanesFormArray!: FormArray;\n  public usedLaneIds: string[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formsService: FormsService) {\n    this.usedLaneIds = [];\n  }\n\n  ngOnInit(): void {\n    this._store\n      .pipe(\n        select(productsSelectors.getUnitProductLaneIds()),\n        untilDestroyed(this),\n      )\n      .subscribe((laneIds: string[]): void => {\n        this.usedLaneIds = laneIds;\n      });\n  }\n\n  public addLane(): void {\n    (<FormArray>this.lanesFormArray).push(\n      this._formsService.createLaneFormGroup(),\n    );\n  }\n\n  public removeLane(idx: number): void {\n    (<FormArray>this.lanesFormArray).removeAt(idx);\n  }\n}\n","<fieldset class=\"form\">\n  <legend class=\"label\">{{ 'units.lanes' | translate }}</legend>\n  <div class=\"container\">\n    <div\n      *ngFor=\"\n        let lane of lanesFormArray['controls'];\n        index as i;\n        first as isFirst;\n        last as isLast\n      \"\n    >\n      <div class=\"row\">\n        <div class=\"col-12 col-md-6\">\n          <bgap-form-text-input\n            caption=\"common.name\"\n            type=\"text\"\n            [control]=\"lane.get('name')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-10 col-md-4\">\n          <bgap-form-color-picker\n            [control]=\"lane.get('color')! | asFormControl\"\n            caption=\"common.color\"\n          >\n          </bgap-form-color-picker>\n        </div>\n        <div class=\"col-2 col-md-2 pt-3 text-right\">\n          <button\n            nbButton\n            status=\"danger\"\n            size=\"small\"\n            shape=\"round\"\n            (click)=\"removeLane(i)\"\n            [disabled]=\"usedLaneIds.includes(lane.value._laneId)\"\n          >\n            <nb-icon icon=\"trash-2-outline\"></nb-icon>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <button\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"float-right mt-3\"\n    (click)=\"addLane()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon> {{ 'units.addLane' | translate }}\n  </button>\n</fieldset>\n","import { get as _get } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { chainsSelectors } from '@bgap/admin/shared/data-access/chains';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport { unitsSelectors } from '@bgap/admin/shared/data-access/units';\nimport {\n  IAdminRoleEntity,\n  IAssignedEntityNames,\n  IChain,\n  IGroup,\n  IKeyValue,\n  IUnit,\n} from '@bgap/shared/types';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-form-unit-admin-role',\n  templateUrl: './form-unit-admin-role.component.html',\n})\nexport class FormUnitAdminRoleComponent implements OnInit, OnDestroy {\n  @Input() control!: FormGroup;\n  public groupOptions: IKeyValue[];\n  public chainOptions: IKeyValue[];\n  public unitOptions: IKeyValue[];\n  public entitySelector: FormGroup;\n  public assignedUnits: IAssignedEntityNames[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formBuilder: FormBuilder) {\n    this.groupOptions = [];\n    this.chainOptions = [];\n    this.unitOptions = [];\n    this.assignedUnits = [];\n\n    // this.assignedUnits = [];\n    this.entitySelector = this._formBuilder.group({\n      chainId: [''],\n      groupId: [''],\n      unitId: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this._store.pipe(select(chainsSelectors.getAllChains)),\n      this._store.pipe(select(groupsSelectors.getAllGroups)),\n      this._store.pipe(select(unitsSelectors.getAllUnits)),\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([chains, groups, units, entities]: [\n          IChain[],\n          IGroup[],\n          IUnit[],\n          IAdminRoleEntity[],\n        ]): void => {\n          // Fill the chain list\n          this.chainOptions = [];\n          chains.forEach((chain: IChain): void => {\n            this.chainOptions.push({\n              key: chain._id,\n              value: chain.name,\n            });\n          });\n\n          // Fill the assigned entity list\n          this.assignedUnits = [];\n          entities.forEach((entity: IAdminRoleEntity): void => {\n            this.assignedUnits.push({\n              chainName: _get(\n                chains.find((c): boolean => c._id === entity.chainId),\n                'name',\n              ),\n              groupName: _get(\n                groups.find((g): boolean => g._id === entity.groupId),\n                'name',\n              ),\n              unitName: _get(\n                units.find((u): boolean => u._id === entity.unitId),\n                'name',\n              ),\n            });\n          });\n        },\n      );\n\n    combineLatest([\n      this.entitySelector.valueChanges,\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([selectorValue, entities]: [\n          IAdminRoleEntity,\n          IAdminRoleEntity[],\n        ]): void => {\n          this._store\n            .pipe(\n              select(groupsSelectors.getGroupsByChainId(selectorValue.chainId)),\n            )\n            .pipe(take(1))\n            .subscribe((groups): void => {\n              this.groupOptions = [];\n\n              groups.forEach((group: IGroup): void => {\n                if (\n                  !entities\n                    .map((e): string => e.groupId || '')\n                    .includes(group._id)\n                ) {\n                  this.groupOptions.push({\n                    key: group._id,\n                    value: group.name,\n                  });\n                }\n              });\n            });\n\n          this._store\n            .pipe(\n              select(\n                unitsSelectors.getUnitsByGroupId(selectorValue.groupId || ''),\n              ),\n            )\n            .pipe(take(1))\n            .subscribe((units): void => {\n              this.unitOptions = [];\n\n              units.forEach((unit: IUnit): void => {\n                if (\n                  !entities\n                    .map((e): string => e.unitId || '')\n                    .includes(unit._id)\n                ) {\n                  this.unitOptions.push({\n                    key: unit._id,\n                    value: unit.name || '',\n                  });\n                }\n              });\n            });\n        },\n      );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addUnit(): void {\n    const arr = [...this.control.value.entities];\n    arr.push({\n      chainId: this.entitySelector.value.chainId,\n      groupId: this.entitySelector.value.groupId,\n      unitId: this.entitySelector.value.unitId,\n    });\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n\n    this.entitySelector.patchValue({\n      chainId: '',\n      groupId: '',\n      unitId: '',\n    });\n  }\n\n  public removeUnit(idx: number): void {\n    const arr = [...this.control.value.entities];\n    arr.splice(idx, 1);\n\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n  }\n}\n","<div class=\"mt-3\">\n  <label class=\"caption\">{{ 'roles.assignedGroups' | translate }}</label>\n</div>\n<div class=\"row\" *ngFor=\"let unit of assignedUnits; let idx = index\">\n  <div class=\"col-12 subtitle-2\">\n    {{ unit.chainName }} / {{ unit.groupName }} / {{ unit.unitName }}\n\n    <button\n      nbButton\n      type=\"button\"\n      status=\"danger\"\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"ml-2\"\n      (click)=\"removeUnit(idx)\"\n    >\n      <nb-icon icon=\"minus-outline\"></nb-icon>\n    </button>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectChain' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('chainId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of chainOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectGroup' | translate }}</label>\n    </div>\n\n    <nb-select\n      size=\"small\"\n      [formControl]=\"entitySelector.get('groupId')! | asFormControl\"\n    >\n      <nb-option value=\"\">-</nb-option>\n      <nb-option *ngFor=\"let option of groupOptions\" [value]=\"option.key\">{{\n        option.value\n      }}</nb-option>\n    </nb-select>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectUnit' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('unitId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of unitOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n</div>\n\n<div>\n  <button\n    *ngIf=\"entitySelector.value.unitId\"\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"mt-3\"\n    (click)=\"addUnit()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon> {{ 'roles.assign' | translate }}\n  </button>\n</div>\n","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n\nfunction parse(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  var v;\n  var arr = new Uint8Array(16); // Parse ########-....-....-....-............\n\n  arr[0] = (v = parseInt(uuid.slice(0, 8), 16)) >>> 24;\n  arr[1] = v >>> 16 & 0xff;\n  arr[2] = v >>> 8 & 0xff;\n  arr[3] = v & 0xff; // Parse ........-####-....-....-............\n\n  arr[4] = (v = parseInt(uuid.slice(9, 13), 16)) >>> 8;\n  arr[5] = v & 0xff; // Parse ........-....-####-....-............\n\n  arr[6] = (v = parseInt(uuid.slice(14, 18), 16)) >>> 8;\n  arr[7] = v & 0xff; // Parse ........-....-....-####-............\n\n  arr[8] = (v = parseInt(uuid.slice(19, 23), 16)) >>> 8;\n  arr[9] = v & 0xff; // Parse ........-....-....-....-############\n  // (Use \"/\" to avoid 32-bit truncation when bit-shifting high-order bytes)\n\n  arr[10] = (v = parseInt(uuid.slice(24, 36), 16)) / 0x10000000000 & 0xff;\n  arr[11] = v / 0x100000000 & 0xff;\n  arr[12] = v >>> 24 & 0xff;\n  arr[13] = v >>> 16 & 0xff;\n  arr[14] = v >>> 8 & 0xff;\n  arr[15] = v & 0xff;\n  return arr;\n}\n\nexport default parse;","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'bgap-form-color-picker',\n  templateUrl: './form-color-picker.component.html',\n  styleUrls: ['./form-color-picker.component.scss'],\n})\nexport class FormColorPickerComponent implements OnInit {\n  @Input() control!: FormControl;\n  @Input() caption = ''; // Language key!!!\n  public color = '';\n\n  ngOnInit(): void {\n    this.color = this.control?.value || '#fff';\n  }\n\n  public onChange($event: string): void {\n    this.control?.setValue($event);\n  }\n}\n","<div class=\"form-control-group\">\n  <label class=\"caption\">{{ caption | translate }}</label>\n  <input\n    type=\"button\"\n    class=\"color-picker-input\"\n    [value]=\"color\"\n    [(colorPicker)]=\"color\"\n    [style.background]=\"color\"\n    (colorPickerChange)=\"onChange($event)\"\n  />\n</div>\n","import v35 from './v35.js';\nimport sha1 from './sha1.js';\nvar v5 = v35('v5', 0x50, sha1);\nexport default v5;","import { ImageCompressorService } from '@bgap/admin/shared/utils';\nimport { StorageService } from '@bgap/admin/shared/data-access/storage';\n\nimport { Component, ElementRef, Input, ViewChild } from '@angular/core';\nimport { EImageType } from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-form-clickable-image-input',\n  templateUrl: './form-clickable-image-input.component.html',\n  styleUrls: ['./form-clickable-image-input.component.scss'],\n})\nexport class FormClickableImageInputComponent {\n  @Input() caption = ''; // Language key!!!\n  @Input() imagePath?: string;\n  @Input() maxSize = 400;\n  @Input() imageType: EImageType = EImageType.JPEG;\n  @Input() uploadFolderPath?: string;\n\n  @Input() uploadCallbackFn!: (imagePath: string, key: string) => void;\n  @Input() removeCallbackFn!: (key: string) => void;\n  @Input() callbackParam = '';\n\n  @Input() width = '';\n  @Input() height = '';\n  @Input() borderRadius?: string;\n\n  @ViewChild('fileInput') fileInput!: ElementRef;\n\n  constructor(\n    private _storageService: StorageService,\n    private _imageCompressorService: ImageCompressorService,\n  ) {\n    this.caption = '';\n  }\n\n  get pathUrl(): string {\n    return `url(\"${this.imagePath || '#fff'}\")`;\n  }\n\n  loadImage(): void {\n    if (!this.imagePath) {\n      this.fileInput.nativeElement.click();\n    }\n  }\n\n  public fileInputListener($event: Event): void {\n    const target = $event.target as HTMLInputElement;\n    const file: File = (target.files as FileList)[0];\n\n    if (file) {\n      if (file.type === 'image/svg+xml') {\n        this._uploadFile(file);\n      } else {\n        this._imageCompressorService\n          .compress(file, this.imageType, this.maxSize)\n          .subscribe(\n            (_file): void => {\n              this._uploadFile(_file);\n            },\n            (err): void => {\n              console.error('Compress error', err);\n            },\n          );\n      }\n    }\n  }\n\n  private _uploadFile(file: File): void {\n    this._storageService.uploadFile(this.uploadFolderPath || '', file).then(\n      (filePath: string): void => {\n        this.imagePath = filePath;\n        this.uploadCallbackFn(this.imagePath, this.callbackParam);\n      },\n      (err): void => {\n        console.error('FILE UPLOAD ERROR', err);\n      },\n    );\n  }\n\n  public remove(): void {\n    if (this.imagePath) {\n      this._storageService.removeFile(this.imagePath).then(\n        (): void => {\n          this.imagePath = undefined;\n          this.removeCallbackFn(this.callbackParam);\n        },\n        (): void => {\n          this.removeCallbackFn(this.callbackParam);\n        },\n      );\n    }\n  }\n}\n","<input\n  type=\"file\"\n  accept=\"image/png, image/jpeg, image/svg+xml\"\n  (change)=\"fileInputListener($event)\"\n  #fileInput\n/>\n\n<label class=\"caption\">{{ caption | translate }}</label>\n<div\n  class=\"image-preview\"\n  [ngStyle]=\"{\n    width: width,\n    height: height,\n    background: pathUrl,\n    borderRadius: borderRadius\n  }\"\n  [ngClass]=\"{\n    clickable: !imagePath\n  }\"\n  (click)=\"loadImage()\"\n>\n  <nb-icon icon=\"plus\" *ngIf=\"!imagePath\"></nb-icon>\n  <div class=\"removeBtn clickable\" *ngIf=\"imagePath\" (click)=\"remove()\">\n    <nb-icon icon=\"minus\"></nb-icon>\n  </div>\n</div>\n","import { combineLatest } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { IAdminRoleEntity, IChain, IKeyValue } from '@bgap/shared/types';\n\nimport { chainsSelectors } from '@bgap/admin/shared/data-access/chains';\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-form-chain-admin-role',\n  templateUrl: './form-chain-admin-role.component.html',\n})\nexport class FormChainAdminRoleComponent implements OnInit, OnDestroy {\n  @Input() control!: FormGroup;\n  public chainOptions: IKeyValue[] = [];\n  public entitySelector: FormGroup;\n  public assignedChains: IChain[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formBuilder: FormBuilder) {\n    this.chainOptions = [];\n    this.entitySelector = this._formBuilder.group({\n      chainId: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this._store.pipe(select(chainsSelectors.getAllChains)),\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(([chains, entities]: [IChain[], IAdminRoleEntity[]]): void => {\n        this.chainOptions = [];\n        this.assignedChains = [];\n\n        chains.forEach((chain: IChain): void => {\n          if (!entities.map((e): string => e.chainId).includes(chain._id)) {\n            this.chainOptions.push({\n              key: chain._id,\n              value: chain.name,\n            });\n          } else {\n            this.assignedChains.push(chain);\n          }\n        });\n      });\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addChain(): void {\n    const arr = [...this.control.value.entities];\n    arr.push({\n      chainId: this.entitySelector.value.chainId,\n    });\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n\n    this.entitySelector.patchValue({\n      chainId: '',\n    });\n  }\n\n  public removeChain(idx: number): void {\n    const arr = [...this.control.value.entities];\n    arr.splice(idx, 1);\n\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n  }\n}\n","<div class=\"mt-3\">\n  <label class=\"caption\">{{ 'roles.assignedChains' | translate }}</label>\n</div>\n<div class=\"row\" *ngFor=\"let chain of assignedChains; let idx = index\">\n  <div class=\"col-12 subtitle-2\">\n    {{ chain.name }}\n\n    <button\n      nbButton\n      type=\"button\"\n      status=\"danger\"\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"ml-2\"\n      (click)=\"removeChain(idx)\"\n    >\n      <nb-icon icon=\"minus-outline\"></nb-icon>\n    </button>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectChain' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('chainId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of chainOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n</div>\n\n<div>\n  <button\n    *ngIf=\"entitySelector.value.chainId\"\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"mt-3\"\n    (click)=\"addChain()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon> {{ 'roles.assign' | translate }}\n  </button>\n</div>\n","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import v35 from './v35.js';\nimport md5 from './md5.js';\nvar v3 = v35('v3', 0x30, md5);\nexport default v3;","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { NbComponentSize } from '@nebular/theme';\n\n@Component({\n  selector: 'bgap-form-text-input',\n  templateUrl: './form-text-input.component.html',\n})\nexport class FormTextInputComponent {\n  @Input() caption = ''; // Language key!!!\n  @Input() staticCaption?: string; // Language key!!!\n  @Input() control!: FormControl;\n  @Input() type!: string;\n  @Input() fieldSize: NbComponentSize = 'small';\n\n  constructor() {\n    this.fieldSize = 'small';\n  }\n}\n","<div class=\"form-control-group\">\n  <label class=\"caption\"\n    >{{ staticCaption || (caption | translate) }}\n    <input\n      nbInput\n      [type]=\"type\"\n      fullWidth\n      [fieldSize]=\"fieldSize!\"\n      [formControl]=\"control\"\n      [autocomplete]=\"false\"\n      [status]=\"\n        control.touched && (control.errors?.required || control.invalid)\n          ? 'danger'\n          : 'basic'\n      \"\n    />\n  </label>\n</div>\n","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import { map, take } from 'rxjs/operators';\nimport { v1 as uuidV1 } from 'uuid';\n\nimport { Injectable } from '@angular/core';\nimport {\n  AbstractControl,\n  AsyncValidatorFn,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { adminUsersSelectors } from '@bgap/admin/shared/data-access/admin-users';\nimport {\n  TIME_FORMAT_PATTERN,\n  multiLangValidator,\n  productAvailabilityValidator,\n} from '@bgap/admin/shared/utils';\nimport { EVariantAvailabilityType, IAdminUser } from '@bgap/shared/types';\nimport { select, Store } from '@ngrx/store';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormsService {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formBuilder: FormBuilder) {}\n\n  public createProductVariantFormGroup = (): FormGroup => {\n    const groupConfig = {\n      _id: [uuidV1()],\n      variantName: this._formBuilder.group(\n        {\n          hu: ['', Validators.maxLength(40)],\n          en: ['', Validators.maxLength(40)],\n          de: ['', Validators.maxLength(40)],\n        },\n        { validators: multiLangValidator },\n      ),\n      pack: this._formBuilder.group({\n        size: [''],\n        unit: [''],\n      }),\n      isAvailable: [true],\n      availabilities: this._formBuilder.array([]),\n      position: [''],\n      refGroupPrice: [''],\n    };\n\n    return this._formBuilder.group(groupConfig);\n  };\n\n  public createProductAvailabilityFormGroup = (): FormGroup => {\n    return this._formBuilder.group(\n      {\n        type: [EVariantAvailabilityType.ALWAYS, [Validators.required]],\n        dayFrom: [''],\n        dayTo: [''],\n        timeFrom: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n        timeTo: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n        price: ['', [Validators.required]],\n      },\n      { validators: productAvailabilityValidator },\n    );\n  };\n\n  public createCustomDailyScheduleFormGroup = (): FormGroup => {\n    return this._formBuilder.group({\n      date: ['', [Validators.required]],\n      from: [\n        '',\n        [Validators.required, Validators.pattern(TIME_FORMAT_PATTERN)],\n      ],\n      to: ['', [Validators.required, Validators.pattern(TIME_FORMAT_PATTERN)]],\n    });\n  };\n\n  public createLaneFormGroup = (): FormGroup => {\n    return this._formBuilder.group({\n      _laneId: [uuidV1()],\n      name: ['', [Validators.required]],\n      color: ['#fff', [Validators.required]],\n    });\n  };\n\n  public adminExistingEmailValidator(\n    control: AbstractControl,\n  ): AsyncValidatorFn {\n    return () => {\n      return this._store.pipe(\n        select(adminUsersSelectors.getAdminUserByEmail(control.value)),\n        take(1),\n        map((adminUser: IAdminUser | undefined) => {\n          return adminUser ? { err: 'ADMIN_USER_EXISTS' } : null;\n        }),\n      );\n    };\n  }\n}\n","import { get as _get } from 'lodash-es';\n\nimport { Component, Input } from '@angular/core';\nimport { AbstractControl, FormArray } from '@angular/forms';\nimport { FormsService } from '../../services/forms/forms.service';\nimport { customNumberCompare } from '@bgap/shared/utils';\nimport {\n  EProductLevel,\n  IAvailability,\n  IProductVariant,\n} from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-form-product-variants',\n  templateUrl: './form-product-variants.component.html',\n})\nexport class FormProductVariantsComponent {\n  @Input() variantFormArray!: FormArray;\n  @Input() allowAddVariant: boolean;\n  @Input() productLevel?: EProductLevel;\n  @Input() currency?: string;\n\n  public EProductLevel = EProductLevel;\n\n  constructor(private _formsService: FormsService) {\n    this.allowAddVariant = true;\n  }\n\n  public addVariant(): void {\n    (<FormArray>this.variantFormArray)?.push(\n      this._formsService.createProductVariantFormGroup(),\n    );\n  }\n\n  public move(idx: number, change: number): void {\n    const arr = this.variantFormArray?.value;\n    const movingItem = arr[idx];\n\n    if (\n      (idx >= 0 && change === 1 && idx < arr.length - 1) ||\n      (change === -1 && idx > 0)\n    ) {\n      arr.splice(idx, 1);\n      arr.splice(idx + change, 0, movingItem);\n      arr.forEach((variant: IProductVariant, pos: number): void => {\n        variant.position = (pos + 1).toString();\n      });\n\n      arr.sort(customNumberCompare('position'));\n\n      (<FormArray>this.variantFormArray)?.controls.forEach(\n        (g: AbstractControl, i: number): void => {\n          g.patchValue(arr[i]);\n          (g.get('availabilities') as FormArray).clear();\n\n          _get(arr[i], 'availabilities', []).forEach(\n            (availability: IAvailability): void => {\n              const availabilityGroup = this._formsService.createProductAvailabilityFormGroup();\n              availabilityGroup.patchValue(availability);\n\n              (g.get('availabilities') as FormArray).push(availabilityGroup);\n            },\n          );\n        },\n      );\n    }\n  }\n}\n","<fieldset class=\"form\">\n  <legend class=\"label\">{{ 'products.variants' | translate }}</legend>\n  <div class=\"container\">\n    <div\n      *ngFor=\"\n        let variant of variantFormArray | iterableAbstractControls;\n        index as i;\n        first as isFirst;\n        last as isLast\n      \"\n    >\n      <!-- ORDER EDIT -->\n      <div class=\"mb-2\" *ngIf=\"productLevel !== EProductLevel.CHAIN\">\n        <!--\n        <span *ngIf=\"variant.value.variantName\">{{ variant.value.variantName | localize }}</span>\n        {{ variant.value.pack.size }}\n        {{ variant.value.pack.unit }}\n        -->\n\n        <div class=\"float-right\">\n          <button\n            type=\"button\"\n            [hidden]=\"isLast\"\n            nbButton\n            shape=\"round\"\n            size=\"tiny\"\n            [title]=\"'products.moveDown' | translate\"\n            class=\"float-right mr-2\"\n            (click)=\"move(i, 1)\"\n          >\n            <nb-icon icon=\"chevron-down\"></nb-icon>\n          </button>\n          <button\n            type=\"button\"\n            [hidden]=\"isFirst\"\n            nbButton\n            shape=\"round\"\n            size=\"tiny\"\n            [title]=\"'products.moveUp' | translate\"\n            class=\"float-right mr-2\"\n            (click)=\"move(i, -1)\"\n          >\n            <nb-icon icon=\"chevron-up\"></nb-icon>\n          </button>\n        </div>\n      </div>\n\n      <div class=\"clearfix\"></div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.variantNameHU\"\n            type=\"text\"\n            [control]=\"variant.get('variantName')!.get('hu')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.variantNameEN\"\n            type=\"text\"\n            [control]=\"variant.get('variantName')!.get('en')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.variantNameDE\"\n            type=\"text\"\n            [control]=\"variant.get('variantName')!.get('de')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.packSize\"\n            type=\"number\"\n            [control]=\"variant.get('pack')!.get('size')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"products.packUnit\"\n            type=\"text\"\n            [control]=\"variant.get('pack')!.get('unit')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n\n        <div class=\"col-md-4 pt-4\">\n          <bgap-form-checkbox\n            caption=\"products.isAvailable\"\n            [control]=\"variant.get('isAvailable')! | asFormControl\"\n          ></bgap-form-checkbox>\n        </div>\n      </div>\n\n      <!-- GROUP & UNIT -->\n      <ng-container *ngIf=\"productLevel !== EProductLevel.CHAIN\">\n        <div class=\"row\">\n          <div class=\"col-sm-3\">\n            <bgap-form-text-input\n              *ngIf=\"productLevel === EProductLevel.GROUP\"\n              caption=\"products.refPrice\"\n              type=\"number\"\n              [control]=\"variant.get('refGroupPrice')! | asFormControl\"\n            ></bgap-form-text-input>\n            <bgap-form-static-text\n              *ngIf=\"productLevel === EProductLevel.UNIT\"\n              caption=\"products.refPrice\"\n              [value]=\"\n                variant.value.refGroupPrice | currencyFormatter: currency!\n              \"\n            >\n            </bgap-form-static-text>\n          </div>\n        </div>\n\n        <bgap-form-product-availabilities\n          [availabilityFormArray]=\"variant.get('availabilities')! | asFormArray\"\n          [currency]=\"currency\"\n        ></bgap-form-product-availabilities>\n\n        <div class=\"clearfix\"></div>\n      </ng-container>\n      <!-- /GROUP & UNIT -->\n\n      <hr />\n    </div>\n  </div>\n\n  <button\n    *ngIf=\"allowAddVariant\"\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"float-right\"\n    (click)=\"addVariant()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon>\n    {{ 'products.addVariant' | translate }}\n  </button>\n</fieldset>\n","import { StorageService } from './lib/services/storage/storage.service';\n\nexport { StorageService };\n","import validate from './validate.js';\n\nfunction version(uuid) {\n  if (!validate(uuid)) {\n    throw TypeError('Invalid UUID');\n  }\n\n  return parseInt(uuid.substr(14, 1), 16);\n}\n\nexport default version;","import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { IKeyValue } from '@bgap/shared/types';\nimport { NbComponentSize } from '@nebular/theme';\n\n@Component({\n  selector: 'bgap-form-select',\n  templateUrl: './form-select.component.html',\n})\nexport class FormSelectComponent {\n  @Input() caption = ''; // Language key!!!\n  @Input() options: IKeyValue[] = [];\n  @Input() control!: FormControl;\n  @Input() forceShowEmptyOption?: boolean;\n  @Input() localize?: boolean;\n  @Input() size: NbComponentSize = 'small';\n  @Output() selectionChange = new EventEmitter();\n\n  constructor() {\n    this.forceShowEmptyOption = false;\n    this.size = 'small';\n  }\n\n  public onChange($event: Event): void {\n    if (this.selectionChange) {\n      this.selectionChange.emit($event);\n    }\n  }\n}\n","<div class=\"form-control-group\">\n  <div>\n    <label class=\"caption\">{{ caption | translate }}</label>\n  </div>\n  <div>\n    <nb-select\n      width=\"100\"\n      [size]=\"size!\"\n      [formControl]=\"control\"\n      (selectedChange)=\"onChange($event)\"\n    >\n      <nb-option value=\"\" *ngIf=\"!control.value || forceShowEmptyOption\"\n        >-</nb-option\n      >\n      <nb-option *ngFor=\"let option of options\" [value]=\"option.key\">{{\n        localize ? (option.value! | localize) : (option.value! | translate)\n      }}</nb-option>\n    </nb-select>\n  </div>\n</div>\n","import { AdminSharedFormsModule } from './lib/admin-shared-forms.module';\nimport { AbstractFormDialogComponent } from './lib/components/abstract-form-dialog/abstract-form-dialog.component';\nimport { FormsService } from './lib/services/forms/forms.service';\n\nexport { AbstractFormDialogComponent, AdminSharedFormsModule, FormsService };\n","import { Component, Input } from '@angular/core';\nimport { FormArray, FormControl } from '@angular/forms';\nimport { FormsService } from '../../services/forms/forms.service';\n\n@Component({\n  selector: 'bgap-form-weekly-schedule',\n  templateUrl: './form-weekly-schedule.component.html',\n})\nexport class FormWeeklyScheduleComponent {\n  @Input() scheduleControl!: FormControl;\n  public dayKeys: string[];\n\n  constructor(private _formsService: FormsService) {\n    this.dayKeys = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n  }\n\n  public addCustomDate(): void {\n    (<FormArray>this.scheduleControl.get('override')).push(\n      this._formsService.createCustomDailyScheduleFormGroup(),\n    );\n  }\n}\n","<fieldset class=\"form\" *ngIf=\"scheduleControl\">\n  <legend class=\"label\">{{ 'units.openingHours' | translate }}</legend>\n  <table>\n    <tr *ngFor=\"let day of dayKeys\">\n      <td class=\"caption\">{{ 'common.days.' + day | translate }}:</td>\n      <td>\n        <input\n          nbInput\n          fieldSize=\"small\"\n          [placeholder]=\"'common.hmPlaceholder' | translate\"\n          [formControl]=\"scheduleControl.get(day)!.get('from')! | asFormControl\"\n          [status]=\"\n            scheduleControl.get(day)?.get('from')?.touched &&\n            (scheduleControl.get(day)?.get('from')?.errors?.required ||\n              scheduleControl.get(day)?.get('from')?.invalid)\n              ? 'danger'\n              : 'basic'\n          \"\n        />\n      </td>\n      <td>-</td>\n      <td>\n        <input\n          nbInput\n          fieldSize=\"small\"\n          [placeholder]=\"'common.hmPlaceholder' | translate\"\n          [formControl]=\"scheduleControl.get(day)!.get('to')! | asFormControl\"\n          [status]=\"\n            scheduleControl.get(day)?.get('to')?.touched &&\n            (scheduleControl.get(day)?.get('to')?.errors?.required ||\n              scheduleControl.get(day)?.get('to')?.invalid)\n              ? 'danger'\n              : 'basic'\n          \"\n        />\n      </td>\n    </tr>\n  </table>\n\n  <hr />\n  <div class=\"label\">\n    {{ 'common.days.custom' | translate }}\n\n    <button\n      nbButton\n      type=\"button\"\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"float-right\"\n      (click)=\"addCustomDate()\"\n    >\n      <nb-icon icon=\"plus-outline\"></nb-icon>\n    </button>\n\n    <div class=\"clearfix\"></div>\n\n    <table>\n      <tr\n        *ngFor=\"\n          let customDay of scheduleControl.get('override')!\n            | iterableAbstractControls;\n          index as i\n        \"\n      >\n        <td>\n          <input\n            nbInput\n            fieldSize=\"small\"\n            [formControl]=\"customDay.get('date')! | asFormControl\"\n            type=\"date\"\n          />\n        </td>\n        <td>\n          <input\n            nbInput\n            fieldSize=\"small\"\n            [placeholder]=\"'common.hmPlaceholder' | translate\"\n            [formControl]=\"customDay.get('from')! | asFormControl\"\n            [status]=\"\n              customDay.get('from')?.touched &&\n              (customDay.get('from')?.errors?.required ||\n                customDay.get('from')?.invalid)\n                ? 'danger'\n                : 'basic'\n            \"\n          />\n        </td>\n        <td>-</td>\n        <td>\n          <input\n            nbInput\n            fieldSize=\"small\"\n            [placeholder]=\"'common.hmPlaceholder' | translate\"\n            [formControl]=\"customDay.get('to')! | asFormControl\"\n            [status]=\"\n              customDay.get('to')?.touched &&\n              (customDay.get('to')?.errors?.required ||\n                customDay.get('to')?.invalid)\n                ? 'danger'\n                : 'basic'\n            \"\n          />\n        </td>\n      </tr>\n    </table>\n  </div>\n</fieldset>\n","import { get as _get } from 'lodash-es';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Component, Input } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { GOOGLE_API_KEY } from '@bgap/admin/shared/utils';\nimport { ILocation } from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-form-contact-group',\n  templateUrl: './form-contact-group.component.html',\n})\nexport class FormContactGroupComponent {\n  @Input() contactFormGroup!: FormGroup;\n\n  constructor(private _httpClient: HttpClient) {}\n  public locateAddress(): void {\n    const a = _get(this.contactFormGroup, 'value.address.address');\n    const ci = _get(this.contactFormGroup, 'value.address.city');\n    const co = _get(this.contactFormGroup, 'value.address.country');\n    const p = _get(this.contactFormGroup, 'value.address.postalCode');\n    const query = encodeURI(`${co} ${p} ${ci} ${a}`);\n\n    this._httpClient\n      .get(\n        `https://maps.googleapis.com/maps/api/geocode/json?address=${query}&key=${GOOGLE_API_KEY}`,\n      )\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      .subscribe((response: any): void => {\n        if (response.status === 'OK' && response.results[0]) {\n          this._patchLocation(_get(response, 'results[0].geometry.location'));\n        }\n      });\n  }\n\n  public markerPositionChange($event: ILocation): void {\n    this._patchLocation($event);\n  }\n\n  private _patchLocation(location: ILocation): void {\n    if (location) {\n      this.contactFormGroup?.patchValue({\n        ...this.contactFormGroup?.value,\n        address: {\n          location,\n        },\n      });\n    }\n  }\n}\n","<fieldset class=\"form\" [formGroup]=\"contactFormGroup\">\n  <legend class=\"label\">{{ 'common.contact.contact' | translate }}</legend>\n\n  <bgap-form-text-input\n    caption=\"common.email\"\n    type=\"email\"\n    [control]=\"contactFormGroup.get('email')! | asFormControl\"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"Phone\"\n    type=\"text\"\n    [control]=\"contactFormGroup.get('phone')! | asFormControl\"\n  ></bgap-form-text-input>\n\n  <div class=\"label mt-20\">Address</div>\n  <bgap-form-text-input\n    caption=\"common.title\"\n    type=\"text\"\n    [control]=\"contactFormGroup.get('address')!.get('title')! | asFormControl\"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"common.contact.country\"\n    type=\"text\"\n    [control]=\"contactFormGroup.get('address')!.get('country')! | asFormControl\"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"common.contact.postalCode\"\n    type=\"text\"\n    [control]=\"\n      contactFormGroup.get('address')!.get('postalCode')! | asFormControl\n    \"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"common.contact.city\"\n    type=\"text\"\n    [control]=\"contactFormGroup.get('address')!.get('city')! | asFormControl\"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"common.contact.address\"\n    type=\"text\"\n    [control]=\"contactFormGroup.get('address')!.get('address')! | asFormControl\"\n  ></bgap-form-text-input>\n\n  <div class=\"row\">\n    <div class=\"col-md-6\">\n      <bgap-form-text-input\n        caption=\"common.contact.locationLat\"\n        type=\"text\"\n        [control]=\"\n          contactFormGroup.get('address')!.get('location')!.get('lat')!\n            | asFormControl\n        \"\n      ></bgap-form-text-input>\n    </div>\n    <div class=\"col-md-6\">\n      <bgap-form-text-input\n        caption=\"common.contact.locationLng\"\n        type=\"text\"\n        [control]=\"\n          contactFormGroup.get('address')!.get('location')!.get('lng')!\n            | asFormControl\n        \"\n      ></bgap-form-text-input>\n    </div>\n  </div>\n\n  <bgap-google-map\n    [markerLocation]=\"contactFormGroup.value.address.location\"\n    (positionChange)=\"markerPositionChange($event)\"\n  ></bgap-google-map>\n\n  <div class=\"mt-3\">\n    <button type=\"button\" nbButton size=\"small\" (click)=\"locateAddress()\">\n      <nb-icon icon=\"pin-outline\"></nb-icon>\n      {{ 'units.locateOnMap' | translate }}\n    </button>\n  </div>\n</fieldset>\n","import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'bgap-form-static-text',\n  templateUrl: './form-static-text.component.html',\n  styleUrls: ['./form-static-text.component.scss'],\n})\nexport class FormStaticTextComponent {\n  @Input() caption = ''; // Language key!!!\n  @Input() staticCaption?: string; // Language key!!!\n  @Input() value = '';\n}\n","<div class=\"form-control-group\">\n  <label class=\"caption\">{{ staticCaption || (caption | translate) }}</label>\n  <div class=\"subtitle-2\">\n    {{ value }}\n  </div>\n</div>\n","import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'bgap-form-checkbox',\n  templateUrl: './form-checkbox.component.html',\n})\nexport class FormCheckboxComponent {\n  @Input() caption = ''; // Language key!!!\n  @Input() control!: FormControl;\n}\n","<div class=\"form-control-group\">\n  <nb-checkbox [formControl]=\"control\">\n    <label class=\"caption\"> {{ caption | translate }}</label>\n  </nb-checkbox>\n</div>\n","// Adapted from Chris Veness' SHA1 code at\n// http://www.movable-type.co.uk/scripts/sha1.html\nfunction f(s, x, y, z) {\n  switch (s) {\n    case 0:\n      return x & y ^ ~x & z;\n\n    case 1:\n      return x ^ y ^ z;\n\n    case 2:\n      return x & y ^ x & z ^ y & z;\n\n    case 3:\n      return x ^ y ^ z;\n  }\n}\n\nfunction ROTL(x, n) {\n  return x << n | x >>> 32 - n;\n}\n\nfunction sha1(bytes) {\n  var K = [0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xca62c1d6];\n  var H = [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];\n\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = [];\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes.push(msg.charCodeAt(i));\n    }\n  } else if (!Array.isArray(bytes)) {\n    // Convert Array-like to Array\n    bytes = Array.prototype.slice.call(bytes);\n  }\n\n  bytes.push(0x80);\n  var l = bytes.length / 4 + 2;\n  var N = Math.ceil(l / 16);\n  var M = new Array(N);\n\n  for (var _i = 0; _i < N; ++_i) {\n    var arr = new Uint32Array(16);\n\n    for (var j = 0; j < 16; ++j) {\n      arr[j] = bytes[_i * 64 + j * 4] << 24 | bytes[_i * 64 + j * 4 + 1] << 16 | bytes[_i * 64 + j * 4 + 2] << 8 | bytes[_i * 64 + j * 4 + 3];\n    }\n\n    M[_i] = arr;\n  }\n\n  M[N - 1][14] = (bytes.length - 1) * 8 / Math.pow(2, 32);\n  M[N - 1][14] = Math.floor(M[N - 1][14]);\n  M[N - 1][15] = (bytes.length - 1) * 8 & 0xffffffff;\n\n  for (var _i2 = 0; _i2 < N; ++_i2) {\n    var W = new Uint32Array(80);\n\n    for (var t = 0; t < 16; ++t) {\n      W[t] = M[_i2][t];\n    }\n\n    for (var _t = 16; _t < 80; ++_t) {\n      W[_t] = ROTL(W[_t - 3] ^ W[_t - 8] ^ W[_t - 14] ^ W[_t - 16], 1);\n    }\n\n    var a = H[0];\n    var b = H[1];\n    var c = H[2];\n    var d = H[3];\n    var e = H[4];\n\n    for (var _t2 = 0; _t2 < 80; ++_t2) {\n      var s = Math.floor(_t2 / 20);\n      var T = ROTL(a, 5) + f(s, b, c, d) + e + K[s] + W[_t2] >>> 0;\n      e = d;\n      d = c;\n      c = ROTL(b, 30) >>> 0;\n      b = a;\n      a = T;\n    }\n\n    H[0] = H[0] + a >>> 0;\n    H[1] = H[1] + b >>> 0;\n    H[2] = H[2] + c >>> 0;\n    H[3] = H[3] + d >>> 0;\n    H[4] = H[4] + e >>> 0;\n  }\n\n  return [H[0] >> 24 & 0xff, H[0] >> 16 & 0xff, H[0] >> 8 & 0xff, H[0] & 0xff, H[1] >> 24 & 0xff, H[1] >> 16 & 0xff, H[1] >> 8 & 0xff, H[1] & 0xff, H[2] >> 24 & 0xff, H[2] >> 16 & 0xff, H[2] >> 8 & 0xff, H[2] & 0xff, H[3] >> 24 & 0xff, H[3] >> 16 & 0xff, H[3] >> 8 & 0xff, H[3] & 0xff, H[4] >> 24 & 0xff, H[4] >> 16 & 0xff, H[4] >> 8 & 0xff, H[4] & 0xff];\n}\n\nexport default sha1;","/*\n * Browser-compatible JavaScript MD5\n *\n * Modification of JavaScript MD5\n * https://github.com/blueimp/JavaScript-MD5\n *\n * Copyright 2011, Sebastian Tschan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n *\n * Based on\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\nfunction md5(bytes) {\n  if (typeof bytes === 'string') {\n    var msg = unescape(encodeURIComponent(bytes)); // UTF8 escape\n\n    bytes = new Uint8Array(msg.length);\n\n    for (var i = 0; i < msg.length; ++i) {\n      bytes[i] = msg.charCodeAt(i);\n    }\n  }\n\n  return md5ToHexEncodedArray(wordsToMd5(bytesToWords(bytes), bytes.length * 8));\n}\n/*\n * Convert an array of little-endian words to an array of bytes\n */\n\n\nfunction md5ToHexEncodedArray(input) {\n  var output = [];\n  var length32 = input.length * 32;\n  var hexTab = '0123456789abcdef';\n\n  for (var i = 0; i < length32; i += 8) {\n    var x = input[i >> 5] >>> i % 32 & 0xff;\n    var hex = parseInt(hexTab.charAt(x >>> 4 & 0x0f) + hexTab.charAt(x & 0x0f), 16);\n    output.push(hex);\n  }\n\n  return output;\n}\n/**\n * Calculate output length with padding and bit length\n */\n\n\nfunction getOutputLength(inputLength8) {\n  return (inputLength8 + 64 >>> 9 << 4) + 14 + 1;\n}\n/*\n * Calculate the MD5 of an array of little-endian words, and a bit length.\n */\n\n\nfunction wordsToMd5(x, len) {\n  /* append padding */\n  x[len >> 5] |= 0x80 << len % 32;\n  x[getOutputLength(len) - 1] = len;\n  var a = 1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d = 271733878;\n\n  for (var i = 0; i < x.length; i += 16) {\n    var olda = a;\n    var oldb = b;\n    var oldc = c;\n    var oldd = d;\n    a = md5ff(a, b, c, d, x[i], 7, -680876936);\n    d = md5ff(d, a, b, c, x[i + 1], 12, -389564586);\n    c = md5ff(c, d, a, b, x[i + 2], 17, 606105819);\n    b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330);\n    a = md5ff(a, b, c, d, x[i + 4], 7, -176418897);\n    d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426);\n    c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341);\n    b = md5ff(b, c, d, a, x[i + 7], 22, -45705983);\n    a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416);\n    d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417);\n    c = md5ff(c, d, a, b, x[i + 10], 17, -42063);\n    b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162);\n    a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682);\n    d = md5ff(d, a, b, c, x[i + 13], 12, -40341101);\n    c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290);\n    b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329);\n    a = md5gg(a, b, c, d, x[i + 1], 5, -165796510);\n    d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632);\n    c = md5gg(c, d, a, b, x[i + 11], 14, 643717713);\n    b = md5gg(b, c, d, a, x[i], 20, -373897302);\n    a = md5gg(a, b, c, d, x[i + 5], 5, -701558691);\n    d = md5gg(d, a, b, c, x[i + 10], 9, 38016083);\n    c = md5gg(c, d, a, b, x[i + 15], 14, -660478335);\n    b = md5gg(b, c, d, a, x[i + 4], 20, -405537848);\n    a = md5gg(a, b, c, d, x[i + 9], 5, 568446438);\n    d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690);\n    c = md5gg(c, d, a, b, x[i + 3], 14, -187363961);\n    b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501);\n    a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467);\n    d = md5gg(d, a, b, c, x[i + 2], 9, -51403784);\n    c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473);\n    b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734);\n    a = md5hh(a, b, c, d, x[i + 5], 4, -378558);\n    d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463);\n    c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562);\n    b = md5hh(b, c, d, a, x[i + 14], 23, -35309556);\n    a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060);\n    d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353);\n    c = md5hh(c, d, a, b, x[i + 7], 16, -155497632);\n    b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640);\n    a = md5hh(a, b, c, d, x[i + 13], 4, 681279174);\n    d = md5hh(d, a, b, c, x[i], 11, -358537222);\n    c = md5hh(c, d, a, b, x[i + 3], 16, -722521979);\n    b = md5hh(b, c, d, a, x[i + 6], 23, 76029189);\n    a = md5hh(a, b, c, d, x[i + 9], 4, -640364487);\n    d = md5hh(d, a, b, c, x[i + 12], 11, -421815835);\n    c = md5hh(c, d, a, b, x[i + 15], 16, 530742520);\n    b = md5hh(b, c, d, a, x[i + 2], 23, -995338651);\n    a = md5ii(a, b, c, d, x[i], 6, -198630844);\n    d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415);\n    c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905);\n    b = md5ii(b, c, d, a, x[i + 5], 21, -57434055);\n    a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571);\n    d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606);\n    c = md5ii(c, d, a, b, x[i + 10], 15, -1051523);\n    b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799);\n    a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359);\n    d = md5ii(d, a, b, c, x[i + 15], 10, -30611744);\n    c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380);\n    b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649);\n    a = md5ii(a, b, c, d, x[i + 4], 6, -145523070);\n    d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379);\n    c = md5ii(c, d, a, b, x[i + 2], 15, 718787259);\n    b = md5ii(b, c, d, a, x[i + 9], 21, -343485551);\n    a = safeAdd(a, olda);\n    b = safeAdd(b, oldb);\n    c = safeAdd(c, oldc);\n    d = safeAdd(d, oldd);\n  }\n\n  return [a, b, c, d];\n}\n/*\n * Convert an array bytes to an array of little-endian words\n * Characters >255 have their high-byte silently ignored.\n */\n\n\nfunction bytesToWords(input) {\n  if (input.length === 0) {\n    return [];\n  }\n\n  var length8 = input.length * 8;\n  var output = new Uint32Array(getOutputLength(length8));\n\n  for (var i = 0; i < length8; i += 8) {\n    output[i >> 5] |= (input[i / 8] & 0xff) << i % 32;\n  }\n\n  return output;\n}\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\n\n\nfunction safeAdd(x, y) {\n  var lsw = (x & 0xffff) + (y & 0xffff);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return msw << 16 | lsw & 0xffff;\n}\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\n\n\nfunction bitRotateLeft(num, cnt) {\n  return num << cnt | num >>> 32 - cnt;\n}\n/*\n * These functions implement the four basic operations the algorithm uses.\n */\n\n\nfunction md5cmn(q, a, b, x, s, t) {\n  return safeAdd(bitRotateLeft(safeAdd(safeAdd(a, q), safeAdd(x, t)), s), b);\n}\n\nfunction md5ff(a, b, c, d, x, s, t) {\n  return md5cmn(b & c | ~b & d, a, b, x, s, t);\n}\n\nfunction md5gg(a, b, c, d, x, s, t) {\n  return md5cmn(b & d | c & ~d, a, b, x, s, t);\n}\n\nfunction md5hh(a, b, c, d, x, s, t) {\n  return md5cmn(b ^ c ^ d, a, b, x, s, t);\n}\n\nfunction md5ii(a, b, c, d, x, s, t) {\n  return md5cmn(c ^ (b | ~d), a, b, x, s, t);\n}\n\nexport default md5;","import { get as _get } from 'lodash-es';\nimport { combineLatest } from 'rxjs';\nimport { startWith, take } from 'rxjs/operators';\n\nimport { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { chainsSelectors } from '@bgap/admin/shared/data-access/chains';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport {\n  IAdminRoleEntity,\n  IAssignedEntityNames,\n  IChain,\n  IGroup,\n  IKeyValue,\n} from '@bgap/shared/types';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-form-group-admin-role',\n  templateUrl: './form-group-admin-role.component.html',\n})\nexport class FormGroupAdminRoleComponent implements OnInit, OnDestroy {\n  @Input() control!: FormGroup;\n  public groupOptions: IKeyValue[];\n  public chainOptions: IKeyValue[];\n  public entitySelector: FormGroup;\n  public assignedGroups: IAssignedEntityNames[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  constructor(private _store: Store<any>, private _formBuilder: FormBuilder) {\n    this.groupOptions = [];\n    this.chainOptions = [];\n    this.assignedGroups = [];\n    this.entitySelector = this._formBuilder.group({\n      chainId: [''],\n      groupId: [''],\n    });\n  }\n\n  ngOnInit(): void {\n    combineLatest([\n      this._store.pipe(select(chainsSelectors.getAllChains)),\n      this._store.pipe(select(groupsSelectors.getAllGroups)),\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([chains, groups, entities]: [\n          IChain[],\n          IGroup[],\n          IAdminRoleEntity[],\n        ]): void => {\n          // Fill the chain list\n          this.chainOptions = [];\n          chains.forEach((chain: IChain): void => {\n            this.chainOptions.push({\n              key: chain._id,\n              value: chain.name,\n            });\n          });\n\n          // Fill the assigned entity list\n          this.assignedGroups = [];\n          entities.forEach((entity: IAdminRoleEntity): void => {\n            this.assignedGroups.push({\n              chainName: _get(\n                chains.find((c): boolean => c._id === entity.chainId),\n                'name',\n              ),\n              groupName: _get(\n                groups.find((g): boolean => g._id === entity.groupId),\n                'name',\n              ),\n            });\n          });\n        },\n      );\n\n    combineLatest([\n      this.entitySelector.valueChanges,\n      (<FormGroup>this.control.get('entities')).valueChanges.pipe(\n        startWith(this.control.value.entities),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([selectorValue, entities]: [\n          IAdminRoleEntity,\n          IAdminRoleEntity[],\n        ]): void => {\n          this._store\n            .pipe(\n              select(groupsSelectors.getGroupsByChainId(selectorValue.chainId)),\n            )\n            .pipe(take(1))\n            .subscribe((groups): void => {\n              this.groupOptions = [];\n\n              groups.forEach((group: IGroup): void => {\n                if (\n                  !entities\n                    .map((e): string => e.groupId || '')\n                    .includes(group._id)\n                ) {\n                  this.groupOptions.push({\n                    key: group._id,\n                    value: group.name,\n                  });\n                }\n              });\n            });\n        },\n      );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addGroup(): void {\n    const arr = [...this.control.value.entities];\n    arr.push({\n      chainId: this.entitySelector.value.chainId,\n      groupId: this.entitySelector.value.groupId,\n    });\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n\n    this.entitySelector.patchValue({\n      chainId: '',\n      groupId: '',\n    });\n  }\n\n  public removeGroup(idx: number): void {\n    const arr = [...this.control.value.entities];\n    arr.splice(idx, 1);\n\n    (<FormGroup>this.control.get('entities')).setValue(arr);\n  }\n}\n","<div class=\"mt-3\">\n  <label class=\"caption\">{{ 'roles.assignedGroups' | translate }}</label>\n</div>\n<div class=\"row\" *ngFor=\"let group of assignedGroups; let idx = index\">\n  <div class=\"col-12 subtitle-2\">\n    {{ group.chainName }} / {{ group.groupName }}\n\n    <button\n      nbButton\n      type=\"button\"\n      status=\"danger\"\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"ml-2\"\n      (click)=\"removeGroup(idx)\"\n    >\n      <nb-icon icon=\"minus-outline\"></nb-icon>\n    </button>\n  </div>\n</div>\n\n<div class=\"row mt-3\">\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectChain' | translate }}</label>\n    </div>\n    <div>\n      <nb-select\n        size=\"small\"\n        [formControl]=\"entitySelector.get('chainId')! | asFormControl\"\n      >\n        <nb-option value=\"\">-</nb-option>\n        <nb-option *ngFor=\"let option of chainOptions\" [value]=\"option.key\">{{\n          option.value\n        }}</nb-option>\n      </nb-select>\n    </div>\n  </div>\n  <div class=\"col-md-6\">\n    <div>\n      <label class=\"caption\">{{ 'roles.selectGroup' | translate }}</label>\n    </div>\n\n    <nb-select\n      size=\"small\"\n      [formControl]=\"entitySelector.get('groupId')! | asFormControl\"\n    >\n      <nb-option value=\"\">-</nb-option>\n      <nb-option *ngFor=\"let option of groupOptions\" [value]=\"option.key\">{{\n        option.value\n      }}</nb-option>\n    </nb-select>\n  </div>\n</div>\n\n<div>\n  <button\n    *ngIf=\"entitySelector.value.groupId\"\n    nbButton\n    type=\"button\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"mt-3\"\n    (click)=\"addGroup()\"\n  >\n    <nb-icon icon=\"plus-outline\"></nb-icon> {{ 'roles.assign' | translate }}\n  </button>\n</div>\n","import rng from './rng.js';\nimport stringify from './stringify.js'; // **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\nvar _nodeId;\n\nvar _clockseq; // Previous uuid creation time\n\n\nvar _lastMSecs = 0;\nvar _lastNSecs = 0; // See https://github.com/uuidjs/uuid for API details\n\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || new Array(16);\n  options = options || {};\n  var node = options.node || _nodeId;\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq; // node and clockseq need to be initialized to random values if they're not\n  // specified.  We do this lazily to minimize issues related to insufficient\n  // system entropy.  See #189\n\n  if (node == null || clockseq == null) {\n    var seedBytes = options.random || (options.rng || rng)();\n\n    if (node == null) {\n      // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\n      node = _nodeId = [seedBytes[0] | 0x01, seedBytes[1], seedBytes[2], seedBytes[3], seedBytes[4], seedBytes[5]];\n    }\n\n    if (clockseq == null) {\n      // Per 4.2.2, randomize (14 bit) clockseq\n      clockseq = _clockseq = (seedBytes[6] << 8 | seedBytes[7]) & 0x3fff;\n    }\n  } // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n\n\n  var msecs = options.msecs !== undefined ? options.msecs : Date.now(); // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1; // Time since last uuid creation (in msecs)\n\n  var dt = msecs - _lastMSecs + (nsecs - _lastNSecs) / 10000; // Per 4.2.1.2, Bump clockseq on clock regression\n\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  } // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n\n\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  } // Per 4.2.1.2 Throw error if too many uuids are requested\n\n\n  if (nsecs >= 10000) {\n    throw new Error(\"uuid.v1(): Can't create more than 10M uuids/sec\");\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq; // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n\n  msecs += 12219292800000; // `time_low`\n\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff; // `time_mid`\n\n  var tmh = msecs / 0x100000000 * 10000 & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff; // `time_high_and_version`\n\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n\n  b[i++] = tmh >>> 16 & 0xff; // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n\n  b[i++] = clockseq >>> 8 | 0x80; // `clock_seq_low`\n\n  b[i++] = clockseq & 0xff; // `node`\n\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf || stringify(b);\n}\n\nexport default v1;","import { EAdminRole } from '@bgap/shared/types';\nimport { IKeyValue } from '@bgap/shared/types';\n\nimport { Component, Input, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: 'bgap-form-admin-role',\n  templateUrl: './form-admin-role.component.html',\n})\nexport class FormAdminRoleComponent implements OnInit {\n  @Input() roleFormGroup!: FormGroup;\n  public eAdminRole = EAdminRole;\n  public roleOptions: IKeyValue[];\n\n  constructor(private _translateService: TranslateService) {\n    this.roleOptions = Object.keys(EAdminRole).map(\n      (key): IKeyValue => ({\n        key: EAdminRole[<keyof typeof EAdminRole>key].toString(),\n        value: this._translateService.instant(\n          `roles.${EAdminRole[<keyof typeof EAdminRole>key]}`,\n        ),\n      }),\n    );\n  }\n\n  ngOnInit(): void {\n    (<FormGroup>this.roleFormGroup.get('role')).valueChanges.subscribe(\n      (): void => {\n        (<FormGroup>this.roleFormGroup.get('entities')).patchValue([]);\n      },\n    );\n  }\n}\n","<fieldset class=\"form\" [formGroup]=\"roleFormGroup\">\n  <legend class=\"label\">{{ 'roles.roles' | translate }}</legend>\n\n  <div class=\"row\">\n    <div class=\"col-6\">\n      <bgap-form-select\n        [control]=\"roleFormGroup.get('role')! | asFormControl\"\n        caption=\"roles.role\"\n        [options]=\"roleOptions\"\n        [localize]=\"false\"\n      >\n      </bgap-form-select>\n    </div>\n  </div>\n\n  <bgap-form-chain-admin-role\n    [control]=\"roleFormGroup\"\n    *ngIf=\"roleFormGroup.value.role === eAdminRole.CHAIN_ADMIN\"\n  ></bgap-form-chain-admin-role>\n\n  <bgap-form-group-admin-role\n    [control]=\"roleFormGroup\"\n    *ngIf=\"roleFormGroup.value.role === eAdminRole.GROUP_ADMIN\"\n  ></bgap-form-group-admin-role>\n\n  <bgap-form-unit-admin-role\n    [control]=\"roleFormGroup\"\n    *ngIf=\"roleFormGroup.value.role === eAdminRole.UNIT_ADMIN\"\n  ></bgap-form-unit-admin-role>\n\n  <bgap-form-staff-role\n    [control]=\"roleFormGroup\"\n    *ngIf=\"roleFormGroup.value.role === eAdminRole.STAFF\"\n  ></bgap-form-staff-role>\n</fieldset>\n"],"sourceRoot":"webpack:///"}