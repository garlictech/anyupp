{"version":3,"sources":["./libs/admin/pages/auth/src/lib/admin-pages-auth.module.ts","./libs/admin/pages/auth/src/lib/components/login-form/login-form.component.ts","./libs/admin/pages/auth/src/lib/components/login-form/login-form.component.html","./libs/admin/pages/auth/src/index.ts","./libs/admin/pages/auth/src/lib/components/password-reset-form/password-reset-form.component.ts","./libs/admin/pages/auth/src/lib/components/password-reset-form/password-reset-form.component.html","./libs/admin/pages/auth/src/lib/components/login/login.component.ts","./libs/admin/pages/auth/src/lib/components/login/login.component.html"],"names":[],"mappings":"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","file":"bgap-admin-pages-auth.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbInputModule,\n  NbLayoutModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { LoginFormComponent } from './components/login-form/login-form.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { PasswordResetFormComponent } from './components/password-reset-form/password-reset-form.component';\n\nconst NEBULAR_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbInputModule,\n  NbButtonModule,\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    AdminSharedFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSharedPipesModule,\n    TranslateModule,\n    ...NEBULAR_MODULES,\n    RouterModule.forChild([\n      {\n        component: LoginComponent,\n        path: '',\n      },\n    ]),\n  ],\n  declarations: [\n    LoginComponent,\n    LoginFormComponent,\n    PasswordResetFormComponent,\n  ],\n})\nexport class AdminPagesAuthModule {}\n","import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '@bgap/admin/shared/data-access/auth';\n\n@Component({\n  selector: 'bgap-login-form',\n  templateUrl: './login-form.component.html',\n  styleUrls: ['./login-form.component.scss'],\n})\nexport class LoginFormComponent {\n  @Input() toggleResetForm!: ($event: Event, showResetForm: boolean) => void;\n  public loginForm: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService,\n  ) {\n    this.loginForm = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n  public login(): void {\n    if (this.loginForm.valid) {\n      this._authService.signIn(\n        this.loginForm.value.email,\n        this.loginForm.value.password,\n      );\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" [autocomplete]=\"false\">\n  <bgap-form-text-input\n    caption=\"common.email\"\n    type=\"text\"\n    [control]=\"loginForm.get('email')! | asFormControl\"\n  ></bgap-form-text-input>\n  <bgap-form-text-input\n    caption=\"auth.password\"\n    type=\"password\"\n    [control]=\"loginForm.get('password')! | asFormControl\"\n  ></bgap-form-text-input>\n\n  <div class=\"mt-20\">\n    <button\n      nbButton\n      size=\"small\"\n      type=\"submit\"\n      fullWidth\n      status=\"primary\"\n      [disabled]=\"loginForm.invalid\"\n    >\n      {{ 'auth.login' | translate }}\n    </button>\n  </div>\n</form>\n\n<div class=\"row mt-3\">\n  <div class=\"col-12\">\n    <a href=\"#\" class=\"label\" (click)=\"toggleResetForm($event, true)\">{{\n      'auth.forgottenPassword' | translate\n    }}</a>\n  </div>\n</div>\n","import { AdminPagesAuthModule } from './lib/admin-pages-auth.module';\n\nexport { AdminPagesAuthModule };\n","import { Component, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { AuthService } from '@bgap/admin/shared/data-access/auth';\nimport { EToasterType, ToasterService } from '@bgap/admin/shared/utils';\n\n@Component({\n  selector: 'bgap-password-reset-form',\n  templateUrl: './password-reset-form.component.html',\n  styleUrls: ['./password-reset-form.component.scss'],\n})\nexport class PasswordResetFormComponent {\n  @Input() toggleResetForm!: ($event: Event, showResetForm: boolean) => void;\n  public resetForm: FormGroup;\n\n  constructor(\n    private _formBuilder: FormBuilder,\n    private _authService: AuthService,\n    private _toasterService: ToasterService,\n  ) {\n    this.resetForm = this._formBuilder.group({\n      email: ['', [Validators.required, Validators.email]],\n    });\n  }\n\n  public resetPassword($event: Event): void {\n    if (this.resetForm.valid) {\n      this._authService.sendPasswordResetEmail(this.resetForm.value.email).then(\n        (): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'auth.reminderSent',\n          );\n          this.toggleResetForm($event, false);\n        },\n        (): void => {\n          this._toasterService.show(\n            EToasterType.DANGER,\n            '',\n            'auth.reminderError',\n          );\n        },\n      );\n    }\n  }\n}\n","<form\n  [formGroup]=\"resetForm\"\n  (ngSubmit)=\"resetPassword($event)\"\n  [autocomplete]=\"false\"\n>\n  <bgap-form-text-input\n    caption=\"common.email\"\n    type=\"text\"\n    [control]=\"resetForm.get('email')! | asFormControl\"\n  ></bgap-form-text-input>\n\n  <div class=\"mt-20\">\n    <button\n      nbButton\n      size=\"small\"\n      type=\"submit\"\n      fullWidth\n      status=\"primary\"\n      [disabled]=\"resetForm.invalid\"\n    >\n      {{ 'auth.sendResetEmail' | translate }}\n    </button>\n  </div>\n</form>\n\n<div class=\"row mt-3\">\n  <div class=\"col-12\">\n    <a href=\"#\" class=\"label\" (click)=\"toggleResetForm($event, false)\">{{\n      'common.cancel' | translate\n    }}</a>\n  </div>\n</div>\n","import { Component } from '@angular/core';\nimport { environment } from '@bgap/admin/shared/config';\n\nenum EFormMode {\n  LOGIN = 'login',\n  RESET = 'reset',\n}\n\n@Component({\n  selector: 'bgap-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  public env = environment;\n  public formMode: EFormMode = EFormMode.LOGIN;\n  public EFormMode = EFormMode;\n\n  public toggleResetForm = ($event: Event, showResetForm: boolean) => {\n    $event?.preventDefault();\n\n    this.formMode = showResetForm ? EFormMode.RESET : EFormMode.LOGIN;\n  };\n}\n","<nb-layout center>\n  <nb-layout-column>\n    <nb-card>\n      <nb-card-body>\n        <h1 class=\"title\">\n          AnyUpp Login <sup>{{ env.name }}</sup>\n        </h1>\n\n        <bgap-login-form\n          *ngIf=\"formMode === EFormMode.LOGIN\"\n          [toggleResetForm]=\"toggleResetForm\"\n        ></bgap-login-form>\n        <bgap-password-reset-form\n          *ngIf=\"formMode === EFormMode.RESET\"\n          [toggleResetForm]=\"toggleResetForm\"\n        ></bgap-password-reset-form>\n      </nb-card-body>\n    </nb-card>\n  </nb-layout-column>\n</nb-layout>\n"],"sourceRoot":"webpack:///"}