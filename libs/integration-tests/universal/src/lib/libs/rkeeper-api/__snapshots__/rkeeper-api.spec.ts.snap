// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test the communication between anyupp/rkeeper test the menusync handler - reply with unit not found 1`] = `
Object {
  "error": "Unit with external ID foobar cannot be found",
}
`;

exports[`Test the communication between anyupp/rkeeper test the menusync route - reply with unit not found 1`] = `
Object {
  "error": "Unit with external ID foobar cannot be found",
}
`;

exports[`Test the communication between anyupp/rkeeper test the order status route - reply with unit not found 1`] = `
Object {
  "error": "Unit with restaurant ID foobar cannot be found",
}
`;

exports[`Test the rkeeper api basic functionality Test the menusync handler 1`] = `[InvalidBucketName: The specified bucket is not valid.]`;

exports[`Test the rkeeper api basic functionality Test the product handling logic in fargate in case of non-existing unit 1`] = `"Unit with external ID foobar cannot be found"`;

exports[`Test the rkeeper api basic functionality Test waiter caller 1`] = `[Error: GraphQL error: unit_cannot_call_waiter]`;

exports[`Test the rkeeper api basic functionality Test waiter caller 2`] = `
Observable {
  "_isScalar": false,
  "operator": CatchOperator {
    "caught": [Circular],
    "selector": [Function],
  },
  "source": Observable {
    "_isScalar": false,
    "operator": SwitchMapOperator {
      "project": [Function],
    },
    "source": Observable {
      "_isScalar": false,
      "operator": MapOperator {
        "project": [Function],
        "thisArg": undefined,
      },
      "source": Observable {
        "_isScalar": false,
        "_subscribe": [Function],
      },
    },
  },
}
`;

exports[`Test the rkeeper api basic functionality getBusinessEntityInfo - existing restaurant 1`] = `
Object {
  "unitId": "rkeeper-cf0d1110-a2ce-45cf-aa69-6782bbc44cad-unit",
}
`;

exports[`Test the rkeeper api basic functionality getBusinessEntityInfo - not existing restaurant 1`] = `[Error: Cannot find unit belonging to external unit id NOT EXISTING RESTO\`]`;
