// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`getOrderInputCases cases: RESULT 1`] = `
Object {
  "_tag": "Right",
  "right": Object {
    "cart": Object {
      "items": Array [
        Object {
          "priceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 4,
            "tax": 5,
            "taxSum": 6,
          },
          "productId": "PRODUCTID 1",
          "productName": Object {
            "hu": "PRODUCT NAME",
          },
          "quantity": 7,
          "statusLog": Array [],
          "sumPriceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 4,
            "tax": 5,
            "taxSum": 6,
          },
          "variantId": "VARIANT ID",
          "variantName": Object {
            "hu": "VARIANT NAME",
          },
        },
        Object {
          "priceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 4,
            "tax": 5,
            "taxSum": 6,
          },
          "productId": "PRODUCTID 2",
          "productName": Object {
            "hu": "PRODUCT NAME",
          },
          "quantity": 7,
          "statusLog": Array [],
          "sumPriceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 4,
            "tax": 5,
            "taxSum": 6,
          },
          "variantId": "VARIANT ID",
          "variantName": Object {
            "hu": "VARIANT NAME",
          },
        },
      ],
      "orderPolicy": "full",
      "paymentMode": Object {
        "method": "inapp",
        "type": "card",
      },
      "place": Object {
        "seat": "SEAT",
        "table": "TABLE",
      },
      "unitId": "UNITID",
      "userId": "USER ID",
    },
    "groupCurrency": "BATKA",
    "orderInput": Object {
      "archived": false,
      "items": Array [
        Object {
          "allergens": undefined,
          "configSets": undefined,
          "externalId": "EXTERNAL ID",
          "laneId": "LANE ID",
          "priceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 21,
            "tax": undefined,
            "taxSum": NaN,
          },
          "productId": "PRODUCTID 1",
          "productName": Object {
            "hu": "PRODUCT NAME",
          },
          "productType": "PRODUCT TYPE",
          "quantity": 7,
          "statusLog": Array [
            Object {
              "status": "none",
              "ts": 1645475822198,
              "userId": "USER ID",
            },
          ],
          "sumPriceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 21,
            "tax": undefined,
            "taxSum": NaN,
          },
          "variantId": "VARIANT ID",
          "variantName": Object {
            "hu": "VARIANT NAME",
          },
        },
        Object {
          "allergens": undefined,
          "configSets": undefined,
          "externalId": "EXTERNAL ID",
          "laneId": "LANE ID",
          "priceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 21,
            "tax": undefined,
            "taxSum": NaN,
          },
          "productId": "PRODUCTID 2",
          "productName": Object {
            "hu": "PRODUCT NAME",
          },
          "productType": "PRODUCT TYPE",
          "quantity": 7,
          "statusLog": Array [
            Object {
              "status": "none",
              "ts": 1645475822198,
              "userId": "USER ID",
            },
          ],
          "sumPriceShown": Object {
            "currency": "BATKA",
            "pricePerUnit": 3,
            "priceSum": 21,
            "tax": undefined,
            "taxSum": NaN,
          },
          "variantId": "VARIANT ID",
          "variantName": Object {
            "hu": "VARIANT NAME",
          },
        },
      ],
      "orderMode": "instant",
      "orderNum": "ORDERNUM",
      "orderPolicy": undefined,
      "paymentMode": Object {
        "method": "inapp",
        "type": "card",
      },
      "place": Object {
        "seat": "SEAT",
        "table": "TABLE",
      },
      "ratingPolicies": Array [
        Object {
          "description": Object {
            "en": "RATING POLICY DESC",
          },
          "key": "RATING KEY",
          "ratings": Array [],
          "title": Object {
            "en": "RATING POLICY TITLE",
          },
        },
      ],
      "serviceFeePolicy": Object {
        "percentage": 10,
        "type": "included",
      },
      "servingMode": "inPlace",
      "soldOutVisibilityPolicy": "invisible",
      "statusLog": Array [
        Object {
          "status": "none",
          "ts": 1645475822198,
          "userId": "USER ID",
        },
      ],
      "sumPriceShown": Object {
        "currency": "BATKA",
        "pricePerUnit": 0,
        "priceSum": 42,
        "tax": 0,
        "taxSum": NaN,
      },
      "takeAway": false,
      "tipPolicy": Object {
        "percents": Array [
          6,
        ],
      },
      "transactionStatus": "waiting_for_payment",
      "unitId": "UNITID",
      "userId": "USER ID",
    },
    "orderNum": "ORDERNUM",
    "servingMode": "takeAway",
    "unit": Object {
      "chainId": "UNIT CHAIN ID",
      "groupId": "UNIT GROUP ID",
      "id": "UNTI ID",
      "ratingPolicies": Array [
        Object {
          "description": Object {
            "en": "RATING POLICY DESC",
          },
          "key": "RATING KEY",
          "ratings": Array [],
          "title": Object {
            "en": "RATING POLICY TITLE",
          },
        },
      ],
      "serviceFeePolicy": Object {
        "percentage": 10,
        "type": "included",
      },
      "soldOutVisibilityPolicy": "invisible",
      "tipPolicy": Object {
        "percents": Array [
          6,
        ],
      },
    },
  },
}
`;

exports[`getOrderInputCases cases: getOrderInput DEPS CALLS 1`] = `
Array [
  Array [
    "CRUDSDK",
  ],
  Array [
    "CRUDSDK",
  ],
]
`;

exports[`getOrderInputCases cases: getOrderInput FUNC CALLS 1`] = `
Array [
  Array [
    "PRODUCTID 1",
  ],
  Array [
    "PRODUCTID 2",
  ],
]
`;
