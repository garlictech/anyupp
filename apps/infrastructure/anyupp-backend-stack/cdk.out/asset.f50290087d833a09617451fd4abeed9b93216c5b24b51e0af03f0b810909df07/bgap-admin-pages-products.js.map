{"version":3,"sources":["./libs/admin/pages/products/src/lib/admin-pages-products.module.ts","./libs/admin/pages/products/src/lib/components/product-list/product-list.component.ts","./libs/admin/pages/products/src/lib/components/product-list/product-list.component.html","./libs/admin/pages/products/src/lib/components/product-form/product-form.component.ts","./libs/admin/pages/products/src/lib/components/product-form/product-form.component.html","./libs/admin/pages/products/src/lib/components/product-extend-form/product-extend-form.component.ts","./libs/admin/pages/products/src/lib/components/product-extend-form/product-extend-form.component.html","./libs/admin/pages/products/src/lib/components/product-list-item/product-list-item.component.ts","./libs/admin/pages/products/src/lib/components/product-list-item/product-list-item.component.html","./libs/admin/pages/products/src/index.ts"],"names":[],"mappings":"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","file":"bgap-admin-pages-products.js","sourcesContent":["import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedComponentsModule } from '@bgap/admin/shared/components';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbListModule,\n  NbSelectModule,\n  NbTabsetModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { ProductExtendFormComponent } from './components/product-extend-form/product-extend-form.component';\nimport { ProductFormComponent } from './components/product-form/product-form.component';\nimport { ProductListItemComponent } from './components/product-list-item/product-list-item.component';\nimport { ProductListComponent } from './components/product-list/product-list.component';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n  NbSelectModule,\n  NbTabsetModule,\n];\n\n@NgModule({\n  declarations: [\n    ProductListComponent,\n    ProductListItemComponent,\n    ProductFormComponent,\n    ProductExtendFormComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AdminSharedComponentsModule,\n    AdminSharedFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSharedPipesModule,\n    RouterModule.forChild([\n      {\n        component: ProductListComponent,\n        path: '',\n      },\n    ]),\n    ...NB_MODULES,\n  ],\n})\nexport class AdminPagesProductsModule {}\n","import { get as _get } from 'lodash-es';\nimport { combineLatest, Observable } from 'rxjs';\nimport { map, skipWhile, take } from 'rxjs/operators';\n\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport { DataService } from '@bgap/admin/shared/data-access/data';\nimport { customNumberCompare } from '@bgap/shared/utils';\nimport {\n  EAdminRole,\n  EProductLevel,\n  IAdminUser,\n  IGroup,\n  IProduct,\n  IProductOrderChangeEvent,\n} from '@bgap/shared/types';\nimport {\n  NbDialogService,\n  NbTabComponent,\n  NbTabsetComponent,\n} from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { ProductFormComponent } from '../product-form/product-form.component';\nimport { productsSelectors } from '@bgap/admin/shared/data-access/products';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.scss'],\n})\nexport class ProductListComponent implements OnInit, OnDestroy {\n  @ViewChild('tabset') tabsetEl!: NbTabsetComponent;\n\n  public chainProducts: IProduct[] = [];\n  public groupProducts$: Observable<IProduct[]>;\n  public pendingGroupProducts: IProduct[] = [];\n  public pendingUnitProducts: IProduct[] = [];\n  public groupCurrency = '';\n  public unitProducts: IProduct[] = [];\n  public EProductLevel = EProductLevel;\n  public selectedProductLevel: EProductLevel;\n  public adminUser?: IAdminUser;\n\n  private _sortedChainProductIds: string[] = [];\n  private _sortedUnitProductIds: string[] = [];\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService,\n    private _dataService: DataService,\n  ) {\n    this.selectedProductLevel = EProductLevel.UNIT;\n\n    this.groupProducts$ = this._store.pipe(\n      select(productsSelectors.getExtendedGroupProductsOfSelectedCategory()),\n      untilDestroyed(this),\n    );\n  }\n\n  get selectedChainId(): string {\n    return _get(this.adminUser, 'settings.selectedChainId');\n  }\n\n  get selectedGroupId(): string {\n    return _get(this.adminUser, 'settings.selectedGroupId');\n  }\n\n  get selectedUnitId(): string {\n    return _get(this.adminUser, 'settings.selectedUnitId');\n  }\n\n  get selectedProductCategoryId(): string {\n    return _get(this.adminUser, 'settings.selectedProductCategoryId');\n  }\n\n  ngOnInit(): void {\n    this._store\n      .pipe(\n        select(productsSelectors.getChainProductsOfSelectedCategory()),\n        map((products): IProduct[] =>\n          products.sort(customNumberCompare('position')),\n        ),\n        untilDestroyed(this),\n      )\n      .subscribe((chainProducts: IProduct[]): void => {\n        this.chainProducts = chainProducts;\n        this._sortedChainProductIds = this.chainProducts.map(\n          (p): string => p._id,\n        );\n      });\n\n    this._store\n      .pipe(\n        select(productsSelectors.getExtendedUnitProductsOfSelectedCategory()),\n        map((products): IProduct[] =>\n          products.sort(customNumberCompare('position')),\n        ),\n        untilDestroyed(this),\n      )\n      .subscribe((unitProducts: IProduct[]): void => {\n        this.unitProducts = unitProducts;\n        this._sortedUnitProductIds = this.unitProducts.map(\n          (p): string => p._id,\n        );\n      });\n\n    combineLatest([\n      this._store.pipe(\n        select(productsSelectors.getPendingGroupProductsOfSelectedCategory()),\n        untilDestroyed(this),\n      ),\n      this._store.pipe(\n        select(productsSelectors.getPendingUnitProductsOfSelectedCategory()),\n        untilDestroyed(this),\n      ),\n      this._store.pipe(\n        select(loggedUserSelectors.getLoggedUser),\n        skipWhile((adminUser): boolean => !adminUser),\n      ),\n    ])\n      .pipe(untilDestroyed(this))\n      .subscribe(\n        ([pendingGroupProducts, pendingUnitProducts, adminUser]: [\n          IProduct[],\n          IProduct[],\n          IAdminUser,\n        ]): void => {\n          this.adminUser = adminUser;\n\n          this.pendingGroupProducts = [\n            EAdminRole.SUPERUSER,\n            EAdminRole.CHAIN_ADMIN,\n            EAdminRole.GROUP_ADMIN,\n          ].includes(_get(adminUser, 'roles.role'))\n            ? pendingGroupProducts\n            : [];\n          this.pendingUnitProducts = pendingUnitProducts;\n\n          this._store\n            .pipe(\n              select(groupsSelectors.getSeletedGroup),\n              skipWhile((group): boolean => !group),\n              take(1),\n            )\n            .subscribe((group: IGroup | undefined): void => {\n              this.groupCurrency = group?.currency || '';\n            });\n        },\n      );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public selectLevel($event: NbTabComponent): void {\n    this.selectedProductLevel = <EProductLevel>$event.tabId;\n  }\n\n  public addProduct(): void {\n    const dialog = this._nbDialogService.open(ProductFormComponent, {\n      hasBackdrop: true,\n      closeOnBackdropClick: false,\n      hasScroll: true,\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.productLevel = this.selectedProductLevel;\n  }\n\n  public chainPositionChange($event: IProductOrderChangeEvent): void {\n    const idx = this._sortedChainProductIds.indexOf($event.productId);\n\n    if (\n      (idx >= 0 &&\n        $event.change === 1 &&\n        idx < this._sortedChainProductIds.length - 1) ||\n      ($event.change === -1 && idx > 0)\n    ) {\n      this._sortedChainProductIds.splice(idx, 1);\n      this._sortedChainProductIds.splice(\n        idx + $event.change,\n        0,\n        $event.productId,\n      );\n\n      this._sortedChainProductIds.forEach(\n        (productId: string, pos: number): void => {\n          this._dataService.updateChainProductPosition(\n            this.selectedChainId,\n            productId,\n            (pos + 1).toString(),\n          );\n        },\n      );\n    }\n  }\n\n  public unitPositionChange($event: IProductOrderChangeEvent): void {\n    const idx = this._sortedUnitProductIds.indexOf($event.productId);\n\n    if (\n      (idx >= 0 &&\n        $event.change === 1 &&\n        idx < this._sortedUnitProductIds.length - 1) ||\n      ($event.change === -1 && idx > 0)\n    ) {\n      this._sortedUnitProductIds.splice(idx, 1);\n      this._sortedUnitProductIds.splice(\n        idx + $event.change,\n        0,\n        $event.productId,\n      );\n\n      this._sortedUnitProductIds.forEach(\n        (productId: string, pos: number): void => {\n          this._dataService.updateUnitProductPosition(\n            this.selectedUnitId,\n            productId,\n            (pos + 1).toString(),\n          );\n        },\n      );\n    }\n  }\n}\n","<nb-card class=\"h-100 mb-0\">\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'products.listTitle' | translate }}\n    </div>\n\n    <div class=\"float-right\">\n      <bgap-active-product-category-selector\n        class=\"float-right\"\n      ></bgap-active-product-category-selector>\n      <button\n        [disabled]=\"selectedProductLevel !== EProductLevel.CHAIN\"\n        nbButton\n        class=\"float-right mr-2\"\n        type=\"button\"\n        shape=\"round\"\n        size=\"small\"\n        (click)=\"addProduct()\"\n      >\n        <nb-icon icon=\"plus-outline\"></nb-icon>\n      </button>\n    </div>\n  </nb-card-header>\n  <nb-card-body class=\"p-2\">\n    <nb-tabset (changeTab)=\"selectLevel($event)\" fullWidth #tabset>\n      <nb-tab\n        [tabTitle]=\"'products.chainProducts' | translate\"\n        [tabId]=\"EProductLevel.CHAIN\"\n        [active]=\"selectedProductLevel === EProductLevel.CHAIN\"\n        [disabled]=\"!selectedChainId\"\n      >\n        <ng-container *ngFor=\"let product of chainProducts\">\n          <nb-list-item\n            *ngIf=\"product.productCategoryId === selectedProductCategoryId\"\n          >\n            <bgap-product-list-item\n              class=\"w-100\"\n              [product]=\"product\"\n              [productLevel]=\"EProductLevel.CHAIN\"\n              [currency]=\"groupCurrency\"\n              (positionChange)=\"chainPositionChange($event)\"\n            ></bgap-product-list-item>\n          </nb-list-item>\n        </ng-container>\n      </nb-tab>\n      <nb-tab\n        [tabTitle]=\"'products.groupProducts' | translate\"\n        [tabId]=\"EProductLevel.GROUP\"\n        [active]=\"selectedProductLevel === EProductLevel.GROUP\"\n        [badgeText]=\"\n          selectedGroupId ? pendingGroupProducts.length.toString() || '' : ''\n        \"\n        badgeStatus=\"danger\"\n        [disabled]=\"!selectedGroupId\"\n      >\n        <ng-container *ngIf=\"selectedGroupId\">\n          <nb-list-item *ngFor=\"let product of pendingGroupProducts\">\n            <bgap-product-list-item\n              class=\"w-100\"\n              [pending]=\"true\"\n              [product]=\"product\"\n              [productLevel]=\"EProductLevel.GROUP\"\n              [currency]=\"groupCurrency\"\n            ></bgap-product-list-item>\n          </nb-list-item>\n          <nb-list-item *ngFor=\"let product of groupProducts$ | async\">\n            <bgap-product-list-item\n              class=\"w-100\"\n              [pending]=\"false\"\n              [product]=\"product\"\n              [productLevel]=\"EProductLevel.GROUP\"\n              [currency]=\"groupCurrency\"\n            ></bgap-product-list-item>\n          </nb-list-item>\n        </ng-container>\n      </nb-tab>\n      <nb-tab\n        [tabTitle]=\"'products.unitProducts' | translate\"\n        [tabId]=\"EProductLevel.UNIT\"\n        [active]=\"selectedProductLevel === EProductLevel.UNIT\"\n        [badgeText]=\"\n          selectedUnitId ? pendingUnitProducts.length.toString() || '' : ''\n        \"\n        badgeStatus=\"danger\"\n        [disabled]=\"!selectedUnitId\"\n      >\n        <ng-container *ngIf=\"selectedUnitId\">\n          <nb-list-item *ngFor=\"let product of pendingUnitProducts\">\n            <bgap-product-list-item\n              class=\"w-100\"\n              [pending]=\"true\"\n              [product]=\"product\"\n              [productLevel]=\"EProductLevel.UNIT\"\n              [currency]=\"groupCurrency\"\n            ></bgap-product-list-item>\n          </nb-list-item>\n          <nb-list-item\n            *ngFor=\"\n              let product of unitProducts;\n              first as isFirst;\n              last as isLast\n            \"\n          >\n            <bgap-product-list-item\n              class=\"w-100\"\n              [product]=\"product\"\n              [productLevel]=\"EProductLevel.UNIT\"\n              [currency]=\"groupCurrency\"\n              (positionChange)=\"unitPositionChange($event)\"\n              [isFirst]=\"isFirst\"\n              [isLast]=\"isLast\"\n            ></bgap-product-list-item>\n          </nb-list-item>\n        </ng-container>\n      </nb-tab>\n    </nb-tabset>\n  </nb-card-body>\n</nb-card>\n","import { get as _get, omit as _omit, set as _set } from 'lodash-es';\nimport { take } from 'rxjs/operators';\n\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormArray, Validators } from '@angular/forms';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { productCategoriesSelectors } from '@bgap/admin/shared/data-access/product-categories';\nimport {\n  AbstractFormDialogComponent,\n  FormsService,\n} from '@bgap/admin/shared/forms';\nimport { EToasterType, multiLangValidator } from '@bgap/admin/shared/utils';\nimport {\n  EImageType,\n  EProductLevel,\n  EProductType,\n  IAdminUserSettings,\n  IKeyValue,\n  IProduct,\n  IProductCategory,\n  IProductVariant,\n} from '@bgap/shared/types';\nimport { customNumberCompare, objectToArray } from '@bgap/shared/utils';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-product-form',\n  templateUrl: './product-form.component.html',\n})\nexport class ProductFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public eImageType = EImageType;\n  public product!: IProduct;\n  public productLevel!: EProductLevel;\n  public productCategories: IKeyValue[] = [];\n  public productTypes: IKeyValue[];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _store: Store<any>;\n  private _formsService: FormsService;\n  private _selectedChainId = '';\n  private _selectedGroupId = '';\n  private _selectedProductCategoryId = '';\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this.productTypes = [\n      {\n        key: EProductType.DRINK,\n        value: 'products.productType.drink',\n      },\n      {\n        key: EProductType.FOOD,\n        value: 'products.productType.food',\n      },\n      {\n        key: EProductType.OTHER,\n        value: 'products.productType.other',\n      },\n    ];\n\n    this._store = this._injector.get(Store);\n    this._formsService = this._injector.get(FormsService);\n\n    this._store\n      .pipe(select(loggedUserSelectors.getLoggedUserSettings), take(1))\n      .subscribe((userSettings: IAdminUserSettings | undefined): void => {\n        this._selectedChainId = userSettings?.selectedChainId || '';\n        this._selectedGroupId = userSettings?.selectedGroupId || '';\n        this._selectedProductCategoryId =\n          userSettings?.selectedProductCategoryId || '';\n      });\n\n    this._store\n      .pipe(\n        select(productCategoriesSelectors.getAllProductCategories),\n        untilDestroyed(this),\n      )\n      .subscribe((productCategories: IProductCategory[]): void => {\n        this.productCategories = productCategories.map(\n          (productCategory): IKeyValue => ({\n            key: productCategory._id,\n            value: productCategory.name,\n          }),\n        );\n      });\n  }\n\n  get imagePath(): string {\n    return _get(this.product, 'image');\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      extends: [''],\n      name: this._formBuilder.group(\n        {\n          hu: [''],\n          en: [''],\n          de: [''],\n        },\n        { validators: multiLangValidator },\n      ),\n      description: this._formBuilder.group(\n        {\n          hu: [''],\n          en: [''],\n          de: [''],\n        },\n        { validators: multiLangValidator },\n      ),\n      productCategoryId: ['', [Validators.required]],\n      productType: ['', [Validators.required]],\n      isVisible: [''],\n      position: [''],\n      image: [''],\n      contains: this._formBuilder.group({\n        allergens: this._formBuilder.group({\n          lactose: [''],\n          nuts: [''],\n        }),\n      }),\n      ingredients: [''],\n      _variantArr: this._formBuilder.array([]), // temp array!\n    });\n\n    if (this.product) {\n      this.dialogForm.patchValue(_omit(this.product, 'variants'));\n\n      // Parse variants object to temp array\n      const variantsArr = (<IProductVariant[]>(\n        objectToArray(this.product.variants || {})\n      )).sort(customNumberCompare('position'));\n\n      variantsArr.forEach((variant: IProductVariant): void => {\n        const variantGroup = this._formsService.createProductVariantFormGroup();\n        variantGroup.patchValue(variant);\n\n        (this.dialogForm?.controls._variantArr as FormArray).push(variantGroup);\n      });\n    } else {\n      // Patch ProductCategoryID\n      if (this._selectedProductCategoryId) {\n        this.dialogForm.controls.productCategoryId.patchValue(\n          this._selectedProductCategoryId,\n        );\n      }\n      this.dialogForm.controls.isVisible.patchValue(true);\n    }\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      const value = {\n        ...this.dialogForm?.value,\n        variants: {},\n      };\n\n      value._variantArr.map((variant: IProductVariant): void => {\n        value.variants[variant._id || ''] = _omit(variant, '_id');\n      });\n\n      delete value._variantArr;\n\n      if (_get(this.product, '_id')) {\n        this._dataService\n          .updateChainProduct(this._selectedChainId, this.product._id, value)\n          .then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.updateSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('CHAIN UPDATE ERROR', err);\n            },\n          );\n      } else {\n        this._dataService.insertChainProduct(this._selectedChainId, value).then(\n          (): void => {\n            this._toasterService.show(\n              EToasterType.SUCCESS,\n              '',\n              'common.insertSuccessful',\n            );\n            this.close();\n          },\n          err => {\n            console.error('CHAIN INSERT ERROR', err);\n          },\n        );\n      }\n    }\n  }\n\n  public imageUploadCallback = (imagePath: string): void => {\n    this.dialogForm?.controls.image.setValue(imagePath);\n\n    // Update existing user's image\n    if (_get(this.product, '_id')) {\n      this._dataService\n        .updateProductCategoryImagePath(\n          this._selectedGroupId,\n          this.product._id,\n          imagePath,\n        )\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageUploadSuccess',\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageUploadSuccess',\n      );\n    }\n  };\n\n  public imageRemoveCallback = (): void => {\n    this.dialogForm?.controls.image.setValue('');\n\n    if (this.product) {\n      _set(this.product, 'image', null);\n    }\n\n    // Update existing user's image\n    if (_get(this.product, '_id')) {\n      this._dataService\n        .updateProductCategoryImagePath(\n          this._selectedGroupId,\n          this.product._id,\n          null,\n        )\n        .then((): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.imageRemoveSuccess',\n          );\n        });\n    } else {\n      this._toasterService.show(\n        EToasterType.SUCCESS,\n        '',\n        'common.imageRemoveSuccess',\n      );\n    }\n  };\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{\n        (product && product._id\n          ? 'products.editProduct'\n          : 'products.newProduct'\n        ) | translate\n      }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.nameHU\"\n            type=\"text\"\n            [control]=\"dialogForm.get('name')!.get('hu')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.nameEN\"\n            type=\"text\"\n            [control]=\"dialogForm.get('name')!.get('en')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.nameDE\"\n            type=\"text\"\n            [control]=\"dialogForm.get('name')!.get('de')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.descriptionHU\"\n            type=\"text\"\n            [control]=\"\n              dialogForm.get('description')!.get('hu')! | asFormControl\n            \"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.descriptionEN\"\n            type=\"text\"\n            [control]=\"\n              dialogForm.get('description')!.get('en')! | asFormControl\n            \"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"common.descriptionDE\"\n            type=\"text\"\n            [control]=\"\n              dialogForm.get('description')!.get('de')! | asFormControl\n            \"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-select\n            [control]=\"dialogForm.get('productCategoryId')! | asFormControl\"\n            caption=\"common.productCategory\"\n            [options]=\"productCategories\"\n            [localize]=\"true\"\n          >\n          </bgap-form-select>\n        </div>\n\n        <div class=\"col-md-4\">\n          <bgap-form-select\n            [control]=\"dialogForm.get('productType')! | asFormControl\"\n            caption=\"common.productType\"\n            [options]=\"productTypes\"\n            [localize]=\"false\"\n          >\n          </bgap-form-select>\n        </div>\n\n        <div class=\"col-md-4 pt-4\">\n          <bgap-form-checkbox\n            caption=\"products.isVisible\"\n            [control]=\"dialogForm.get('isVisible')! | asFormControl\"\n          ></bgap-form-checkbox>\n        </div>\n      </div>\n\n      <!-- VARIANTS -->\n      <bgap-form-product-variants\n        [productLevel]=\"productLevel\"\n        [variantFormArray]=\"dialogForm.get('_variantArr')! | asFormArray\"\n      ></bgap-form-product-variants>\n\n      <!-- CONTAINS -->\n\n      <fieldset class=\"form\" formGroupName=\"contains\">\n        <legend class=\"label\">{{ 'products.contains' | translate }}</legend>\n\n        <div formGroupName=\"allergens\">\n          <label class=\"caption\">{{\n            'products.allergens.title' | translate\n          }}</label>\n\n          <div class=\"row\">\n            <div class=\"col-md-3\">\n              <bgap-form-checkbox\n                caption=\"products.allergens.lactose\"\n                [control]=\"\n                  dialogForm.get('contains')!.get('allergens')!.get('lactose')!\n                    | asFormControl\n                \"\n              ></bgap-form-checkbox>\n            </div>\n            <div class=\"col-md-3\">\n              <bgap-form-checkbox\n                caption=\"products.allergens.nuts\"\n                [control]=\"\n                  dialogForm.get('contains')!.get('allergens')!.get('nuts')!\n                    | asFormControl\n                \"\n              ></bgap-form-checkbox>\n            </div>\n          </div>\n\n          <label class=\"caption\">{{\n            'products.ingredients.title' | translate\n          }}</label>\n          <div class=\"col-md-3\">...</div>\n        </div>\n      </fieldset>\n\n      <bgap-form-clickable-image-input\n        [imagePath]=\"imagePath\"\n        [imageType]=\"eImageType.JPEG\"\n        [uploadCallbackFn]=\"imageUploadCallback\"\n        [removeCallbackFn]=\"imageRemoveCallback\"\n        [maxSize]=\"480\"\n        caption=\"common.image\"\n        uploadFolderPath=\"/products/\"\n        width=\"200px\"\n        height=\"200px\"\n        borderRadius=\"0.25rem\"\n      ></bgap-form-clickable-image-input>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { get as _get, omit as _omit } from 'lodash-es';\nimport { Observable } from 'rxjs';\nimport { skipWhile, take } from 'rxjs/operators';\n\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormArray, FormControl, Validators } from '@angular/forms';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { productCategoriesSelectors } from '@bgap/admin/shared/data-access/product-categories';\nimport { unitsSelectors } from '@bgap/admin/shared/data-access/units';\nimport {\n  AbstractFormDialogComponent,\n  FormsService,\n} from '@bgap/admin/shared/forms';\nimport { EToasterType } from '@bgap/admin/shared/utils';\nimport {\n  EProductLevel,\n  IAdminUserSettings,\n  IKeyValue,\n  ILane,\n  IProduct,\n  IProductCategory,\n  IProductVariant,\n  IUnit,\n} from '@bgap/shared/types';\nimport { customNumberCompare, objectToArray } from '@bgap/shared/utils';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-product-extend-form',\n  templateUrl: './product-extend-form.component.html',\n})\nexport class ProductExtendFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public product!: IProduct;\n  public productLevel!: EProductLevel;\n  public eProductLevel = EProductLevel;\n  public editing = false;\n  public currency!: string;\n  public productCategories$: Observable<IProductCategory[]>;\n  public unitLanes: IKeyValue[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _store: Store<any>;\n  private _formsService: FormsService;\n  private _selectedChainId?: string;\n  private _selectedGroupId?: string;\n  private _selectedUnitId?: string;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._formsService = this._injector.get(FormsService);\n\n    this._store = this._injector.get(Store);\n    this._store\n      .pipe(select(loggedUserSelectors.getLoggedUserSettings), take(1))\n      .subscribe((userSettings: IAdminUserSettings | undefined): void => {\n        this._selectedChainId = userSettings?.selectedChainId || '';\n        this._selectedGroupId = userSettings?.selectedGroupId || '';\n        this._selectedUnitId = userSettings?.selectedUnitId || '';\n      });\n\n    this.productCategories$ = this._store.pipe(\n      select(productCategoriesSelectors.getAllProductCategories),\n      untilDestroyed(this),\n    );\n\n    this._store\n      .pipe(\n        select(unitsSelectors.getSelectedUnit),\n        skipWhile((unit: IUnit | undefined): boolean => !unit),\n        take(1),\n      )\n      .subscribe((unit: IUnit | undefined): void => {\n        this.unitLanes = (<ILane[]>objectToArray(unit?.lanes || {})).map(\n          (lane): IKeyValue => ({\n            key: lane._id || '',\n            value: lane.name,\n          }),\n        );\n      });\n  }\n\n  get imagePath(): string {\n    return _get(this.product, 'image');\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      isVisible: [''],\n      _variantArr: this._formBuilder.array([]), // temp array!\n    });\n\n    if (this.productLevel === EProductLevel.GROUP) {\n      this.dialogForm.addControl(\n        'tax',\n        new FormControl('', Validators.required),\n      );\n    }\n    if (this.productLevel === EProductLevel.UNIT) {\n      this.dialogForm.addControl('laneId', new FormControl(''));\n      this.dialogForm.addControl('takeaway', new FormControl(''));\n    }\n\n    if (this.product) {\n      this.dialogForm.patchValue(_omit(this.product, 'variants'));\n\n      // Parse variants object to temp array\n      const variantsArr = (<IProductVariant[]>(\n        objectToArray(this.product.variants || {})\n      )).sort(customNumberCompare('position'));\n\n      variantsArr.forEach((variant: IProductVariant): void => {\n        const variantGroup = this._formsService.createProductVariantFormGroup();\n        variantGroup.patchValue(variant);\n\n        _get(variant, 'availabilities', []).forEach((availability): void => {\n          const availabilityGroup = this._formsService.createProductAvailabilityFormGroup();\n          availabilityGroup.patchValue(availability);\n          (variantGroup.controls.availabilities as FormArray).push(\n            availabilityGroup,\n          );\n        });\n\n        (this.dialogForm?.controls._variantArr as FormArray).push(variantGroup);\n      });\n\n      // Sort by \"position\"\n      const arr: IProductVariant[] = this.dialogForm.controls._variantArr.value;\n      arr.sort(customNumberCompare('position'));\n      this.dialogForm.controls._variantArr.patchValue(arr);\n    } else {\n      this.dialogForm.controls.isVisible.patchValue(true);\n    }\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      const value = {\n        ...this.dialogForm?.value,\n        variants: {},\n      };\n\n      value._variantArr.map((variant: IProductVariant): void => {\n        value.variants[variant._id || ''] = _omit(variant, '_id');\n      });\n\n      delete value._variantArr;\n\n      // Remove empty laneId\n      if (value.laneId === '') {\n        value.laneId = null;\n      }\n\n      if (this.editing) {\n        let updatePromise;\n\n        switch (this.productLevel) {\n          case EProductLevel.GROUP:\n            updatePromise = this._dataService.updateGroupProduct(\n              this._selectedGroupId || '',\n              this.product._id,\n              value,\n            );\n            break;\n          case EProductLevel.UNIT:\n            updatePromise = this._dataService.updateUnitProduct(\n              this._selectedUnitId || '',\n              this.product._id,\n              value,\n            );\n            break;\n          default:\n            break;\n        }\n\n        if (updatePromise) {\n          updatePromise.then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.updateSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('CHAIN UPDATE ERROR', err);\n            },\n          );\n        }\n      } else {\n        let insertPromise;\n\n        // Set extends path on insert\n        value.extends = this._generateExtendsPath();\n\n        switch (this.productLevel) {\n          case EProductLevel.GROUP:\n            insertPromise = this._dataService.insertGroupProduct(\n              this._selectedGroupId || '',\n              value,\n            );\n            break;\n          case EProductLevel.UNIT:\n            insertPromise = this._dataService.insertUnitProduct(\n              this._selectedUnitId || '',\n              value,\n            );\n            break;\n          default:\n            break;\n        }\n\n        if (insertPromise) {\n          insertPromise.then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.insertSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('CHAIN INSERT ERROR', err);\n            },\n          );\n        }\n      }\n    }\n  }\n\n  private _generateExtendsPath(): string | null {\n    switch (this.productLevel) {\n      case EProductLevel.GROUP:\n        return `products/chains/${this._selectedChainId}/${this.product._id}`;\n      case EProductLevel.UNIT:\n        return `products/groups/${this._selectedGroupId}/${this.product._id}`;\n      default:\n        return null;\n        break;\n    }\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{\n        (editing ? 'products.editProduct' : 'products.extendProduct')\n          | translate\n      }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <fieldset class=\"form\">\n        <legend class=\"label\">{{ 'products.basicInfo' | translate }}</legend>\n\n        <div class=\"subtitle-2 mb-2\">\n          <span>{{ product.name | localize }}</span>\n        </div>\n        <div class=\"caption mb-2\">\n          <span>{{ product.description | localize }}</span>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-3\" *ngIf=\"productLevel === eProductLevel.GROUP\">\n            <bgap-form-text-input\n              caption=\"common.taxPercent\"\n              type=\"number\"\n              [control]=\"dialogForm.get('tax')! | asFormControl\"\n            ></bgap-form-text-input>\n          </div>\n          <div class=\"col-3\" *ngIf=\"productLevel === eProductLevel.UNIT\">\n            <bgap-form-select\n              [control]=\"dialogForm.get('laneId')! | asFormControl\"\n              caption=\"products.lane\"\n              [options]=\"unitLanes\"\n              [localize]=\"false\"\n              [forceShowEmptyOption]=\"true\"\n            >\n            </bgap-form-select>\n          </div>\n          <div class=\"col-3 pt-4\" *ngIf=\"productLevel === eProductLevel.UNIT\">\n            <bgap-form-checkbox\n              caption=\"products.takeaway\"\n              [control]=\"dialogForm.get('takeaway')! | asFormControl\"\n            ></bgap-form-checkbox>\n          </div>\n          <div class=\"col-3 pt-4\">\n            <bgap-form-checkbox\n              caption=\"products.isVisible\"\n              [control]=\"dialogForm.get('isVisible')! | asFormControl\"\n            ></bgap-form-checkbox>\n          </div>\n        </div>\n      </fieldset>\n\n      <bgap-form-product-variants\n        [productLevel]=\"productLevel\"\n        [variantFormArray]=\"dialogForm.get('_variantArr')! | asFormArray\"\n        [allowAddVariant]=\"false\"\n        [currency]=\"currency\"\n      ></bgap-form-product-variants>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { cloneDeep as _cloneDeep } from 'lodash-es';\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport {\n  EAdminRole,\n  EProductLevel,\n  EVariantAvailabilityType,\n  IAdminUserRole,\n  IProduct,\n  IProductVariant,\n} from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { ProductExtendFormComponent } from '../product-extend-form/product-extend-form.component';\nimport { ProductFormComponent } from '../product-form/product-form.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-product-list-item',\n  templateUrl: './product-list-item.component.html',\n  styleUrls: ['./product-list-item.component.scss'],\n})\nexport class ProductListItemComponent implements OnInit, OnDestroy {\n  @Input() product!: IProduct;\n  @Input() pending = true;\n  @Input() productLevel!: EProductLevel;\n  @Input() currency = '';\n  @Input() isFirst?: boolean;\n  @Input() isLast?: boolean;\n  @Output() positionChange = new EventEmitter();\n\n  public hasRoleToEdit = false;\n  public EProductLevel = EProductLevel;\n  public EVariantAvailabilityType = EVariantAvailabilityType;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService,\n  ) {}\n\n  ngOnInit(): void {\n    this._store\n      .pipe(\n        select(loggedUserSelectors.getLoggedUserRoles),\n        untilDestroyed(this),\n      )\n      .subscribe((adminUserRole: IAdminUserRole | undefined): void => {\n        switch (this.productLevel) {\n          case EProductLevel.CHAIN:\n            this.hasRoleToEdit = [\n              EAdminRole.SUPERUSER,\n              EAdminRole.CHAIN_ADMIN,\n            ].includes(adminUserRole?.role || EAdminRole.INACTIVE);\n            break;\n          case EProductLevel.GROUP:\n            this.hasRoleToEdit = [\n              EAdminRole.SUPERUSER,\n              EAdminRole.CHAIN_ADMIN,\n              EAdminRole.GROUP_ADMIN,\n            ].includes(adminUserRole?.role || EAdminRole.INACTIVE);\n            break;\n          case EProductLevel.UNIT:\n            this.hasRoleToEdit = [\n              EAdminRole.SUPERUSER,\n              EAdminRole.CHAIN_ADMIN,\n              EAdminRole.GROUP_ADMIN,\n              EAdminRole.UNIT_ADMIN,\n            ].includes(adminUserRole?.role || EAdminRole.INACTIVE);\n            break;\n          default:\n            break;\n        }\n      });\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  get variantsArray(): IProductVariant[] {\n    return Object.values(this.product.variants || {});\n  }\n\n  public editProduct(): void {\n    let dialog;\n\n    if (this.productLevel === EProductLevel.CHAIN) {\n      dialog = this._nbDialogService.open(ProductFormComponent, {\n        dialogClass: 'form-dialog',\n      });\n    } else {\n      dialog = this._nbDialogService.open(ProductExtendFormComponent, {\n        dialogClass: 'form-dialog',\n      });\n\n      dialog.componentRef.instance.editing = true;\n      dialog.componentRef.instance.currency = this.currency;\n    }\n\n    dialog.componentRef.instance.product = _cloneDeep(this.product);\n    dialog.componentRef.instance.productLevel = this.productLevel;\n  }\n\n  public extendProduct(): void {\n    const dialog = this._nbDialogService.open(ProductExtendFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.product = { ...this.product };\n    dialog.componentRef.instance.productLevel = this.productLevel;\n    dialog.componentRef.instance.editing = false;\n    dialog.componentRef.instance.currency = this.currency;\n  }\n\n  public moveUp(): void {\n    this.positionChange.emit({\n      change: -1,\n      productId: this.product._id,\n    });\n  }\n\n  public moveDown(): void {\n    this.positionChange.emit({\n      change: 1,\n      productId: this.product._id,\n    });\n  }\n}\n","<nb-user\n  class=\"float-left\"\n  [name]=\"product.name | localize\"\n  [title]=\"product.description | localize\"\n  [picture]=\"product.image\"\n></nb-user>\n\n<bgap-status-led class=\"ml-1\" [status]=\"product.isVisible\"></bgap-status-led>\n\n<bgap-colorized-lane-icon\n  *ngIf=\"productLevel === EProductLevel.UNIT\"\n  [laneId]=\"product.laneId!\"\n></bgap-colorized-lane-icon>\n\n<ng-container *ngIf=\"hasRoleToEdit\">\n  <div *ngIf=\"!pending\">\n    <button\n      nbButton\n      shape=\"round\"\n      size=\"tiny\"\n      class=\"float-right\"\n      [title]=\"'common.edit' | translate\"\n      (click)=\"editProduct()\"\n    >\n      <nb-icon icon=\"edit-outline\"></nb-icon>\n    </button>\n\n    <ng-container *ngIf=\"productLevel === EProductLevel.UNIT\">\n      <button\n        [hidden]=\"isLast\"\n        nbButton\n        shape=\"round\"\n        size=\"tiny\"\n        [title]=\"'products.moveDown' | translate\"\n        class=\"float-right mr-2\"\n        (click)=\"moveDown()\"\n      >\n        <nb-icon icon=\"chevron-down\"></nb-icon>\n      </button>\n      <button\n        [hidden]=\"isFirst\"\n        nbButton\n        shape=\"round\"\n        size=\"tiny\"\n        [title]=\"'products.moveUp' | translate\"\n        class=\"float-right mr-2\"\n        (click)=\"moveUp()\"\n      >\n        <nb-icon icon=\"chevron-up\"></nb-icon>\n      </button>\n    </ng-container>\n  </div>\n\n  <button\n    *ngIf=\"pending\"\n    nbButton\n    status=\"danger\"\n    shape=\"round\"\n    size=\"tiny\"\n    class=\"float-right\"\n    (click)=\"extendProduct()\"\n  >\n    <nb-icon icon=\"download-outline\"></nb-icon>\n  </button>\n</ng-container>\n<div class=\"clearfix\"></div>\n\n<div class=\"caption ml-5\">\n  <div\n    class=\"caption d-inline-block availability-badge\"\n    [ngStyle]=\"{ opacity: variant.isAvailable ? '' : '0.7' }\"\n    *ngFor=\"let variant of variantsArray\"\n  >\n    <strong>{{ variant.variantName | localize }}</strong> ({{\n      variant.pack.size\n    }}\n    {{ variant.pack.unit }}) -\n\n    <ng-container\n      *ngFor=\"let availability of variant.availabilities; last as isLast\"\n    >\n      <bgap-variant-availability-badge\n        [availability]=\"availability\"\n        [currency]=\"currency\"\n      ></bgap-variant-availability-badge>\n\n      <span *ngIf=\"!isLast\"> &bull; </span>\n    </ng-container>\n\n    <bgap-status-led\n      class=\"ml-1\"\n      [status]=\"variant.isAvailable\"\n    ></bgap-status-led>\n  </div>\n</div>\n","import { AdminPagesProductsModule } from './lib/admin-pages-products.module';\n\nexport { AdminPagesProductsModule };\n"],"sourceRoot":"webpack:///"}