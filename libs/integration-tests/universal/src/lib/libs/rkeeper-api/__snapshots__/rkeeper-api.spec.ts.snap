// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test the communication between anyupp/rkeeper send an unpaid order to rkeeper by HTTP post, then send another request to set it to Paid status: config.auth 1`] = `
Object {
  "password": "b6302d53085c9486d0f765ec475f18",
  "username": "795_50_155_539",
}
`;

exports[`Test the communication between anyupp/rkeeper send an unpaid order to rkeeper by HTTP post, then send another request to set it to Paid status: config.auth 2`] = `
Object {
  "password": "b6302d53085c9486d0f765ec475f18",
  "username": "795_50_155_539",
}
`;

exports[`Test the communication between anyupp/rkeeper send order to rkeeper by HTTP post: config.auth 1`] = `
Object {
  "password": "b6302d53085c9486d0f765ec475f18",
  "username": "795_50_155_539",
}
`;

exports[`Test the communication between anyupp/rkeeper test the menusync handler - reply with unit not found 1`] = `
Object {
  "error": "Unit with external ID foobar cannot be found",
}
`;

exports[`Test the communication between anyupp/rkeeper test the menusync route - reply with unit not found 1`] = `
Object {
  "error": "Unit with external ID foobar cannot be found",
}
`;

exports[`Test the communication between anyupp/rkeeper test the order status route - reply with unit not found 1`] = `
Object {
  "error": "Unit with restaurant ID foobar cannot be found",
}
`;

exports[`Test the rkeeper api basic functionality Create products by an rkeeper product: UNITPRODUCTST 1`] = `
Array [
  Object {
    "allergens": null,
    "configSets": Array [],
    "createdAt": "MASKED DATE",
    "deletedAt": null,
    "description": null,
    "dirty": true,
    "id": "MASKED ID",
    "image": null,
    "isVisible": true,
    "laneId": null,
    "name": Object {
      "de": null,
      "en": null,
      "hu": "Próba ital",
    },
    "position": -1,
    "productCategoryId": "default-product-category-rkeeper-MASKED ID-unit",
    "productType": "dish",
    "supportedServingModes": Array [
      "inPlace",
    ],
    "takeaway": null,
    "takeawayTax": null,
    "tax": -1,
    "unitId": "rkeeper-MASKED ID-unit",
    "updatedAt": "MASKED DATE",
    "variants": Array [
      Object {
        "availabilities": Array [
          Object {
            "dayFrom": null,
            "dayTo": null,
            "price": 50000,
            "timeFrom": null,
            "timeTo": null,
            "type": "A",
          },
        ],
        "externalId": "9991000114",
        "id": "MASKED ID",
        "isAvailable": true,
        "netPackagingFee": null,
        "ownerProduct": "MASKED ID",
        "pack": Object {
          "size": 1,
          "unit": "zsák",
        },
        "position": -1,
        "price": 50000,
        "soldOut": null,
        "variantName": Object {
          "de": null,
          "en": null,
          "hu": "Próba ital",
        },
      },
    ],
  },
]
`;

exports[`Test the rkeeper api basic functionality Create products by an rkeeper product: update rkeeper product 1`] = `
Array [
  Object {
    "allergens": null,
    "configSets": Array [],
    "createdAt": "MASKED DATE",
    "deletedAt": null,
    "description": null,
    "dirty": true,
    "id": "MASKED ID",
    "image": null,
    "isVisible": true,
    "laneId": null,
    "name": Object {
      "de": null,
      "en": null,
      "hu": "Próba ital",
    },
    "position": -1,
    "productCategoryId": "default-product-category-rkeeper-MASKED ID-unit",
    "productType": "dish",
    "supportedServingModes": Array [
      "inPlace",
    ],
    "takeaway": null,
    "takeawayTax": null,
    "tax": -1,
    "unitId": "rkeeper-MASKED ID-unit",
    "updatedAt": "MASKED DATE",
    "variants": Array [
      Object {
        "availabilities": Array [
          Object {
            "dayFrom": null,
            "dayTo": null,
            "price": 50000,
            "timeFrom": null,
            "timeTo": null,
            "type": "A",
          },
        ],
        "externalId": "9991000114",
        "id": "MASKED ID",
        "isAvailable": true,
        "netPackagingFee": null,
        "ownerProduct": "MASKED ID",
        "pack": Object {
          "size": 1,
          "unit": "zsák",
        },
        "position": -1,
        "price": 50000,
        "soldOut": null,
        "variantName": Object {
          "de": null,
          "en": null,
          "hu": "Próba ital",
        },
      },
    ],
  },
  Object {
    "availabilities": Array [
      Object {
        "dayFrom": null,
        "dayTo": null,
        "price": 1000000,
        "timeFrom": null,
        "timeTo": null,
        "type": "A",
      },
    ],
    "createdAt": "MASKED DATE",
    "externalId": "9991000114",
    "id": "MASKED ID",
    "isAvailable": true,
    "netPackagingFee": null,
    "ownerProduct": "MASKED ID",
    "pack": Object {
      "size": 1,
      "unit": "zsák",
    },
    "position": -1,
    "price": 1000000,
    "soldOut": null,
    "updatedAt": "MASKED DATE",
    "variantName": Object {
      "de": null,
      "en": null,
      "hu": "NEW NAME",
    },
  },
]
`;

exports[`Test the rkeeper api basic functionality It shouls be able to search for external variant: NOT existing external product 1`] = `null`;

exports[`Test the rkeeper api basic functionality It shouls be able to search for external variant: existing external product 1`] = `"rkeeper-cf0d1110-a2ce-45cf-aa69-6782bbc44cad-unitproduct"`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product component sets 1`] = `
Object {
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": "describe me",
  "dirty": true,
  "externalId": "9991017198",
  "id": "MASKED ID",
  "items": Array [
    "MASKED ID",
    "MASKED ID",
    "MASKED ID",
    "MASKED ID",
    "MASKED ID",
  ],
  "maxSelection": null,
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Tejek 90ml",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "supportedServingModes": null,
  "type": "rkeeper",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product component sets 2`] = `
Object {
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": "describe me",
  "dirty": true,
  "externalId": "9991017199",
  "id": "MASKED ID",
  "items": Array [
    "MASKED ID",
    "MASKED ID",
  ],
  "maxSelection": null,
  "name": Object {
    "de": null,
    "en": null,
    "hu": "2dl papírpohár",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "supportedServingModes": null,
  "type": "rkeeper",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 1`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991017195",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Kókuszital (90ml)",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 2`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991017194",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Laktózmentes tej (90ml)",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 3`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991017193",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Mandulaital (90ml)",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 4`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991011504",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Papírpohár 2dl",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 5`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991011517",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Saját pohár",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 6`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991017196",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Tej sima (90ml)",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the rkeeper api basic functionality Test full rkeeper product handling - the use case: Product components 7`] = `
Object {
  "allergens": null,
  "createdAt": "MASKED DATE",
  "deletedAt": null,
  "description": null,
  "dirty": true,
  "externalId": "9991017191",
  "id": "MASKED ID",
  "name": Object {
    "de": null,
    "en": null,
    "hu": "Zabital (90ml)",
  },
  "ownerEntity": "rkeeper-MASKED ID-unit",
  "updatedAt": "MASKED DATE",
}
`;

exports[`Test the communication between anyupp/rkeeper test the order status route - reply with unit not found 1`] = `
Object {
  "error": "Unit with restaurant ID foobar cannot be found",
}
`;

exports[`Test the rkeeper api basic functionality Test the menusync handler 1`] = `[InvalidBucketName: The specified bucket is not valid.]`;

exports[`Test the rkeeper api basic functionality Test the product handling logic in fargate in case of non-existing unit 1`] = `"Unit with external ID foobar cannot be found"`;

exports[`Test the rkeeper api basic functionality Test waiter caller 1`] = `[Error: GraphQL error: unit_cannot_call_waiter]`;

exports[`Test the rkeeper api basic functionality Test waiter caller 2`] = `
Observable {
  "_isScalar": false,
  "operator": CatchOperator {
    "caught": [Circular],
    "selector": [Function],
  },
  "source": Observable {
    "_isScalar": false,
    "operator": SwitchMapOperator {
      "project": [Function],
    },
    "source": Observable {
      "_isScalar": false,
      "operator": MapOperator {
        "project": [Function],
        "thisArg": undefined,
      },
      "source": Observable {
        "_isScalar": false,
        "_subscribe": [Function],
      },
    },
  },
}
`;

exports[`Test the rkeeper api basic functionality getBusinessEntityInfo - existing restaurant 1`] = `
Object {
  "unitId": "rkeeper-cf0d1110-a2ce-45cf-aa69-6782bbc44cad-unit",
}
`;

exports[`Test the rkeeper api basic functionality getBusinessEntityInfo - not existing restaurant 1`] = `[Error: Cannot find unit belonging to external unit id NOT EXISTING RESTO\`]`;
