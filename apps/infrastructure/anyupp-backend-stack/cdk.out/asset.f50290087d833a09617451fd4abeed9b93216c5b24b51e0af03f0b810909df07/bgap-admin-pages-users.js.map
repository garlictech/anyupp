{"version":3,"sources":["./libs/admin/pages/users/src/lib/components/user-form/user-form.component.ts","./libs/admin/pages/users/src/lib/components/user-form/user-form.component.html","./libs/admin/pages/users/src/index.ts","./libs/admin/pages/users/src/lib/admin-pages-users.module.ts","./libs/admin/pages/users/src/lib/components/user-list-item/user-list-item.component.ts","./libs/admin/pages/users/src/lib/components/user-list-item/user-list-item.component.html","./libs/admin/pages/users/src/lib/components/user-list/user-list.component.ts","./libs/admin/pages/users/src/lib/components/user-list/user-list.component.html"],"names":[],"mappings":"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","file":"bgap-admin-pages-users.js","sourcesContent":["import { Component, Injector, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { AuthService } from '@bgap/admin/shared/data-access/auth';\nimport { AbstractFormDialogComponent } from '@bgap/admin/shared/forms';\nimport { EToasterType, contactFormGroup } from '@bgap/admin/shared/utils';\nimport { IUser } from '@bgap/shared/types';\n\n@Component({\n  selector: 'bgap-user-form',\n  templateUrl: './user-form.component.html',\n})\nexport class UserFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public user: IUser | undefined;\n\n  private _authService: AuthService;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._authService = this._injector.get(AuthService);\n  }\n\n  get userImage(): string {\n    return this.user?.profileImage || '';\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      name: ['', [Validators.required]],\n      ...contactFormGroup(this._formBuilder),\n      profileImage: [''], // Just for file upload!!\n    });\n\n    if (this.user) {\n      this.dialogForm.patchValue(this.user);\n    }\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      if (this.user?._id) {\n        this._dataService\n          .updateUser(this.user._id, this.dialogForm?.value)\n          .then(\n            (): void => {\n              this._toasterService.show(\n                EToasterType.SUCCESS,\n                '',\n                'common.updateSuccessful',\n              );\n              this.close();\n            },\n            err => {\n              console.error('USER UPDATE ERROR', err);\n            },\n          );\n      } else {\n        this._authService\n          .createUserWithEmailAndRandomPassword(this.dialogForm?.value.email)\n          .then(\n            (): void => {\n              this._dataService.insertUser(this.dialogForm?.value).then(\n                (): void => {\n                  this._authService\n                    .sendPasswordResetEmail(this.dialogForm?.value.email)\n                    .then(\n                      (): void => {\n                        this._toasterService.show(\n                          EToasterType.SUCCESS,\n                          '',\n                          'common.insertSuccessful',\n                        );\n                        this.close();\n                      },\n                      err => {\n                        console.error('PASSW RESET ERROR', err);\n                      },\n                    );\n                },\n                err => {\n                  console.error('USER INSERT ERROR', err);\n                },\n              );\n            },\n            err => {\n              console.error('AUTH USER CRATE ERROR', err);\n            },\n          );\n      }\n    }\n  }\n\n  /*\n  public imageUploadCallback = (imagePath: string): void => {\n    this.dialogForm.controls.profileImage.setValue(imagePath);\n\n    // Update existing user's image\n    if (_get(this.user, '_id')) {\n      this._dataService.updateUserProfileImagePath(this.user._id, imagePath).then((): void => {\n        this._toasterService.show(EToasterType.SUCCESS, '', 'common.imageUploadSuccess');\n      });\n    } else {\n      this._toasterService.show(EToasterType.SUCCESS, '', 'common.imageUploadSuccess');\n    }\n  };\n\n  public imageRemoveCallback = (): void => {\n    this.dialogForm.controls.profileImage.setValue('');\n    delete this.user.profileImage;\n\n    // Update existing user's image\n    if (_get(this.user, '_id')) {\n      this._dataService.updateUserProfileImagePath(this.user._id, null).then((): void => {\n        this._toasterService.show(EToasterType.SUCCESS, '', 'common.imageRemoveSuccess');\n      });\n    } else {\n      this._toasterService.show(EToasterType.SUCCESS, '', 'common.imageRemoveSuccess');\n    }\n  };\n  */\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ (user && user._id ? 'users.editUser' : 'users.newUser') | translate }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form\n      [formGroup]=\"dialogForm!\"\n      (ngSubmit)=\"submit()\"\n      [autocomplete]=\"false\"\n    >\n      <bgap-form-text-input\n        caption=\"common.name\"\n        type=\"text\"\n        [control]=\"dialogForm.get('name')! | asFormControl\"\n      ></bgap-form-text-input>\n\n      <bgap-form-contact-group\n        [contactFormGroup]=\"dialogForm | asFormGroup\"\n      ></bgap-form-contact-group>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n","import { AdminPagesUsersModule } from './lib/admin-pages-users.module';\n\nexport { AdminPagesUsersModule };\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbIconModule,\n  NbLayoutModule,\n  NbListModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { UserFormComponent } from './components/user-form/user-form.component';\nimport { UserListItemComponent } from './components/user-list-item/user-list-item.component';\nimport { UserListComponent } from './components/user-list/user-list.component';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n];\n\n@NgModule({\n  declarations: [UserListComponent, UserListItemComponent, UserFormComponent],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AdminSharedFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSharedPipesModule,\n    RouterModule.forChild([\n      {\n        component: UserListComponent,\n        path: '',\n      },\n    ]),\n    ...NB_MODULES,\n  ],\n})\nexport class AdminPagesUsersModule {}\n","import { cloneDeep as _cloneDeep } from 'lodash-es';\nimport { IUser } from '@bgap/shared/types';\n\nimport { Component, Input } from '@angular/core';\nimport { NbDialogService } from '@nebular/theme';\n\nimport { UserFormComponent } from '../user-form/user-form.component';\n\n@Component({\n  selector: 'bgap-user-list-item',\n  templateUrl: './user-list-item.component.html',\n})\nexport class UserListItemComponent {\n  @Input() user!: IUser;\n\n  constructor(private _nbDialogService: NbDialogService) {}\n\n  editUser(): void {\n    const dialog = this._nbDialogService.open(UserFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.user = _cloneDeep(this.user);\n  }\n}\n","<nb-user\n  class=\"float-left\"\n  [name]=\"user.name!\"\n  [title]=\"user.email!\"\n  [picture]=\"user.profileImage!\"\n></nb-user>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right\"\n  [title]=\"'common.edit' | translate\"\n  (click)=\"editUser()\"\n>\n  <nb-icon icon=\"edit-outline\"></nb-icon>\n</button>\n","import { Observable } from 'rxjs';\n\nimport { Component, OnDestroy } from '@angular/core';\nimport { usersSelectors } from '@bgap/admin/shared/data-access/users';\nimport { IUser } from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { UserFormComponent } from '../user-form/user-form.component';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-user-list',\n  templateUrl: './user-list.component.html',\n})\nexport class UserListComponent implements OnDestroy {\n  public users$: Observable<IUser[]>;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService,\n  ) {\n    this.users$ = this._store.pipe(\n      select(usersSelectors.getAllUsers),\n      untilDestroyed(this),\n    );\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  addUser(): void {\n    this._nbDialogService.open(UserFormComponent, {\n      hasBackdrop: true,\n      closeOnBackdropClick: false,\n      hasScroll: true,\n      dialogClass: 'form-dialog',\n    });\n  }\n}\n","<nb-card class=\"h-100 mb-0\">\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'users.listTitle' | translate }}\n    </div>\n    <button\n      nbButton\n      type=\"button\"\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"addUser()\"\n    >\n      <nb-icon icon=\"plus-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <nb-list-item *ngFor=\"let user of users$ | async\">\n      <bgap-user-list-item class=\"w-100\" [user]=\"user\"></bgap-user-list-item>\n    </nb-list-item>\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}