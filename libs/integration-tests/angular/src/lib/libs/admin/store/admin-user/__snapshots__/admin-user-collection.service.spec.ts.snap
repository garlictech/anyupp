// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`AdminUserCollectionService test should add entity to the list 1`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should add entity to the list 2`] = `
Array [
  Object {
    "id": "test_fixture_id_1",
    "name": "Text fixture 1",
  },
]
`;

exports[`AdminUserCollectionService test should filter entity list 1`] = `
Array [
  Object {
    "id": "test_fixture_id_1",
    "name": "Text fixture 1",
  },
  Object {
    "id": "test_fixture_id_2",
    "name": "Text fixture 2",
  },
  Object {
    "id": "test_fixture_id_3",
    "name": "Text fixture 3",
  },
]
`;

exports[`AdminUserCollectionService test should filter entity list 2`] = `
Array [
  Object {
    "id": "test_fixture_id_2",
    "name": "Text fixture 2",
  },
]
`;

exports[`AdminUserCollectionService test should get existing item from the API (force load) 1`] = `Array []`;

exports[`AdminUserCollectionService test should get existing item from the API (force load) 2`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should get existing item from the API (force load) 3`] = `"test_fixture_id_1"`;

exports[`AdminUserCollectionService test should get existing item from the API (force load) 4`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should get existing item from the cache 1`] = `Array []`;

exports[`AdminUserCollectionService test should get existing item from the cache 2`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should get existing item from the cache 3`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should get non-existing item from the API 1`] = `
Array [
  Object {
    "id": "test_fixture_id_1",
    "name": "Text fixture 1",
  },
]
`;

exports[`AdminUserCollectionService test should get non-existing item from the API 2`] = `"test_fixture_id_1"`;

exports[`AdminUserCollectionService test should get non-existing item from the API 3`] = `
Array [
  Object {
    "id": "test_fixture_id_1",
    "name": "Text fixture 1",
  },
]
`;

exports[`AdminUserCollectionService test should get non-existing item from the API and not save to entity list 1`] = `Array []`;

exports[`AdminUserCollectionService test should get non-existing item from the API and not save to entity list 2`] = `"test_fixture_id_1"`;

exports[`AdminUserCollectionService test should get non-existing item from the API and not save to entity list 3`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should get non-existing item from the API and not save to entity list 4`] = `Array []`;

exports[`AdminUserCollectionService test should patch entity list filter 1`] = `
Object {
  "id": "id_filter",
}
`;

exports[`AdminUserCollectionService test should patch entity list filter 2`] = `
Object {
  "id": "id_filter_mod",
  "name": "name_filter",
}
`;

exports[`AdminUserCollectionService test should update entity to the list 1`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Text fixture 1",
}
`;

exports[`AdminUserCollectionService test should update entity to the list 2`] = `
Object {
  "id": "test_fixture_id_1",
  "name": "Modded name",
}
`;

exports[`AdminUserCollectionService test should update entity to the list 3`] = `
Array [
  Object {
    "id": "test_fixture_id_1",
    "name": "Modded name",
  },
]
`;
