// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: Cleanup 1`] = `null`;

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: Deleting nonexisting user 1`] = `null`;

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: Malformed email 1`] = `[Error: GraphQL error: Invalid email address format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: Malformed phone number 1`] = `[Error: GraphQL error: Invalid phone number format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: Should not create existing user 1`] = `
[Error: GraphQL error: {
  "code": "UserAlreadyExists",
  "message": "User already exists"
}]
`;

exports[`Admin user creation/deletion Admin user should be created/deleted with IAM API call: IAM API call: read back 1`] = `
Object {
  "createdAt": Any<String>,
  "email": "anonymuser+foobar@anyupp.com",
  "id": "int-test-user-name",
  "name": "Mekk Elek",
  "phone": "+6834832765328",
  "profileImage": null,
  "roleContexts": Object {
    "items": Array [],
    "nextToken": null,
  },
  "settings": null,
  "updatedAt": Any<String>,
}
`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: Cleanup 1`] = `null`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: Deleting nonexisting user 1`] = `null`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: Malformed email 1`] = `[Error: GraphQL error: Invalid email address format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: Malformed phone number 1`] = `[Error: GraphQL error: Invalid phone number format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: Should not create existing user 1`] = `
[Error: GraphQL error: {
  "code": "UserAlreadyExists",
  "message": "User already exists"
}]
`;

exports[`Admin user creation/deletion Admin user should be created/deleted with authenticated API call: Auth CRUD api call: read back 1`] = `
Object {
  "createdAt": Any<String>,
  "email": "anonymuser+foobar@anyupp.com",
  "id": "int-test-user-name",
  "name": "Mekk Elek",
  "phone": "+6834832765328",
  "profileImage": null,
  "roleContexts": Object {
    "items": Array [],
    "nextToken": null,
  },
  "settings": null,
  "updatedAt": Any<String>,
}
`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: Cleanup 1`] = `undefined`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: Deleting nonexisting user 1`] = `null`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: Malformed email 1`] = `[InvalidParameterException: Invalid email address format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: Malformed phone number 1`] = `[InvalidParameterException: Invalid phone number format.]`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: Should not create existing user 1`] = `
"{
  \\"code\\": \\"UserAlreadyExists\\",
  \\"message\\": \\"User already exists\\"
}"
`;

exports[`Admin user creation/deletion Admin user should be created/deleted with resolver code: RESOLVER CODE: read back 1`] = `
Object {
  "createdAt": Any<String>,
  "email": "anonymuser+foobar@anyupp.com",
  "id": "int-test-user-name",
  "name": "Mekk Elek",
  "phone": "+6834832765328",
  "profileImage": null,
  "roleContexts": Object {
    "items": Array [],
    "nextToken": null,
  },
  "settings": null,
  "updatedAt": Any<String>,
}
`;
