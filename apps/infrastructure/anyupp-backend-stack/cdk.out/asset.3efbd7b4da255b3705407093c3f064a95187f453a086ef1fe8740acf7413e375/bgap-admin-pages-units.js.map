{"version":3,"sources":["./libs/admin/pages/units/src/lib/components/unit-list/unit-list.component.ts","./libs/admin/pages/units/src/lib/components/unit-list/unit-list.component.html","./libs/admin/pages/units/src/lib/components/unit-floor-map/unit-floor-map.component.ts","./libs/admin/pages/units/src/lib/components/unit-floor-map/unit-floor-map.component.html","./libs/admin/pages/units/src/index.ts","./libs/admin/pages/units/src/lib/admin-pages-units.module.ts","./libs/admin/pages/units/src/lib/components/unit-list-item/unit-list-item.component.ts","./libs/admin/pages/units/src/lib/components/unit-list-item/unit-list-item.component.html","./libs/admin/pages/units/src/lib/components/unit-form/unit-form.component.ts","./libs/admin/pages/units/src/lib/components/unit-form/unit-form.component.html"],"names":[],"mappings":"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","file":"bgap-admin-pages-units.js","sourcesContent":["import { cloneDeep as _cloneDeep } from 'lodash-es';\nimport { combineLatest, Observable } from 'rxjs';\n\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport { IGroup, IUnit } from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\nimport { UnitFormComponent } from '../unit-form/unit-form.component';\nimport { unitsSelectors } from '@bgap/admin/shared/data-access/units';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-unit-list',\n  templateUrl: './unit-list.component.html',\n})\nexport class UnitListComponent implements OnInit, OnDestroy {\n  public units: IUnit[] = [];\n  public selectedChainId$!: Observable<string | undefined | null>;\n\n  constructor(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    private _store: Store<any>,\n    private _nbDialogService: NbDialogService\n  ) {}\n\n  ngOnInit(): void {\n    this.selectedChainId$ = this._store.pipe(\n      select(loggedUserSelectors.getSelectedChainId),\n      untilDestroyed(this)\n    );\n\n    combineLatest([\n      this._store.pipe(\n        select(groupsSelectors.getSelectedChainGroups),\n        untilDestroyed(this)\n      ),\n      this._store.pipe(\n        select(unitsSelectors.getSelectedGroupUnits),\n        untilDestroyed(this)\n      ),\n    ]).subscribe(([groups, units]: [IGroup[], IUnit[]]): void => {\n      this.units = _cloneDeep(units);\n\n      this.units.map((unit): void => {\n        unit._group = groups.find((r): boolean => r._id === unit.groupId);\n      });\n    });\n  }\n\n  ngOnDestroy(): void {\n    // untilDestroyed uses it.\n  }\n\n  public addUnit(): void {\n    this._nbDialogService.open(UnitFormComponent, {\n      hasBackdrop: true,\n      closeOnBackdropClick: false,\n      hasScroll: true,\n      dialogClass: 'form-dialog',\n    });\n  }\n}\n","<nb-card class=\"h-100 mb-0\">\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ 'units.listTitle' | translate }}\n    </div>\n    <button\n      nbButton\n      type=\"button\"\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"addUnit()\"\n    >\n      <nb-icon icon=\"plus-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <ng-container *ngFor=\"let unit of units\">\n      <nb-list-item *ngIf=\"unit._group?.chainId === (selectedChainId$ | async)\">\n        <bgap-unit-list-item class=\"w-100\" [unit]=\"unit\"></bgap-unit-list-item>\n      </nb-list-item>\n    </ng-container>\n  </nb-card-body>\n</nb-card>\n","import { Component, Injector, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { AbstractFormDialogComponent } from '@bgap/admin/shared/forms';\nimport * as floorMapLib from '@bgap/admin/shared/floor-map';\nimport { EToasterType } from '@bgap/admin/shared/utils';\nimport { IUnit } from '@bgap/shared/types';\nimport { Store } from '@ngrx/store';\n\n@Component({\n  selector: 'bgap-unit-floor-map',\n  templateUrl: './unit-floor-map.component.html',\n  styleUrls: ['./unit-floor-map.component.scss'],\n})\nexport class UnitFloorMapComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public unit!: IUnit;\n  public rawForm!: FormGroup;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _store: Store<any>;\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._store = this._injector.get(Store);\n    this._store.dispatch(floorMapLib.floorMapActions.resetFloorMap());\n  }\n\n  ngOnInit(): void {\n    this.dialogForm = this._formBuilder.group({\n      floorMap: [this.unit.floorMap || ''],\n    });\n\n    /*\n    this.rawForm = this._formBuilder.group({\n      floorMap: [JSON.stringify(this.unit.floorMap) || {}],\n    });\n    */\n  }\n\n  public submit(): void {\n    this._dataService\n      .updateUnit(this.unit._id, { floorMap: floorMapLib.mapRawData })\n      .then(\n        (): void => {\n          this._toasterService.show(\n            EToasterType.SUCCESS,\n            '',\n            'common.updateSuccessful'\n          );\n          this.close();\n        },\n        err => {\n          console.error('GROUP UPDATE ERROR', err);\n        }\n      );\n  }\n\n  /*\n  public submitRaw(): void {\n    this._dataService.updateUnit(this.unit._id, { floorMap: JSON.parse(this.rawForm.value.floorMap) }).then(\n      (): void => {\n        this._toasterService.show(EToasterType.SUCCESS, '', 'common.updateSuccessful');\n        this.close();\n      },\n      (err) => {\n        console.error('GROUP UPDATE ERROR', err);\n      }\n    );\n  }\n  */\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">{{ 'units.editFloorMap' | translate }}</div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body class=\"p-2\">\n    <form [formGroup]=\"dialogForm!\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <bgap-floor-map-editor\n        [editMode]=\"true\"\n        [floorMap]=\"unit.floorMap\"\n      ></bgap-floor-map-editor>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n\n    <!--form [formGroup]=\"rawForm\" (ngSubmit)=\"submitRaw()\" [autocomplete]=\"false\">\n      <textarea class=\"w-100\" height=\"100\" [formControl]=\"rawForm.controls['floorMap']\"></textarea>\n\n      <div class=\"mt-20\">\n        <button nbButton size=\"small\" type=\"submit\" fullWidth status=\"primary\" [disabled]=\"dialogForm.invalid\">\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form-->\n  </nb-card-body>\n</nb-card>\n","import { AdminPagesUnitsModule } from './lib/admin-pages-units.module';\n\nexport { AdminPagesUnitsModule };\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { AdminSharedComponentsModule } from '@bgap/admin/shared/components';\nimport { AdminSharedFloorMapModule } from '@bgap/admin/shared/floor-map';\nimport { AdminSharedFormsModule } from '@bgap/admin/shared/forms';\nimport { AdminSharedPipesModule } from '@bgap/admin/shared/pipes';\nimport { NbEvaIconsModule } from '@nebular/eva-icons';\nimport {\n  NbButtonModule,\n  NbCardModule,\n  NbCheckboxModule,\n  NbIconModule,\n  NbInputModule,\n  NbLayoutModule,\n  NbListModule,\n  NbSpinnerModule,\n  NbUserModule,\n} from '@nebular/theme';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { UnitFloorMapComponent } from './components/unit-floor-map/unit-floor-map.component';\nimport { UnitFormComponent } from './components/unit-form/unit-form.component';\nimport { UnitListItemComponent } from './components/unit-list-item/unit-list-item.component';\nimport { UnitListComponent } from './components/unit-list/unit-list.component';\n\nconst NB_MODULES = [\n  NbLayoutModule,\n  NbCardModule,\n  NbListModule,\n  NbUserModule,\n  NbIconModule,\n  NbInputModule,\n  NbEvaIconsModule,\n  NbButtonModule,\n  NbCheckboxModule,\n  NbSpinnerModule,\n];\n\n@NgModule({\n  declarations: [\n    UnitListComponent,\n    UnitListItemComponent,\n    UnitFormComponent,\n    UnitFloorMapComponent,\n  ],\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AdminSharedComponentsModule,\n    AdminSharedFormsModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AdminSharedPipesModule,\n    AdminSharedFloorMapModule,\n    RouterModule.forChild([\n      {\n        component: UnitListComponent,\n        path: '',\n      },\n    ]),\n    ...NB_MODULES,\n  ],\n})\nexport class AdminPagesUnitsModule {}\n","import { cloneDeep as _cloneDeep } from 'lodash-es';\n\nimport { Component, Input } from '@angular/core';\nimport { DataService } from '@bgap/admin/shared/data-access/data';\nimport { IUnit } from '@bgap/shared/types';\nimport { NbDialogService } from '@nebular/theme';\n\nimport { UnitFloorMapComponent } from '../unit-floor-map/unit-floor-map.component';\nimport { UnitFormComponent } from '../unit-form/unit-form.component';\n\n@Component({\n  selector: 'bgap-unit-list-item',\n  templateUrl: './unit-list-item.component.html',\n  styleUrls: ['./unit-list-item.component.scss'],\n})\nexport class UnitListItemComponent {\n  @Input() unit!: IUnit;\n  public workingGenerateStatus = false;\n\n  constructor(\n    private _nbDialogService: NbDialogService,\n    private _dataService: DataService\n  ) {}\n\n  public editUnit(): void {\n    const dialog = this._nbDialogService.open(UnitFormComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.unit = _cloneDeep(this.unit);\n  }\n\n  public editUnitFloorMap(): void {\n    const dialog = this._nbDialogService.open(UnitFloorMapComponent, {\n      dialogClass: 'form-dialog',\n    });\n\n    dialog.componentRef.instance.unit = _cloneDeep(this.unit);\n  }\n\n  public regenerateData(): void {\n    this.workingGenerateStatus = true;\n    this._dataService.regenerateUnitData(this.unit._id).then((): void => {\n      this.workingGenerateStatus = false;\n    });\n  }\n}\n","<div class=\"float-left\">\n  <div class=\"subtitle-2\">\n    {{ unit!.name }}\n    <bgap-status-led class=\"ml-1\" [status]=\"unit.isActive\"></bgap-status-led>\n  </div>\n  <div class=\"caption\">{{ unit!.description! | localize }}</div>\n  <bgap-contact [contact]=\"unit\"></bgap-contact>\n\n  <div class=\"caption\">\n    <nb-icon icon=\"globe-outline\"></nb-icon\n    ><strong>{{ unit!._group?.name }}</strong>\n  </div>\n</div>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right\"\n  [title]=\"'common.edit' | translate\"\n  (click)=\"editUnit()\"\n>\n  <nb-icon icon=\"edit-outline\"></nb-icon>\n</button>\n\n<button\n  nbButton\n  shape=\"round\"\n  size=\"tiny\"\n  class=\"float-right mr-2\"\n  [title]=\"'units.editFloorMap' | translate\"\n  (click)=\"editUnitFloorMap()\"\n>\n  <nb-icon icon=\"map-outline\"></nb-icon>\n</button>\n\n<button\n  [nbSpinner]=\"workingGenerateStatus\"\n  nbSpinnerStatus=\"control\"\n  nbButton\n  type=\"button\"\n  shape=\"round\"\n  status=\"danger\"\n  size=\"tiny\"\n  class=\"float-right mr-4\"\n  (click)=\"regenerateData()\"\n>\n  {{ 'units.regenerateMenu' | translate }}\n</button>\n","import { get as _get, omit as _omit, pick as _pick } from 'lodash-es';\nimport { take } from 'rxjs/operators';\n\n/* eslint-disable @typescript-eslint/dot-notation */\nimport { Component, Injector, OnInit } from '@angular/core';\nimport { FormArray, Validators } from '@angular/forms';\nimport {\n  AbstractFormDialogComponent,\n  FormsService,\n} from '@bgap/admin/shared/forms';\nimport { groupsSelectors } from '@bgap/admin/shared/data-access/groups';\nimport { loggedUserSelectors } from '@bgap/admin/shared/data-access/logged-user';\nimport {\n  contactFormGroup,\n  EToasterType,\n  multiLangValidator,\n  PAYMENT_MODES,\n  TIME_FORMAT_PATTERN,\n  unitOpeningHoursValidator,\n} from '@bgap/admin/shared/utils';\nimport {\n  ICustomDailySchedule,\n  IGroup,\n  IKeyValue,\n  ILane,\n  ILanesObject,\n  IPaymentMode,\n  IUnit,\n} from '@bgap/shared/types';\nimport { UntilDestroy, untilDestroyed } from '@ngneat/until-destroy';\nimport { select, Store } from '@ngrx/store';\n\n@UntilDestroy()\n@Component({\n  selector: 'bgap-unit-form',\n  templateUrl: './unit-form.component.html',\n})\nexport class UnitFormComponent\n  extends AbstractFormDialogComponent\n  implements OnInit {\n  public unit!: IUnit;\n  public paymentModes = PAYMENT_MODES;\n  public groupOptions: IKeyValue[] = [];\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private _store: Store<any>;\n  private _formsService: FormsService;\n  private groups: IGroup[] = [];\n\n  constructor(protected _injector: Injector) {\n    super(_injector);\n\n    this._store = this._injector.get(Store);\n    this._formsService = this._injector.get(FormsService);\n    this._store\n      .pipe(\n        select(groupsSelectors.getSelectedChainGroups),\n        untilDestroyed(this)\n      )\n      .subscribe((groups: IGroup[]): void => {\n        this.groups = groups;\n\n        this.groupOptions = this.groups.map(\n          (group: IGroup): IKeyValue => ({\n            key: group._id,\n            value: group.name,\n          })\n        );\n      });\n\n    this.dialogForm = this._formBuilder.group({\n      groupId: ['', [Validators.required]],\n      chainId: ['', [Validators.required]],\n      isActive: ['', [Validators.required]],\n      name: ['', [Validators.required]],\n      description: this._formBuilder.group(\n        {\n          hu: [''],\n          en: [''],\n          de: [''],\n        },\n        { validators: multiLangValidator }\n      ),\n      paymentModes: [[]],\n      ...contactFormGroup(this._formBuilder),\n      open: this._formBuilder.group({\n        from: [''],\n        to: [''],\n      }),\n      openingHours: this._formBuilder.group(\n        {\n          mon: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          tue: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          wed: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          thu: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          fri: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          sat: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          sun: this._formBuilder.group({\n            from: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n            to: ['', [Validators.pattern(TIME_FORMAT_PATTERN)]],\n          }),\n          override: this._formBuilder.array([]),\n        },\n        { validators: unitOpeningHoursValidator }\n      ),\n      _lanesArr: this._formBuilder.array([]), // temp array!\n    });\n  }\n\n  ngOnInit(): void {\n    if (this.unit) {\n      this.dialogForm.patchValue(this.unit);\n\n      // Parse openingHours object to temp array\n      const override: ICustomDailySchedule[] = _get(\n        this.unit,\n        'openingHours.override'\n      );\n      if (override) {\n        override.forEach((day: ICustomDailySchedule): void => {\n          const dayGroup = this._formsService.createCustomDailyScheduleFormGroup();\n          dayGroup.patchValue(day);\n\n          (<FormArray>this.dialogForm?.get('openingHours')?.get('override')).push(dayGroup);\n        });\n      }\n\n      // Parse lanes object to temp array\n      Object.keys(this.unit.lanes || {}).forEach((key: string): void => {\n        const laneGroup = this._formsService.createLaneFormGroup();\n        laneGroup.patchValue({\n          _laneId: key,\n          ...(<ILanesObject>this.unit.lanes)[key],\n        });\n        (<FormArray>this.dialogForm?.get('_lanesArr')).push(laneGroup);\n      });\n    } else {\n      // Patch ChainId\n      this._store\n        .pipe(select(loggedUserSelectors.getSelectedChainId), take(1))\n        .subscribe((selectedChainId: string | undefined | null): void => {\n          if (selectedChainId) {\n            this.dialogForm?.controls.chainId.patchValue(selectedChainId);\n          }\n        });\n\n      // Patch GroupId\n      this._store\n        .pipe(select(loggedUserSelectors.getSelectedGroupId), take(1))\n        .subscribe((selectedGroupId: string | undefined | null): void => {\n          if (selectedGroupId) {\n            this.dialogForm?.controls.groupId.patchValue(selectedGroupId);\n          }\n        });\n\n      this.dialogForm.controls.isActive.patchValue(false);\n    }\n  }\n\n  public submit(): void {\n    if (this.dialogForm?.valid) {\n      const value = {\n        ...this.dialogForm?.value,\n        lanes: {},\n      };\n\n      value._lanesArr.map((lane: ILane): void => {\n        value.lanes[lane._laneId || ''] = _omit(lane, '_laneId');\n      });\n\n      delete value._lanesArr;\n\n      if (_get(this.unit, '_id')) {\n        this._dataService.updateUnit(this.unit._id, value).then(\n          (): void => {\n            this._toasterService.show(\n              EToasterType.SUCCESS,\n              '',\n              'common.updateSuccessful'\n            );\n            this.close();\n          },\n          err => {\n            console.error('GROUP UPDATE ERROR', err);\n          }\n        );\n      } else {\n        this._dataService.insertUnit(value).then(\n          (): void => {\n            this._toasterService.show(\n              EToasterType.SUCCESS,\n              '',\n              'common.insertSuccessful'\n            );\n            this.close();\n          },\n          err => {\n            console.error('GROUP INSERT ERROR', err);\n          }\n        );\n      }\n    }\n  }\n\n  public paymentModeIsChecked(paymentMode: IPaymentMode): boolean {\n    return (\n      (this.dialogForm?.value.paymentModes || [])\n        .map((m: IPaymentMode): string => m.name)\n        .indexOf(paymentMode.name) >= 0\n    );\n  }\n\n  public togglePaymentMode(paymentMode: IPaymentMode): void {\n    const paymentModesArr: IPaymentMode[] = this.dialogForm?.value.paymentModes;\n    const idx = paymentModesArr\n      .map((m): string => m.name)\n      .indexOf(paymentMode.name);\n\n    if (idx < 0) {\n      paymentModesArr.push(_pick(paymentMode, ['name', 'method']));\n    } else {\n      paymentModesArr.splice(idx, 1);\n    }\n    this.dialogForm?.controls.paymentModes.setValue(paymentModesArr);\n  }\n}\n","<nb-card>\n  <nb-card-header>\n    <div class=\"float-left\">\n      {{ (unit?._id ? 'units.editUnit' : 'units.newUnit') | translate }}\n    </div>\n    <button\n      nbButton\n      ghost\n      shape=\"round\"\n      size=\"small\"\n      class=\"float-right\"\n      (click)=\"close()\"\n    >\n      <nb-icon icon=\"close-outline\"></nb-icon>\n    </button>\n  </nb-card-header>\n  <nb-card-body>\n    <form [formGroup]=\"dialogForm!\" (ngSubmit)=\"submit()\" [autocomplete]=\"false\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <bgap-form-text-input\n            caption=\"common.name\"\n            type=\"text\"\n            [control]=\"dialogForm.get('name')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-6\">\n          <bgap-form-select\n            caption=\"common.group\"\n            [options]=\"groupOptions\"\n            [control]=\"dialogForm.get('groupId')! | asFormControl\"\n            [localize]=\"false\"\n          ></bgap-form-select>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <bgap-form-text-input\n            caption=\"common.descriptionHU\"\n            type=\"text\"\n            [control]=\"dialogForm.get('description')!.get('hu')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <bgap-form-text-input\n            caption=\"common.descriptionEN\"\n            type=\"text\"\n            [control]=\"dialogForm.get('description')!.get('en')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-12\">\n          <bgap-form-text-input\n            caption=\"common.descriptionDE\"\n            type=\"text\"\n            [control]=\"dialogForm.get('description')!.get('de')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n      </div>\n\n      <div class=\"row\">\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"units.openFrom\"\n            type=\"date\"\n            [control]=\"dialogForm.get('open')!.get('from')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n        <div class=\"col-md-4\">\n          <bgap-form-text-input\n            caption=\"units.openTo\"\n            type=\"date\"\n            [control]=\"dialogForm.get('open')!.get('to')! | asFormControl\"\n          ></bgap-form-text-input>\n        </div>\n\n        <div class=\"col-md-4 pt-4\">\n          <bgap-form-checkbox\n            caption=\"common.isActive\"\n            [control]=\"dialogForm.get('isActive')! | asFormControl\"\n          ></bgap-form-checkbox>\n        </div>\n      </div>\n\n      <fieldset class=\"form\">\n        <legend class=\"label\">\n          {{ 'common.paymentModes.title' | translate }}\n        </legend>\n\n        <nb-checkbox\n          class=\"mr-5 mb-3\"\n          [checked]=\"paymentModeIsChecked(paymentMode)\"\n          (checkedChange)=\"togglePaymentMode(paymentMode)\"\n          *ngFor=\"let paymentMode of paymentModes\"\n        >\n          <label class=\"caption\"> {{ paymentMode.caption! | translate }}</label>\n        </nb-checkbox>\n      </fieldset>\n\n      <bgap-form-contact-group\n        [contactFormGroup]=\"dialogForm | asFormGroup\"\n      ></bgap-form-contact-group>\n\n      <bgap-form-weekly-schedule\n        [scheduleControl]=\"dialogForm.get('openingHours')! | asFormControl\"\n      ></bgap-form-weekly-schedule>\n\n      <bgap-form-unit-lanes\n        [lanesFormArray]=\"dialogForm.get('_lanesArr')! | asFormArray\"\n      ></bgap-form-unit-lanes>\n\n      <div class=\"mt-20\">\n        <button\n          nbButton\n          size=\"small\"\n          type=\"submit\"\n          fullWidth\n          status=\"primary\"\n          [disabled]=\"dialogForm.invalid\"\n        >\n          {{ 'common.submit' | translate }}\n        </button>\n      </div>\n    </form>\n  </nb-card-body>\n</nb-card>\n"],"sourceRoot":"webpack:///"}